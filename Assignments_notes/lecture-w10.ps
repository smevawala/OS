%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Wed Apr 18 02:17:14 2012
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: file runq.eps
%%+ procset grops 1.19 1
%%Pages: 12
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 60 Q
(Unit 10/pg 1)53.748 E(\2512012 Jef)124.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Scheduling)236.63 120 Q/F2 13
/Times-Roman@0 SF .291(Periodically task switches occur)33.336 156 R
6.791(.I)-.715 G 3.541(ti)-6.791 G 3.541(st)-3.541 G .291
(he job of the scheduler to pick the ne)-3.541 F .29(xt task to run)
-.195 F 1.806(on a gi)33.336 171 R -.195(ve)-.325 G 5.056(nC).195 G
5.056(PU. The)-5.056 F 1.806(scheduler must do so)5.056 F/F3 13
/Times-Italic@0 SF(fairly)5.056 E F2 5.056(,b)C 1.806(alancing se)-5.056
F -.195(ve)-.325 G 1.806(ral needs.).195 F(Although)8.306 E 4.695
(scheduling algorithms, policies and implementations v)33.336 186 R
4.694(ary greatly among operating)-.325 F 2.343
(systems and are the subject of man)33.336 201 R 5.594(yr)-.195 G 2.344
(esearch papers, we can generalize a fe)-5.594 F 5.594(wb)-.325 G(road)
-5.594 E(principles:)33.336 216 Q 3.25<8343>33.336 231 S
(PU time is a scarce resource for which tasks compete.)-3.25 E 4.238
<8345>33.336 246 S .988(ach task has an "importance", or)-4.238 F F1
.988(static priority)4.238 F F2 4.238(,w)C .988
(hich can be con\214gured directly or)-4.238 F
(indirectly by the system administrator)33.336 261 Q(.)-.715 E 3.989
<8354>33.336 276 S .739(asks should appear as responsi)-5.029 F 1.129
-.195(ve a)-.325 H 3.989(sp).195 G .739(ossible to interacti)-3.989 F
1.129 -.195(ve e)-.325 H -.195(ve)-.13 G 3.989(nts. E.g.).195 F .74
(when a k)3.99 F 1.13 -.195(ey i)-.13 H(s).195 E
(pressed or the mouse is mo)33.336 291 Q -.195(ve)-.195 G
(d, the application should respond quickly).195 E(.)-.845 E 3.51<8352>
33.336 306 S .26(eal-time tasks which must handle e)-3.51 F -.195(ve)
-.325 G .26(nts within a \214x).195 F .26(ed time interv)-.195 F .26
(al must be gi)-.325 F -.195(ve)-.325 G 3.51(nt).195 G(he)-3.51 E
(right-of-w)33.336 321 Q(ay when those e)-.13 E -.195(ve)-.325 G
(nts happen.).195 E 3.851<8354>33.336 336 S .601(asks tend to be either)
-4.891 F F1(compute-bound)3.852 E F2(or)3.852 E F1(I/O-bound)3.852 E F2
3.852(.T)C .602(he former spend most of their)-3.852 F 2.552
(time computing and thus ha)33.336 351 R 2.942 -.195(ve a h)-.26 H(ea)
.195 E 2.552(vy appetite for user)-.26 F 2.552(-mode CPU time.)-.26 F
2.552(The latter)9.052 F .323(spend most of their time w)33.336 366 R
.323(aiting for I/O.)-.13 F .323
(These classical de\214nitions are often stressed by)6.823 F .974
(media applications, e.g. a streaming video serv)33.336 381 R .974
(er which is both I/O bound with netw)-.195 F(ork)-.13 E(traf)33.336 396
Q 1.942
(\214c and compute-bound with compression and decompression algorithms.)
-.325 F(Compute)8.442 E .671(time among CPU-bound processes should be f)
33.336 411 R .671(airly distrib)-.13 F .671
(uted so that jobs complete in a)-.26 F(reasonable time.)33.336 426 Q
4.703<8354>33.336 441 S 1.453(he scheduler system itself should ha)
-4.703 F 1.843 -.195(ve a l)-.26 H 2.103 -.325(ow o).195 H -.195(ve).13
G 4.704(rhead. The).195 F(conte)4.704 E 1.454(xt switch is not a)-.195 F
(good time to be e)33.336 456 Q -.195(xe)-.195 G
(cuting complicated, long-winded algorithms.).195 E F1
(The UNIX model of priority)189.342 486 Q F2 1.691(In the classic UNIX \
priority model, the static priority of a process is represented by a)
33.336 522 R F1 1.866(nice v)33.336 537 R(alue)-.13 E F2 5.116(,r)C
1.866
(anging from -19 to +20, which weights the schedulers allocation of CPU)
-5.116 F .562(time among competing tasks.)33.336 552 R .562(The nice v)
7.062 F .562(alue is by def)-.325 F .562(ault 0.)-.13 F(Positi)7.062 E
.951 -.195(ve ")-.325 H .561(nice" v).195 F .561(alues gi)-.325 F -.195
(ve)-.325 G 5.036(at)33.336 567 S 1.786(ask poorer static priority)
-5.036 F 5.036(,i)-.845 G 1.786
(.e. we are being "nice" to other processes on the system.)-5.036 F(Con)
33.336 582 Q -.195(ve)-.52 G(rsely).195 E 3.397(,n)-.845 G -2.925 -.195
(eg a)-3.397 H(ti).195 E .537 -.195(ve ")-.325 H .147(nice" v).195 F
.147(alues gi)-.325 F .537 -.195(ve a t)-.325 H .147(ask better than a)
.195 F -.195(ve)-.26 G .147(rage static priority).195 F 6.647(.O)-.845 G
.147(nly the)-6.647 F 1.431(superuser can gi)33.336 597 R 1.821 -.195
(ve a t)-.325 H 1.432(ask \(including itself\) a ne).195 F -.065(ga)
-.195 G(ti).065 E 1.822 -.195(ve n)-.325 H 1.432(ice v).195 F 1.432
(alue, b)-.325 F 1.432(ut an)-.26 F 4.682(yt)-.195 G 1.432(ask can gi)
-4.682 F -.195(ve)-.325 G .152(itself a positi)33.336 612 R .542 -.195
(ve v)-.325 H 3.402(alue. \(In)-.13 F .151(more modern k)3.402 F .151
(ernels, the pri)-.13 F(vile)-.325 E .151(ge to gi)-.195 F .541 -.195
(ve n)-.325 H -2.925 -.195(eg a).195 H(ti).195 E .541 -.195(ve n)-.325 H
.151(ice v).195 F(alues)-.325 E
(is \214ne-grained and not necessarily link)33.336 627 Q(ed to ha)-.13 E
(ving uid==0\).)-.26 E 1.757(This counter)33.336 648 R(-intuiti)-.26 E
2.147 -.195(ve i)-.325 H -2.405 -.52(nv e).195 H 1.757
(rsion of the sense of priority is historic and ingrained in the).52 F
1.055(UNIX/POSIX standards.)33.336 663 R 1.054(In recent Linux k)7.554 F
1.054(ernels, the static priority le)-.13 F -.195(ve)-.325 G 1.054
(ls range from 0).195 F .273(to 99, with 0 being the lo)33.336 678 R
.273(west \(w)-.325 F .273(orst\) and 99 being the best.)-.13 F .273
(These priority le)6.773 F -.195(ve)-.325 G .273(ls are not).195 F
(the same as the nice v)33.336 693 Q(alue.)-.325 E 2.502
(Static priority le)33.336 714 R -.195(ve)-.325 G 2.501
(ls from 1 to 99 are reserv).195 F 2.501(ed for)-.195 F F1 -.234(re)
5.751 G 2.501(al time tasks).234 F F2 9.001(.T)C 2.501(hese tasks are)
-9.001 F 1.788(scheduled strictly by static priority)33.336 729 R 5.038
(,t)-.845 G 1.789(he thinking being that a more important real-time)
-5.038 F .381
(task, such as the control rod algorithm in an nuclear plant, should al)
33.336 744 R -.13(wa)-.13 G .381(ys run when it has).13 F 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 2)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.285(to, e)33.336 120 R -.195(ve)-.325 G
4.535(ni).195 G 4.535(fal)-4.535 G 1.285
(ess important task \(such as the plant')-4.535 F 4.536(sp)-.715 G 1.286
(ayroll system\) has been w)-4.536 F 1.286(aiting a)-.13 F(really)33.336
135 Q 3.872(,r)-.845 G .622(eally long time for some CPU.)-3.872 F .622
(The static priority le)7.122 F -.195(ve)-.325 G 3.871(lo).195 G 3.871
(f0i)-3.871 G 3.871(su)-3.871 G .621(sed for "normal")-3.871 F 1.29
(\(non real-time\) tasks, and the nice v)33.336 150 R 1.291
(alue is used to establish a static sub-priority within)-.325 F
(the class of non real-time tasks.)33.336 165 Q/F2 13/Times-Bold@0 SF
(Real-T)220.926 195 Q(ime T)-.234 E(asks)-1.196 E F1 6.912
(Real-time tasks under LINUX are assigned to scheduler class)33.336 231
R/F3 13/Courier@0 SF(SCHED_RR)10.162 E F1(or)10.162 E F3(SCHED_FIFO)
33.336 246 Q F1 7.723(.A)C 1.223
(SCHED_FIFO task will continue to run until it either sleeps, is pre-)
-3.25 F 4.569
(empted by another real-time task with higher static priority)33.336 261
R 7.819(,o)-.845 G 7.819(rv)-7.819 G 4.568(oluntarily yields)-8.079 F
(\()33.336 276 Q F3(sched_yield)A F1(system call\).)3.25 E 4.056(AS)
33.336 297 S .806(CHED_RR task runs in "round-robin" f)-4.056 F 4.056
(ashion. It)-.13 F .806(is gi)4.056 F -.195(ve)-.325 G 4.056(nac).195 G
.806(ertain \214x)-4.056 F(ed)-.195 E F2(Quantum)4.056 E F1(,)A(or)
33.336 312 Q F2 -.234(Ti)3.336 G(me-Slice).234 E F1 3.336(,w)C .086
(hich is con\214gurable on a per)-3.336 F .086(-task basis.)-.26 F .086
(When it has run for that amount)6.586 F .49
(of time, it will yield, allo)33.336 327 R .491
(wing another SCHED_RR task at the same priority le)-.325 F -.195(ve)
-.325 G 3.741(lt).195 G 3.741(or)-3.741 G(un.)-3.741 E 1.266(SCHED_RR t\
asks will also be pre-empted by real-time tasks with higher priorities \
that)33.336 342 R(become ready to run, and will al)33.336 357 Q -.13(wa)
-.13 G(ys pre-empty lo).13 E(wer priority tasks.)-.325 E 2.822
(Historically only the superuser could establish real-time tasks.)33.336
378 R 2.823(Under modern Linux)9.323 F -.13(ke)33.336 393 S
(rnels, this capability is re).13 E
(gulated by the rlimit_rtprio resource limit.)-.195 E F2(Quantum)240.608
423 Q F1 1.469(The amount of time that a task has the CPU before being \
rescheduled is kno)33.336 459 R 1.469(wn as the)-.325 F 3.629
(Quantum or the T)33.336 474 R 3.629(ime Slice.)-.455 F 3.629
(Scheduling algorithms v)10.129 F(ary)-.325 E 10.129(.T)-.845 G 3.629
(he time slice could be)-10.129 F .505(completely static, determined dy\
namically when the task is scheduled in and then not re-)33.336 489 R
-.325(eva)33.336 504 S(luated until the ne).325 E
(xt time it gets the CPU, or re-e)-.195 E -.325(va)-.325 G(luated at e)
.325 E -.195(ve)-.325 G(ry scheduler tick.).195 E F2
(The Old Linux Scheduler vs the CFS scheduler)136.777 534 Q F1 3.488
(The Linux scheduler which w)33.336 570 R 3.488(as in use until a fe)
-.13 F 6.738(wy)-.325 G 3.489(ears ago w)-6.738 F 3.489
(as called the O\(1\))-.13 F(scheduler)33.336 585 Q 6.969(.I)-.715 G
3.719(tf)-6.969 G(ollo)-3.719 E .469
(wed the classic UNIX model in using an array of link)-.325 F .468
(ed lists, the array)-.13 F .377(being inde)33.336 600 R -.195(xe)-.195
G 3.627(db).195 G 3.627(yt)-3.627 G .377(he dynamic priority le)-3.627 F
-.195(ve)-.325 G .377(l, which ranged from 1 to 140, with 140 being).195
F(the)33.336 615 Q/F4 13/Times-Italic@0 SF(wor)3.25 E(st)-.13 E F1(.)A
.282(This scheduler is presented as an appendix, as it highlights some \
interesting design trade-)33.336 636 R(of)33.336 651 Q 3.49(fs. The)
-.325 F(adv)3.491 E .241(antage of the O\(1\) scheduler w)-.325 F .241
(as that both selection of the ne)-.13 F .241(xt process and)-.195 F
.738(insertion of the process into the run queue array w)33.336 666 R
.738(as constant time.)-.13 F .738(Therefore not much)7.238 F(CPU w)
33.336 681 Q(as being spent at each time slice tick to)-.13 E -.13(wa)
-.325 G(rds scheduler computation.).13 E .396(It w)33.336 702 R .397(as\
 found that in order to satisfy all of the needs of scheduling, in part\
icular balancing)-.13 F .767(CPU vs I/O bound processes, a number of "k\
luges" had crept in, and the O\(1\) scheduler)33.336 717 R 1.487
(did not perform well when scaled to lar)33.336 732 R 1.488
(ge numbers of cpu-bound processes intermix)-.234 F(ed)-.195 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 3)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 4.24(with interacti)33.336 120 R 4.63
-.195(ve p)-.325 H 4.24(rocesses with a need for quick response time.)
.195 F 4.24(This lead to the)10.74 F(de)33.336 135 Q -.195(ve)-.325 G
3.835(lopment of what the Linux k).195 F 3.835
(ernel people call the "Completely F)-.13 F 3.835(air Scheduler)-.195 F
3.958(\(CFS\)". CFS)33.336 150 R .708(departs from traditional schedule\
r practice in that the time slice is not pre-)3.958 F 1.128
(determined when the task is \214rst scheduled, b)33.336 165 R 1.128
(ut is re-e)-.26 F -.325(va)-.325 G 1.128(luated at each clock tick.)
.325 F(This)7.629 E .993(results in more w)33.336 180 R .993
(ork at each tick, b)-.13 F .992
(ut with CPU clock rates breaking through the multi-)-.26 F .188(GHz le)
33.336 195 R -.195(ve)-.325 G .189
(l, while clock ticks remain at 1 msec, the percent o).195 F -.195(ve)
-.195 G .189(rhead for this approach has).195 F(been less important.)
33.336 210 Q/F2 13/Times-Bold@0 SF(Ideal and practical latency)193.489
240 Q F1 .981(In the ideal w)33.336 276 R .981(orld, if there were 4 ru\
nnable processes of the same priority \("nice" le)-.13 F -.195(ve)-.325
G(l\)).195 E(the)33.336 291 Q 5.928(ys)-.195 G 2.678(hould all recei)
-5.928 F 3.068 -.195(ve e)-.325 H 2.678(qual distrib).195 F 2.678
(ution of CPU time, and w)-.26 F 2.678(ould ha)-.13 F 3.068 -.195(ve t)
-.26 H 2.678(he smallest).195 F(possible)33.336 306 Q F2(latency)3.892 E
F1 7.142(.L)C(atenc)-7.142 E 3.892(yi)-.195 G 3.892(sd)-3.892 G .642
(e\214ned as ho)-3.892 F 3.891(wm)-.325 G .641
(uch time elapses from when a task is pre-)-3.891 F
(empted to when it gets the CPU ag)33.336 321 Q(ain.)-.065 E .297
(As a practical matter)33.336 342 R 3.547(,t)-.52 G .297(he latenc)
-3.547 F 3.547(yh)-.195 G .297(as a lo)-3.547 F .297
(wer bound, because otherwise the system w)-.325 F(ould)-.13 E .755
(spend most of its time in task switches, instead of doing useful w)
33.336 357 R 4.005(ork. There)-.13 F .754(is a system)4.004 F 3.43
(tunable parameter \(it can be set via)33.336 372 R/F3 13/Courier@0 SF
(sysctl)6.681 E F1 6.681(\)c)C(alled)-6.681 E F3(sched_latency_ns)6.681
E F1(which)6.681 E 2.93(de\214nes the tar)33.336 387 R 2.929
(get ideal latenc)-.234 F 6.179(yp)-.195 G 6.179(eriod. It)-6.179 F
2.929(is by def)6.179 F 2.929(ault 5 msec.)-.13 F 2.929
(So if there were 5)9.429 F .86(runnable processes, each w)33.336 402 R
.86(ould get 1msec of CPU and then be pre-empted.)-.13 F .86(This w)7.36
F(ould)-.13 E(satisfy the 5msec latenc)33.336 417 Q -.845(y.)-.195 G(Ho)
33.336 438 Q(we)-.325 E -.195(ve)-.325 G 1.042 -.52(r, a).195 H 3.252
(st).52 G .002(he number of runnable processes increases, the cost of m\
aking the time slice)-3.252 F -2.795 -.325(ev e)33.336 453 T 4.131(rs)
.325 G .881(maller to satisfy the tar)-4.131 F .881(get latenc)-.234 F
4.131(yw)-.195 G .881(ould become prohibiti)-4.261 F -.195(ve)-.325 G
7.381(.T).195 G .881(herefore there is a)-7.381 F(cutof)33.336 468 Q
4.316(fv)-.325 G 1.065(alue of minimum time period which is by def)
-4.641 F 1.065(ault 1msec, which also happens to)-.13 F 1.833
(be the def)33.336 483 R 1.834(ault clock tick time period.)-.13 F 1.834
(So if there are 10 runnable tasks and the tar)8.334 F(get)-.234 E
(latenc)33.336 498 Q 3.25(yi)-.195 G 3.25(s5)-3.25 G
(msec, the time slice is not 500nsec, b)-3.25 E(ut 1msec.)-.26 E F2
-.845(We)215.225 528 S(ighted timeslice).845 E F1 2.852(The "nice" v)
33.336 564 R 2.851(alue, under the Linux CFS scheduler)-.325 F 6.101(,i)
-.52 G 6.101(sap)-6.101 G 2.851(rocess scheduling "weight".)-6.101 F
.516(There are 39 nice steps \(-20 to +19\).)33.336 579 R .517
(Each nice step represents a 10% relati)7.017 F .907 -.195(ve d)-.325 H
(if).195 E(ference)-.325 E .234(in CPU allocation.)33.336 594 R .234
(\(This is a purely Linux interpretation of nice v)6.734 F .234
(alues -- other operating)-.325 F(systems may ha)33.336 609 Q .39 -.195
(ve ve)-.26 H(ry dif).195 E(ferent policies\).)-.325 E(Let')33.336 630 Q
4.064(ss)-.715 G .814(ay process A has a nice v)-4.064 F .815
(alue of 0 and process B has a nice v)-.325 F .815(alue of 1, and these)
-.325 F 1.812(are the only tw)33.336 645 R 5.062(or)-.13 G 1.811
(unnable processes.)-5.062 F 1.811(Then the weight W)8.311 F 1.811
(A=1.00, and WB=0.800.)-1.56 F -1.04(We)8.311 G .286
(de\214ne the "load weight" L)33.336 660 R 3.536(Wa)-.962 G 3.536(st)
-3.536 G .286(he sum of the weights of all runnable tasks.)-3.536 F .286
(In this case,)6.786 F -.962(LW)33.336 675 S 7.331(=1.800. Then).962 F
4.08(the CPU allocation of an)7.331 F 7.33(yt)-.195 G 4.08
(ask n is w=Wn/L)-7.33 F 9.722 -1.196(W. F)-.962 H 4.08(or A this is)
1.001 F 1.866(1.00/1.800=55.5% and for B = 0.800/1.800 = 44.4%.)33.336
690 R 1.866(Thus we see that the dif)8.366 F(ference)-.325 E 1.75
(between tw)33.336 705 R 5(ot)-.13 G 1.75(asks separated by one nice le)
-5 F -.195(ve)-.325 G 5(li).195 G 5(sa)-5 G 1.75(pproximately 10%.)-5 F
1.75(This formula is)8.25 F(log)33.336 720 Q 3.598(arithmic. If)-.065 F
3.598(Ah)3.598 G .348(ad a nice v)-3.598 F .348
(alue of -20 and B +19, A w)-.325 F .349(ould get 99.9% of the CPU and)
-.13 F 3.25(Bw)33.336 735 S(ould get just 0.1%.)-3.38 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 4)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.387(If the tar)33.336 120 R 1.387
(get latenc)-.234 F 4.637(yi)-.195 G 4.637(sL)-4.637 G 4.637(,t)-4.637 G
1.387(hen the tar)-4.637 F 1.386
(get timeslice period P=L/NR, subject to the lo)-.234 F(wer)-.325 E
1.662(bounding discussed abo)33.336 135 R -.195(ve)-.195 G 8.162(.L).195
G(et')-8.162 E 4.912(ss)-.715 G 1.662(ay L=20 msec and the abo)-4.912 F
2.052 -.195(ve t)-.195 H 1.663(asks A and B are the).195 F 2.463
(only runnable tasks so NR=2.)33.336 150 R 2.463(Then P=10ms.)8.963 F
2.462(The weighted timeslice of a task n is)8.963 F(Sn=P*Wn/L)33.336 165
Q 5.908 -1.196(W. T)-.962 H .266(herefore, A w)1.196 F .266(ould ha)-.13
F .656 -.195(ve a w)-.26 H .267(eighted timeslice of 5.55msec, and B w)
.195 F(ould)-.13 E(get 4.45msec.)33.336 180 Q .226(This algorithm e)
33.336 201 R .226(xtends tri)-.195 F .226(vially to an)-.325 F 3.476(yn)
-.195 G .226(umber of runnable processes, and insures that the)-3.476 F
(tar)33.336 216 Q .785(geted weighted timeslice of an)-.234 F 4.035(yg)
-.195 G -2.795 -.325(iv e)-4.035 H 4.035(np).325 G .786
(rocess is its "f)-4.035 F .786(air share" of the a)-.13 F -.325(va)-.26
G .786(ilable CPU,).325 F 3.57
(considering all of the other runnable processes and their weights.)
33.336 231 R 3.569(In actual k)10.069 F(ernel)-.13 E .45
(implementation, the weights are coded as inte)33.336 246 R .451
(gers, rather than the \215oating-point numbers)-.195 F(used abo)33.336
261 Q -.195(ve)-.195 G 3.25(,b).195 G(ecause the k)-3.25 E(ernel a)-.13
E -.26(vo)-.26 G(ids the use of the \215oating point re).26 E(gisters.)
-.195 E/F2 13/Times-Bold@0 SF -.481(Vi)221.537 306 S(rtual Runtime).481
E F1 2.188(Under the CFS scheduler)33.336 342 R 5.437(,t)-.52 G 2.187
(he \214gure of merit when comparing runnable processes for)-5.437 F
.841(scheduling is unfortunately called)33.336 357 R/F3 13
/Times-Italic@0 SF .842(virtual runtime)4.092 F F1 4.092(,o)C 4.092(rv)
-4.092 G 4.092(runtime. Lik)-4.092 F 4.092(em)-.13 G(an)-4.092 E 4.092
(yt)-.195 G .842(hings in the)-4.092 F 2.034(Linux k)33.336 372 R 2.034
(ernel, this is poorly named, and perhaps w)-.13 F 2.034
(ould better be called the "weighted)-.13 F(actual runtime share".)
33.336 387 Q .338
(The idealized allocation of timeslice presented in the pre)33.336 408 R
.338(vious section can not be realized)-.325 F 2.008(in practice becaus\
e 1\) pre-emption only happens during a scheduler tick, which has a)
33.336 423 R 2.23(granularity of \(typically\) 1 msec, and 2\) while a \
task is running, other tasks a)33.336 438 R -.13(wa)-.195 G -.13(ke).13
G(n,).13 E(changing the weighted load.)33.336 453 Q(Whene)33.336 474 Q
-.195(ve)-.325 G 4.319(rt).195 G 1.068
(he scheduler tick occurs, the vruntime of the running process \()-4.319
F/F4 13/Courier@0 SF(current)A F1 4.318(\)i)C(s)-4.318 E .911
(updated: vruntime+= T/w)33.336 489 R 4.161(,w)-.845 G .912
(here T is the amount of time elapsed since the last time the)-4.161 F
.464(load w)33.336 504 R .464(as e)-.13 F .464
(xamined \(typically since the last clock tick\) and w is the relati)
-.195 F .854 -.195(ve w)-.325 H .464(eight of the).195 F .545
(process \(Wn/L)33.336 519 R 3.795(W\). The)-.962 F .545
(higher the relati)3.795 F .935 -.195(ve w)-.325 H .545
(eight, the less vruntime will be "char).195 F .545(ged" to)-.234 F
(the current process.)33.336 534 Q(The vruntime is cummulati)6.5 E .39
-.195(ve f)-.325 H(or the life of the process.).195 E 1.003
(Therefore, the lo)33.336 555 R 1.003
(wer the vruntime of a process, the greater is its relati)-.325 F 1.392
-.195(ve m)-.325 H 1.002(erit for being).195 F .712(scheduled no)33.336
570 R 2.402 -.845(w, i)-.325 H .712(.e. its dynamic priority).845 F
7.212(.T)-.845 G .712(he process with the lo)-7.212 F .713
(west vruntime of all the)-.325 F
(runnable proceses is the one which should be on the CPU.)33.336 585 Q
1.7(The CFS scheduler maintains a data structure \(it is implemented as\
 a red-black binary)33.336 606 R 1.929(tree with caching of the lo)
33.336 621 R 1.93(west element\) to k)-.325 F 1.93
(eep all of the runnable tasks in order by)-.13 F 3.25(vruntime. Retrie)
33.336 636 R -.325(va)-.325 G 3.25(lo).325 G 3.25(ft)-3.25 G(he "ne)
-3.25 E(xt best" task to run is therefore constant time.)-.195 E 1.797
(When e)33.336 657 R 1.797(xamined in \214ne-grain detail, the actual t\
imeslices of tasks will not match their)-.195 F .339("ideal" computed v)
33.336 672 R 3.589(alue. But)-.325 F .34(on the a)3.589 F -.195(ve)-.26
G .34(rage o).195 F -.195(ve)-.195 G 3.59(ral).195 G .34
(onger period of time, the selection of)-3.59 F 1.33(the ne)33.336 687 R
1.33(xt task to run based on lo)-.195 F 1.329
(west vruntime will result in an equitable distrib)-.325 F 1.329
(ution of)-.26 F 2.005
(CPU time which is approximately equal to that which w)33.336 702 R
2.005(ould ha)-.13 F 2.395 -.195(ve b)-.26 H 2.005(een obtained if it)
.195 F 1.696(were possible to implement the ideal weighted timeslice.)
33.336 717 R 1.695(This is depicted belo)8.195 F 3.385 -.845(w, w)-.325
H(ith).845 E 2.986(tasks A and B as pre)33.336 732 R 2.986
(viously described ha)-.325 F 2.986(ving weights of 1.00 and 0.80.)-.26
F 2.987(The ideal)9.487 F 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 5)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .427(timeslices of 5.55 and 4.45 msec mu\
st be rounded up to 6 and 5, because it is impossible)33.336 120 R .8
(to gi)33.336 135 R 1.19 -.195(ve a t)-.325 H .8
(ask a timeslice which is a fraction of the tick time.).195 F(Ev)7.301 E
.801(ery time A runs, it gets)-.195 F(char)33.336 150 Q .655
(ged 6*1.0=6.0 of vruntime, b)-.234 F .655
(ut when B runs for 5msec, it gets char)-.26 F .655(ged 5/0.80=6.25.)
-.234 F 1.694(The tw)33.336 165 R 4.944(ot)-.13 G 1.694
(asks will alternate running for their respecti)-4.944 F 2.085 -.195
(ve t)-.325 H 1.695(imeslices, b).195 F 1.695(ut each time A is)-.26 F
2.631(being cheated of 0.55 msec and B is getting 0.55 msec bonus time.)
33.336 180 R(Ev)9.13 E(entually)-.195 E 5.88(,t)-.845 G(he)-5.88 E
(vruntime catches up with B and it skips one turn.)33.336 195 Q 16.25
(Current Slice VRA)33.336 216 R(VRB)24.011 E .52 LW 220.744 221.25
33.336 221.25 DL 220.744 223.25 33.336 223.25 DL 44.597(00)148.522 235 S
36.829(A6)48.5 250 S 28.886(ms 6)-36.829 F(0)44.597 E 44.772(B5)48.858
265 S 36.472(66)-5.051 G(.25)-36.472 E 44.415(A6)48.5 280 S 29.972
(12 6.25)-7.944 F 44.772(B5)48.858 295 S 29.972(12 13.5)-8.301 F 44.415
(A6)48.5 310 S 29.972(18 13.5)-7.944 F 44.772(B5)48.858 325 S 26.722
(18 19.75)-8.301 F 44.415(A6)48.5 340 S 26.722(24 19.75)-7.944 F 44.772
(B5)48.858 355 S 34.847(24 26)-8.301 F(...)100.676 370 Q 44.415(A6)48.5
385 S 20.222(570 575.75)-11.194 F 44.772(B5)48.858 400 S 28.347(576 582)
-11.551 F 44.415(A6)48.5 415 S 28.347(582 582)-11.194 F 44.415(A6)48.5
430 S 28.347(588 582)-11.194 F 44.772(B5)48.858 445 S 20.222(588 588.25)
-11.551 F 175.244 204.25 175.244 448.25 DL 128.301 204.25 128.301 448.25
DL 82.801 204.25 82.801 448.25 DL/F2 13/Times-Bold@0 SF
(Scheduler interactions with f)177.766 466 Q(ork)-.325 E F1 .352
(In the CFS scheduler)33.336 502 R 3.602(,u)-.52 G .353
(pon a fork, the child process inherits the vruntime of the parent at)
-3.602 F .703(the time of the fork.)33.336 517 R .703(This some)7.203 F
.703(what mitig)-.325 F .703
(ates the cheating that could otherwise occur if)-.065 F
(child processes were gi)33.336 532 Q -.195(ve)-.325 G 3.25(na0i).195 G
(nitial vruntime.)-3.25 E F2(The Scheduler T)212.918 577 Q(ick)-.234 E
F1 .155(The periodic interv)33.336 613 R .155
(al timer \214res at a speci\214c rate \(typically once e)-.325 F -.195
(ve)-.325 G .155(ry millisecond\).).195 F(This)6.655 E(causes)33.336 628
Q/F3 13/Courier@0 SF(scheduler_tick\(\))3.25 E F1
(to be called in an interrupt conte)3.25 E(xt.)-.195 E 1.191(If the cur\
rent task has been running for longer than its weight-adjusted tar)
33.336 649 R 1.191(get timeslice,)-.234 F 2.196
(then the TIF_NEED_RESCHED \215ag is set, which mak)33.336 664 R 2.196
(es it a candidate for a conte)-.13 F(xt)-.195 E 1.322
(switch when the tick interrupt returns to user mode.)33.336 679 R 1.321
(Of course, if there are no "better")7.822 F
(tasks to run, it will not be switched out.)33.336 694 Q 2.498
(It is also possible that the distrib)33.336 715 R 2.498
(ution of weights has changed since the current task)-.26 F .106
(started running, because other tasks ha)33.336 730 R .496 -.195(ve e)
-.26 H .106(ither gone to sleep or w).195 F(ok)-.13 E .105(en up.)-.13 F
.105(So e)6.605 F -.195(ve)-.325 G 3.355(ni).195 G 3.355(ft)-3.355 G(he)
-3.355 E .391(current task has not yet completed its time slice, its TI\
F_NEED_RESCHED \215ag may get)33.336 745 R 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 6)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 3.25(set. This)33.336 120 R
(will happen if there is another task which has no)3.25 E 3.25(wb)-.325
G(ecome "better)-3.25 E(.")-.715 E/F2 10/Courier@0 SF
(void scheduler_tick\(void\))33.336 144 Q({)33.336 156 Q
(int cpu = smp_processor_id\(\);)81.336 168 Q
(struct rq *rq = cpu_rq\(cpu\);)81.336 180 Q
(struct task_struct *curr = rq->curr;)81.336 192 Q 4.8
(sched_clock_tick\(\); //)81.336 216 R(Update the system clock)6 E
(raw_spin_lock\(&rq->lock\);)81.336 240 Q(update_rq_clock\(rq\);)81.336
252 Q(update_cpu_load\(rq\);)81.336 264 Q
(/* Invoke the scheduler class specific tick routine)90.936 276 Q
(For normal tasks, this lands at entity_tick\(\) below)148.536 288 Q(*/)
90.936 300 Q(curr->sched_class->task_tick\(rq, curr, 0\);)81.336 312 Q
(raw_spin_unlock\(&rq->lock\);)81.336 324 Q(})33.336 348 Q
(/* The run queue cfs_rq represents all of the runnable tasks for)33.336
384 Q(this processor.)90.936 396 Q
(The sched_entity is a part of the task_struct)12 E
(that tracks scheduler statistics)90.936 408 Q(*/)33.336 420 Q(entity_t\
ick\(struct cfs_rq *cfs_rq, struct sched_entity *curr, int queued\))
33.336 444 Q({)33.336 456 Q
(/* Update the scheduling stats for curr, including vruntime */)90.936
468 Q(update_curr\(cfs_rq\);)81.336 480 Q
(/* If there are other runnable tasks on this runqueue,)90.936 492 Q
(check if we should be preempted */)148.536 504 Q
(if \(cfs_rq->nr_running > 1\))81.336 516 Q
(check_preempt_tick\(cfs_rq, curr\);)129.336 528 Q(})33.336 540 Q
(check_preempt_tick\(struct cfs_rq *cfs_rq, struct sched_entity *curr\))
33.336 564 Q({)33.336 576 Q(unsigned long ideal_runtime, delta_exec;)
81.336 588 Q
(/* Calculate the "ideal" timeslice as discussed in the text */)90.936
612 Q(ideal_runtime = sched_slice\(cfs_rq, curr\);)81.336 624 Q
(/* delta_exec is how long curr has been running */)90.936 636 Q
(delta_exec = curr->sum_exec_runtime - curr->prev_sum_exec_runtime;)
81.336 648 Q(if \(delta_exec > ideal_runtime\) {)81.336 660 Q
(/* We have run for more than our ideal timeslice, preempt */)148.536
672 Q(/* resched_task basically sets the TIF_NEED_RESCHED flag */)
148.536 684 Q(resched_task\(rq_of\(cfs_rq\)->curr\);)129.336 696 Q
(return;)129.336 708 Q(})81.336 720 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 7)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF
(/* If the WAKEUP_PREEMPT scheduler feature is not configured, then)
90.936 117 Q
(woken-up tasks never preempt a running task, so if the above)148.536
129 Q(check for our timeslice is fine, we just keep running until)
148.536 141 Q(our timeslice is up)148.536 153 Q(*/)90.936 165 Q
(if \(!sched_feat\(WAKEUP_PREEMPT\)\))81.336 177 Q(return;)129.336 189 Q
(/* If the current task has just started running, it wouldn't be)90.936
213 Q(nice to preempt it now.)148.536 225 Q(Maybe later.)12 E(*/)90.936
237 Q(if \(delta_exec < sysctl_sched_min_granularity\))81.336 249 Q
(return;)129.336 261 Q
(/* Otherwise, if there are other runnable tasks in our run queue,)
90.936 285 Q(AND the "next best" task has a lower vruntime than us,)
148.536 297 Q(AND it is better by the value of our time slice or more,)
148.536 309 Q(THEN we get preempted)148.536 321 Q(*/)90.936 333 Q
(if \(cfs_rq->nr_running > 1\) {)81.336 345 Q
(//__pick_next_entity picks runnable task with lowest vruntime)148.536
357 Q(struct sched_entity *se = __pick_next_entity\(cfs_rq\);)129.336
369 Q(long delta = curr->vruntime - se->vruntime;)129.336 381 Q
(if \(delta > ideal_runtime\))129.336 405 Q
(resched_task\(rq_of\(cfs_rq\)->curr\);)177.336 417 Q(})81.336 429 Q(})
33.336 441 Q/F2 13/Times-Bold@0 SF(Interacti)199.944 471 Q .26 -.13
(ve p)-.13 H(erf).13 E(ormance)-.325 E/F3 13/Times-Roman@0 SF 1.286
(The vruntime approach naturally f)33.336 507 R -.26(avo)-.13 G 1.285
(rs a process that has w).26 F(ok)-.13 E 1.285
(en up after a long sleep,)-.13 F 3.375
(because its vruntime has not been incremented.)33.336 522 R 3.375
(When a process W is a)9.875 F -.13(wo)-.195 G -.13(ke).13 G 3.375
(n, its).13 F 3.038(vruntime is compared to the current process C.)
33.336 537 R 3.037(If VR\(W\)>VR\(C\), then the current)9.538 F .723
(process is still "better" than the a)33.336 552 R -.13(wo)-.195 G -.13
(ke).13 G .724(n, and it will not be pre-empted.).13 F .724
(This can happen)7.224 F(if the current task has a much better nice v)
33.336 567 Q(alue than the a)-.325 E -.13(wo)-.195 G -.13(ke).13 G 3.25
(nt).13 G(ask.)-3.25 E .064(The actual algorithm in the k)33.336 588 R
.064(ernel is some)-.13 F .064
(what more sophisticated, because of the need to)-.325 F 4.672(consider\
 the last CPU that a task ran on before sleeping or getting pre-empted.)
33.336 603 R .793(Depending on ho)33.336 618 R 4.043(wt)-.325 G .792
(he load is balanced, and the length of time elapsed, it may be better)
-4.043 F(to let a task w)33.336 633 Q
(ait a little longer in order to get back on its last CPU.)-.13 E 0 Cg
EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 8)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Ov)166.534 120 Q(er)-.13 E
(view of the old Linux scheduler)-.13 E/F2 13/Times-Roman@0 SF 2.169
(In the Linux k)33.336 156 R 2.169(ernel, the)-.13 F/F3 13/Courier@0 SF
(schedule)5.419 E F2 2.169(function is called from other k)5.419 F 2.169
(ernel functions to)-.13 F 1.175(relinquish the CPU.)33.336 171 R F3
(schedule)7.675 E F2 1.175
(selects another task \(or possibly the same task\) to run)4.425 F 1.873
(on the CPU in question.)33.336 186 R F3(schedule)8.374 E F2 1.874
(is called either directly)5.124 F 5.124(,e)-.845 G 1.874
(.g. when a system call)-5.124 F .347(blocks, or indirectly when the)
33.336 201 R F3(TIF_NEED_RESCHED)3.597 E F2 .346
(\215ag is noticed upon return back to)3.597 F
(user mode from a system call, page f)33.336 216 Q(ault or interrupt.)
-.13 E 2.956(The Linux k)33.336 237 R 2.956
(ernel uses a system of numeric priorities.)-.13 F 2.956(The lo)9.456 F
2.956(wer a task')-.325 F(s)-.715 E F1(dynamic)6.206 E(priority)33.336
252 Q F2 5.226(,t)C 1.976(he more f)-5.226 F -.26(avo)-.13 G 1.976
(red it is for selection by).26 F F3(schedule)5.226 E F2 8.476(.T)C
1.976(he dynamic priority is)-8.476 F 1.191
(calculated from a number of f)33.336 267 R 1.192(actors including the)
-.13 F F3 1.192(static priority)4.442 F F2 1.192(\(which can be)4.442 F
(set by the system administrator\).)33.336 282 Q .677
(When a task is switched in, it is gi)33.336 303 R -.195(ve)-.325 G
3.927(na).195 G F1(quantum)A F2 3.927(,i)C .677(.e. an allo)-3.927 F
-.13(wa)-.325 G .676(nce of a certain amount).13 F .069
(of time, before it must relinquish the CPU.)33.336 318 R 3.319(At)6.569
G .069(ask which calls a blocking system call will)-3.319 F 1.408
(yield before the e)33.336 333 R 1.408(xpiration of the quantum.)-.195 F
1.408(On the other hand, a)7.908 F F1(compute-bound)4.658 E F2(task)
4.658 E .473(which is performing computations will continue to e)33.336
348 R -.195(xe)-.195 G .474(cute until the quantum e).195 F 3.724
(xpires. In)-.195 F .056(this case the task will be pre-empted, i.e. it\
 will be switched out without e)33.336 363 R -.195(ve)-.325 G 3.305(rv)
.195 G(olunteering)-3.565 E(for this.)33.336 378 Q 4.68
(The mechanism for time-slicing and pre-empti)33.336 399 R 5.07 -.195
(ve s)-.325 H 4.68(cheduling is the periodic timer).195 F 4.307
(interrupt. Each)33.336 414 R 1.057(such interrupt is called a)4.307 F
/F4 13/Times-Italic@0 SF(tic)4.307 E(k)-.26 E F2 7.556(.O)C 4.306(nL)
-7.556 G 1.056(inux/X86 the tick rate is 1000 ticks)-4.306 F 2.456
(per second.)33.336 429 R 2.456
(When a tick happens, the time remaining in the quantum of the current)
8.956 F 1.092(process is decremented.)33.336 444 R 1.092
(If it reaches 0, and another process is ready to run, the current)7.592
F(process is switched out.)33.336 459 Q F1(Run Queues)233.204 489 Q F2
.722(The Linux k)33.336 525 R .722(ernel k)-.13 F .722
(eeps runnable tasks in data structures called)-.13 F F4(runqueues)3.972
E F2 7.222(.T)C .722(here is one)-7.222 F .681
(run queue for each processor in the system.)33.336 540 R .68
(Each runqueue contains an array of circular)7.181 F(link)33.336 555 Q
.494(ed lists.)-.13 F .495(There are 139 list anchors, i.e. one for eac\
h of the possible dynamic priority)6.994 F(le)33.336 570 Q -.195(ve)
-.325 G 3.53(ls. The).195 F .28(runqueue actually contains tw)3.53 F
3.53(os)-.13 G .28(uch priority arrays, one called the)-3.53 F F4
(active)3.53 E F2(and)3.53 E .852(one called the)33.336 585 R F4 -.26
(ex)4.102 G(pir).26 E(ed)-.481 E F2 7.353(.A)C 4.103(sw)-7.353 G 4.103
(es)-4.103 G .853
(hall see, the scheduler uses these dual arrays to impro)-4.103 F -.195
(ve)-.195 G(interacti)33.336 600 Q .39 -.195(ve r)-.325 H(esponse.).195
E .081(If a process is runnable, then it is on e)33.336 621 R .08
(xactly one runqueue.)-.195 F .08(When a process is sleeping, it)6.58 F
2.228(is not on an)33.336 636 R 5.478(yr)-.195 G 5.478
(unqueues. Normally)-5.478 F 5.478(,w)-.845 G 2.229(hen processes w)
-5.478 F(ak)-.13 E 5.479(eu)-.13 G 2.229(p, the)-5.479 F 5.479(ya)-.195
G 2.229(re placed on the)-5.479 F 1.067
(runqueue of the CPU which last e)33.336 651 R -.195(xe)-.195 G 1.067
(cuted them.).195 F 1.067(This is to impro)7.567 F 1.457 -.195(ve c)
-.195 H 1.067(ache performance.).195 F(Ho)33.336 666 Q(we)-.325 E -.195
(ve)-.325 G 4.654 -.52(r, p).195 H 3.614
(rocesses are periodically migrated among runqueues of a multiprocessor)
.52 F(system to k)33.336 681 Q(eep the load more or less balanced.)-.13
E .052(When the scheduler looks for the "best" task to run ne)33.336 702
R .052(xt, it visits the runqueue in dynamic)-.195 F 3.68
(priority order)33.336 717 R 6.93(,s)-.52 G 3.68
(tarting with the "best" priority le)-6.93 F -.195(ve)-.325 G 6.93(l\()
.195 G 3.68(which in Linux is the lo)-6.93 F(west)-.325 E 4.072
(numerically\). At)33.336 732 R .822(the \214rst non-empty list slot, t\
he scheduler picks the task at the head of)4.072 F 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 9)71.748 E(\2512012 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .494(the lists of tasks at that priority)
33.336 120 R 10.244(.S)-.845 G .494
(ince tasks are placed at the rear of the list \(for a gi)-10.244 F
-.195(ve)-.325 G(n).195 E .858(priority\) when the)33.336 135 R 4.108
(ya)-.195 G .858(re switched out, if the dynamic priorities were to ne)
-4.108 F -.195(ve)-.325 G 4.108(rc).195 G .858(hange and)-4.108 F(al)
33.336 150 Q -.13(wa)-.13 G .903
(ys be equal to the static priorities, the scheduler w).13 F .903
(ould at least implement ")-.13 F/F2 13/Times-Bold@0 SF(Round-)A(Robin)
33.336 165 Q F1 3.25("s)C(cheduling.)-3.25 E 3.758
(Because searching for the \214rst non-empty list requires a lar)33.336
186 R 3.758(ge number of memory)-.234 F 3.295
(accesses, and because it is important to mak)33.336 201 R 6.546(et)-.13
G 3.296(he scheduling decision quickly with)-6.546 F 4.256(minimal o)
33.336 216 R -.195(ve)-.195 G 4.256(rhead, the Linux k).195 F 4.256
(ernel actually adds a bitmask which represents the)-.13 F .186
(emptiness of the priority b)33.336 231 R(uck)-.26 E 3.436(ets. Thus)
-.13 F .187(the scheduler needs only to fetch the bitmask and)3.437 F
.247(\(on the X86 architecture\) e)33.336 246 R -.195(xe)-.195 G .247
(cute an instruction which \214nds the bit number of the \214rst bit)
.195 F(in a w)33.336 261 Q(ord which is set.)-.13 E 0 0 367 367 -427 427
83.836 724 PBEGIN
%%BeginDocument: runq.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: runq.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Apr  9 22:03:36 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 367 427
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 427 moveto 0 0 lineto 367 0 lineto 367 427 lineto closepath clip newpath
-150.2 527.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
 [60] 0 sd
n 3150 3975 m
 4725 3975 l gs col0 s gr  [] 0 sd
% Polyline
n 3150 3750 m 4725 3750 l 4725 4275 l 3150 4275 l
 cp gs col0 s gr 
/Times-Roman ff 233.33 scf sf
3900 3900 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3900 4185 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
 [60] 0 sd
n 3150 4500 m
 4725 4500 l gs col0 s gr  [] 0 sd
% Polyline
n 3150 4275 m 4725 4275 l 4725 4800 l 3150 4800 l
 cp gs col0 s gr 
/Times-Roman ff 233.33 scf sf
3900 4425 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3900 4710 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
 [60] 0 sd
n 3150 5025 m
 4725 5025 l gs col0 s gr  [] 0 sd
% Polyline
n 3150 4800 m 4725 4800 l 4725 5325 l 3150 5325 l
 cp gs col0 s gr 
/Times-Roman ff 233.33 scf sf
3900 4950 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3900 5235 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
 [60] 0 sd
n 3150 8100 m
 4725 8100 l gs col0 s gr  [] 0 sd
% Polyline
n 3150 7875 m 4725 7875 l 4725 8400 l 3150 8400 l
 cp gs col0 s gr 
/Times-Roman ff 233.33 scf sf
3900 8025 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3900 8310 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
 [60] 0 sd
n 3150 2025 m
 4725 2025 l gs col0 s gr  [] 0 sd
% Polyline
n 3150 1800 m 4725 1800 l 4725 2325 l 3150 2325 l
 cp gs col0 s gr 
/Times-Roman ff 233.33 scf sf
3900 1950 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3900 2235 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Ellipse
n 3911 6169 32 32 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3911 6469 32 32 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3911 6782 32 32 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3911 2699 32 32 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3911 2999 32 32 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3911 3312 32 32 0 360 DrawEllipse gs col0 s gr

% Polyline
n 5850 2850 m 6300 2850 l 6300 4350 l 5850 4350 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 5850 3600 m
 6300 3600 l gs col0 s gr  [] 0 sd
% Polyline
n 5850 3375 m 6300 3375 l 6300 3825 l 5850 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
6075 3525 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
6075 3780 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
6075 2700 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 6900 2850 m 7350 2850 l 7350 4350 l 6900 4350 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 6900 3600 m
 7350 3600 l gs col0 s gr  [] 0 sd
% Polyline
n 6900 3375 m 7350 3375 l 7350 3825 l 6900 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
7125 3525 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
7125 3780 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
7125 2700 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 7875 2850 m 8325 2850 l 8325 4350 l 7875 4350 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 7875 3600 m
 8325 3600 l gs col0 s gr  [] 0 sd
% Polyline
n 7875 3375 m 8325 3375 l 8325 3825 l 7875 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
8100 3525 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
8100 3780 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
8100 2700 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 5850 4950 m 6300 4950 l 6300 6450 l 5850 6450 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 5850 5700 m
 6300 5700 l gs col0 s gr  [] 0 sd
% Polyline
n 5850 5475 m 6300 5475 l 6300 5925 l 5850 5925 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
6075 5625 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
6075 5880 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
6075 4800 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 7050 4950 m 7500 4950 l 7500 6450 l 7050 6450 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 7050 5700 m
 7500 5700 l gs col0 s gr  [] 0 sd
% Polyline
n 7050 5475 m 7500 5475 l 7500 5925 l 7050 5925 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
7275 5625 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
7275 5880 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
7275 4800 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 6000 6975 m 6450 6975 l 6450 8475 l 6000 8475 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 6000 7725 m
 6450 7725 l gs col0 s gr  [] 0 sd
% Polyline
n 6000 7500 m 6450 7500 l 6450 7950 l 6000 7950 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
6225 7650 m
gs 1 -1 sc (next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 200.00 scf sf
6225 7905 m
gs 1 -1 sc (prev) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 200.00 scf sf
6225 6825 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 3150 1800 m 4725 1800 l 4725 8400 l 3150 8400 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5874 3397 m 5853 3341 l 5712 3396 l 5835 3381 l 5734 3452 l cp
eoclip
n 4500 3900 m
 5850 3375 l gs col0 s gr gr

% arrowhead
n 5734 3452 m 5835 3381 l 5712 3396 l  col0 s
% Polyline
gs  clippath
6915 3480 m 6915 3420 l 6763 3420 l 6883 3450 l 6763 3480 l cp
eoclip
n 6225 3450 m
 6900 3450 l gs col0 s gr gr

% arrowhead
n 6763 3480 m 6883 3450 l 6763 3420 l  col0 s
% Polyline
gs  clippath
7965 3480 m 7965 3420 l 7813 3420 l 7933 3450 l 7813 3480 l cp
eoclip
n 7275 3450 m
 7950 3450 l gs col0 s gr gr

% arrowhead
n 7813 3480 m 7933 3450 l 7813 3420 l  col0 s
% Polyline
gs  clippath
4695 3734 m 4730 3783 l 4852 3693 l 4738 3740 l 4817 3645 l cp
eoclip
n 8325 3450 m 8475 3450 l 8475 3150 l 5550 3150 l
 4725 3750 l gs col0 s gr gr

% arrowhead
n 4817 3645 m 4738 3740 l 4852 3693 l  col0 s
% Polyline
gs  clippath
7351 3416 m 7322 3468 l 7453 3543 l 7364 3458 l 7483 3491 l cp
eoclip
n 7875 3750 m
 7350 3450 l gs col0 s gr gr

% arrowhead
n 7483 3491 m 7364 3458 l 7453 3543 l  col0 s
% Polyline
gs  clippath
6298 3416 m 6274 3471 l 6412 3533 l 6315 3457 l 6436 3478 l cp
eoclip
n 6975 3750 m
 6300 3450 l gs col0 s gr gr

% arrowhead
n 6436 3478 m 6315 3457 l 6412 3533 l  col0 s
% Polyline
gs  clippath
4783 3721 m 4787 3780 l 4938 3770 l 4817 3749 l 4934 3711 l cp
eoclip
n 5925 3675 m
 4800 3750 l gs col0 s gr gr

% arrowhead
n 4934 3711 m 4817 3749 l 4938 3770 l  col0 s
% Polyline
gs  clippath
8325 3416 m 8298 3470 l 8433 3537 l 8340 3457 l 8460 3483 l cp
eoclip
n 4575 4125 m 8475 4125 l 8475 3525 l
 8325 3450 l gs col0 s gr gr

% arrowhead
n 8460 3483 m 8340 3457 l 8433 3537 l  col0 s
% Polyline
gs  clippath
5850 5583 m 5876 5529 l 5739 5464 l 5835 5543 l 5713 5519 l cp
eoclip
n 4575 4950 m
 5850 5550 l gs col0 s gr gr

% arrowhead
n 5713 5519 m 5835 5543 l 5739 5464 l  col0 s
% Polyline
gs  clippath
7065 5580 m 7065 5520 l 6913 5520 l 7033 5550 l 6913 5580 l cp
eoclip
n 6225 5550 m
 7050 5550 l gs col0 s gr gr

% arrowhead
n 6913 5580 m 7033 5550 l 6913 5520 l  col0 s
% Polyline
gs  clippath
4800 4841 m 4773 4895 l 4908 4962 l 4815 4882 l 4935 4908 l cp
eoclip
n 7425 5550 m 7800 5550 l 7800 5175 l 5400 5175 l
 4800 4875 l gs col0 s gr gr

% arrowhead
n 4935 4908 m 4815 4882 l 4908 4962 l  col0 s
% Polyline
gs  clippath
6296 5516 m 6275 5573 l 6418 5625 l 6316 5556 l 6439 5568 l cp
eoclip
n 7125 5850 m
 6300 5550 l gs col0 s gr gr

% arrowhead
n 6439 5568 m 6316 5556 l 6418 5625 l  col0 s
% Polyline
gs  clippath
4732 4842 m 4694 4888 l 4812 4983 l 4738 4885 l 4850 4937 l cp
eoclip
n 5925 5850 m
 4725 4875 l gs col0 s gr gr

% arrowhead
n 4850 4937 m 4738 4885 l 4812 4983 l  col0 s
% Polyline
gs  clippath
7500 5516 m 7473 5570 l 7608 5637 l 7515 5557 l 7635 5583 l cp
eoclip
n 4575 5250 m 4950 5250 l 4950 6150 l 7800 6150 l 7800 5700 l
 7500 5550 l gs col0 s gr gr

% arrowhead
n 7635 5583 m 7515 5557 l 7608 5637 l  col0 s
% Polyline
gs  clippath
6023 7524 m 6005 7466 l 5860 7512 l 5984 7505 l 5878 7569 l cp
eoclip
n 4575 7950 m
 6000 7500 l gs col0 s gr gr

% arrowhead
n 5878 7569 m 5984 7505 l 5860 7512 l  col0 s
% Polyline
gs  clippath
4647 7916 m 4624 7972 l 4765 8028 l 4665 7956 l 4787 7972 l cp
eoclip
n 6450 7575 m 6825 7575 l 6825 8775 l 5025 8775 l 5025 8100 l
 4650 7950 l gs col0 s gr gr

% arrowhead
n 4787 7972 m 4665 7956 l 4765 8028 l  col0 s
% Polyline
gs  clippath
6470 7548 m 6416 7575 l 6483 7710 l 6457 7590 l 6537 7683 l cp
eoclip
n 4575 8250 m 6600 8250 l 6600 7875 l
 6450 7575 l gs col0 s gr gr

% arrowhead
n 6537 7683 m 6457 7590 l 6483 7710 l  col0 s
% Polyline
gs  clippath
4781 7922 m 4788 7981 l 4938 7962 l 4816 7948 l 4931 7903 l cp
eoclip
n 6000 7800 m
 4800 7950 l gs col0 s gr gr

% arrowhead
n 4931 7903 m 4816 7948 l 4938 7962 l  col0 s
% Polyline
gs  clippath
4698 1779 m 4725 1833 l 4860 1766 l 4740 1793 l 4833 1712 l cp
eoclip
n 4575 1950 m 5325 1950 l 5325 1725 l 4875 1725 l
 4725 1800 l gs col0 s gr gr

% arrowhead
n 4833 1712 m 4740 1793 l 4860 1766 l  col0 s
% Polyline
gs  clippath
5310 1695 m 5310 1755 l 5462 1755 l 5342 1725 l 5462 1695 l cp
eoclip
n 4575 2175 m 5550 2175 l 5550 1725 l
 5325 1725 l gs col0 s gr gr

% arrowhead
n 5462 1695 m 5342 1725 l 5462 1755 l  col0 s
/Times-Roman ff 233.33 scf sf
3037 8004 m
gs 1 -1 sc ([139]) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3037 4394 m
gs 1 -1 sc ([101]) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3047 4904 m
gs 1 -1 sc ([102]) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3027 3844 m
gs 1 -1 sc ([100]) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
3067 1888 m
gs 1 -1 sc ([0]) dup sw pop neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 10)69.498 E(\2512012 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Priority f)221.465 120 Q(ormula)-.325 E/F2
13/Times-Roman@0 SF 1.094(The dynamic priority ranges from 1 to 139, wi\
th 1 being the "best" or "most preferred")33.336 156 R -.325(va)33.336
171 S 6.076(lue. Ho).325 F(we)-.325 E -.195(ve)-.325 G 3.866 -.52(r, p)
.195 H 2.826(riority v).52 F 2.826(alues 1 through 99 are reserv)-.325 F
2.825(ed for "real-time" processes.)-.195 F(Con)33.336 186 Q -.195(ve)
-.52 G 3.573(ntional processes which are ordinarily e).195 F 3.574
(xperienced by end-users ha)-.195 F 3.964 -.195(ve p)-.26 H(riority).195
E -.325(va)33.336 201 S 2.143(lues ranging from 100 to 139.).325 F 2.142
(This corresponds to the traditional UNIX use of 40)8.642 F(priority le)
33.336 216 Q -.195(ve)-.325 G(ls.).195 E(The)33.336 237 Q/F3 13
/Times-Italic@0 SF .867(static priority)4.116 F F2 .867
(can be adjusted by the process.)4.117 F .867(The def)7.367 F .867
(ault v)-.13 F .867(alue is 120, i.e. right in)-.325 F 1.085
(the middle.)33.336 252 R(An)7.585 E 4.335(yp)-.195 G 1.085
(rocess can gi)-4.335 F 1.475 -.195(ve i)-.325 H 1.085(tself w).195 F
1.084(orse static priority by using the)-.13 F/F4 13/Courier@0 SF(nice)
4.334 E F2(system)4.334 E 1.173(call, b)33.336 267 R 1.174
(ut only processes running as root can impro)-.26 F 1.564 -.195(ve t)
-.195 H 1.174(he static priority of themselv).195 F 1.174(es or)-.195 F
3.806(others \(impro)33.336 282 R 4.196 -.195(ve =)-.195 H 7.056(=m).195
G(ak)-7.056 E 7.056(ei)-.13 G 7.056(tn)-7.056 G 3.805(umerically lo)
-7.056 F 7.055(wer\). The)-.325 F(dif)7.055 E 3.805
(ference between the static)-.325 F 1.76
(priority and 120 is the "nice v)33.336 297 R 5.011(alue". Starting)
-.325 F 5.011(ap)5.011 G 1.761(rocess with a positi)-5.011 F 2.151 -.195
(ve n)-.325 H 1.761(ice v).195 F 1.761(alue is a)-.325 F
("nice" thing to do...it v)33.336 312 Q(olunteers to mak)-.26 E 3.25(et)
-.13 G(he process less of a CPU hog.)-3.25 E(The)33.336 333 Q F3
(dynamic priority)3.25 E F2(is periodically recalculated as follo)3.25 E
(ws:)-.325 E/F5 10/Courier@0 SF
(dyn_prio = Max\( 100, Min\(static_prio-bonus+5,139\)\))33.336 345 Q F4
(bonus)33.336 366 Q F2 .392
(ranges from 0 to 10 and is a measure of the a)3.643 F -.195(ve)-.26 G
.392(rage sleep time of the process.).195 F(A)6.892 E 1.982
(bigger bonus means a smaller \(better\) dynamic priority)33.336 381 R
8.483(.T)-.845 G 1.983(he longer the a)-8.483 F -.195(ve)-.26 G 1.983
(rage sleep).195 F 2.506(time, the bigger the bonus.)33.336 396 R 2.505
(In the current v)9.005 F 2.505(ersion of the k)-.195 F 2.505
(ernel, proceses with sleep)-.13 F -2.925 -.26(av e)33.336 411 T .698
(rages of less than 100ms get 0 bonus, an).26 F .698
(ything with 1000ms or more gets a bonus of)-.195 F(10, and v)33.336 426
Q(alues in between are linearly interpolated.)-.325 E 1.9(The ef)33.336
447 R 1.9(fect of the bonus is to re)-.325 F -.13(wa)-.325 G 1.9
(rd interacti).13 F 2.29 -.195(ve o)-.325 H 5.15(rI).195 G 1.899
(/O bound processes which are not)-5.15 F(hogging the CPU.)33.336 462 Q
(Furthermore, if the e)6.5 E(xpression)-.195 E F5
(bonus-5 >= static_prio/4-28)33.336 474 Q F2 1.324(is true, then the pr\
ocess has met the threshold for being considered an INTERA)33.336 489 R
(CTIVE)-.52 E 3.529(process. This)33.336 504 R .279
(will create an additional bene\214t as discussed belo)3.529 F 3.529(wi)
-.325 G 3.529(nc)-3.529 G .279(onjunction with the)-3.529 F(acti)33.336
519 Q .616 -.195(ve v)-.325 H 3.476(se).195 G .226(xpire run queue.)
-3.671 F .226(Note that processes with numerically lo)6.726 F .226
(wer static priority can)-.325 F 4.745(become INTERA)33.336 534 R 4.745
(CTIVE more easily)-.52 F 11.245(.A)-.845 G 4.745
(process which is not INTERA)-3.25 F 4.745(CTIVE is)-.52 F
(considered a B)33.336 549 Q -1.443(AT)-.455 G
(CH process \(i.e. CPU-bound\).)1.443 E F1(Quantum)240.608 579 Q F2
1.225(When a process is selected to run and switched in, it is gi)33.336
615 R -.195(ve)-.325 G 4.475(na).195 G 4.475(na)-4.475 G 1.225
(llocation of a certain)-4.475 F 3.82(number of ticks, which is kno)
33.336 630 R 3.82(wn as the)-.325 F F3(quantum)7.07 E F2 10.32(.L)C
3.819(inux uses a v)-10.32 F(ariable-quantum)-.325 E
(scheduling algorithm:)33.336 645 Q F5(if \(static_prio < 120\))33.336
657 Q(quantum=\(140-static_prio\)*20;)90.936 669 Q(else)33.336 681 Q
(quantum=\(140-static_prio\)*5;)90.936 693 Q F2(Therefore, more f)33.336
714 Q -.26(avo)-.13 G(red \(lo).26 E
(wer static_prio\) processes get a longer quantum.)-.325 E F1(Acti)
213.776 744 Q .26 -.13(ve a)-.13 H(nd Expir).13 E(ed)-.234 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 11)69.498 E(\2512012 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.011(The scheduler maintains tw)33.336
120 R 4.262(op)-.13 G 1.012(riority arrays, acti)-4.262 F 1.402 -.195
(ve a)-.325 H 1.012(nd e).195 F 4.262(xpired. Consider)-.195 F 4.262(as)
4.262 G 1.012(tate where)-4.262 F 2.474
(all runnable processes are on the acti)33.336 135 R 2.864 -.195(ve l)
-.325 H 5.723(ist. One).195 F 2.473(by one, as the)5.723 F 5.723(ye)
-.195 G 2.473(xhaust their time)-5.918 F 2.512(quantum b)33.336 150 R
2.512(ut remain runnable, the)-.26 F 5.762(ya)-.195 G 2.512(re mo)-5.762
F -.195(ve)-.195 G 5.762(dt).195 G 5.762(ot)-5.762 G 2.512(he e)-5.762 F
2.512(xpired priorty array)-.195 F 5.762(,u)-.845 G 2.512(sing the)
-5.762 F 2.022(current dynamic priority at the time of the quantum e)
33.336 165 R 5.271(xhaustion. The)-.195 F(scheduler)5.271 E 5.271(,w)
-.52 G(hen)-5.271 E .504(looking for the ne)33.336 180 R .504
(xt process to run, al)-.195 F -.13(wa)-.13 G .505(ys looks at the acti)
.13 F .895 -.195(ve l)-.325 H .505(ist \214rst.).195 F .505(The ef)7.005
F .505(fect of this)-.325 F 1.278(decision is to pre)33.336 195 R -.195
(ve)-.325 G 1.278(nt a high priority process from monopolizing the CPU.)
.195 F 1.277(After it has)7.777 F(had its turn, lo)33.336 210 Q
(wer priority processes must be allo)-.325 E(wed run once.)-.325 E .02
(This beha)33.336 231 R .02(vior is modi\214ed by the INTERA)-.26 F .02
(CTIVE vs B)-.52 F -1.443(AT)-.455 G .02(CH classi\214cation scheme abo)
1.443 F -.195(ve)-.195 G(.).195 E 4.573(While B)33.336 246 R -1.443(AT)
-.455 G 4.572(CH processes al)1.443 F -.13(wa)-.13 G 4.572(ys get mo).13
F -.195(ve)-.195 G 7.822(dt).195 G 7.822(ot)-7.822 G 4.572(he e)-7.822 F
4.572(xpired array)-.195 F 7.822(,I)-.845 G(NTERA)-7.822 E(CTIVE)-.52 E
(processes get put back on the acti)33.336 261 Q .39 -.195(ve a)-.325 H
(rray).195 E 3.25(,U)-.845 G(NLESS one of the follo)-3.25 E
(wing is true:)-.325 E 3.25<8341>33.336 276 S 3.25(ne)-3.25 G
(xpired process has been w)-3.445 E
(aiting to be scheduled for a really long time.)-.13 E 4.904<834f>33.336
291 S 4.904(Ra)-4.904 G 2.044 -.195(ny o)-4.904 H 4.904(ft).195 G 1.655
(he e)-4.904 F 1.655
(xpired processes has a better static priority than the INTERA)-.195 F
(CTIVE)-.52 E(process under consideration.)33.336 306 Q .963
(One of these tw)33.336 327 R 4.213(oc)-.13 G .963(onditions will e)
-4.213 F -.195(ve)-.325 G .963
(ntually become true, and all of the processes in the).195 F 1.696
(run queue will wind up in the e)33.336 342 R 1.696(xpired part.)-.195 F
1.697(When this happens, and the acti)8.197 F 2.087 -.195(ve p)-.325 H
1.697(art is).195 F(empty)33.336 357 Q 4.284(,t)-.845 G 1.034(hen the e)
-4.284 F 1.034(xpired part becomes the acti)-.195 F 1.423 -.195(ve p)
-.325 H 1.033(art, and the ne).195 F 4.283(we)-.325 G 1.033
(xpired part becomes)-4.478 F(empty)33.336 372 Q(.)-.845 E/F2 13
/Times-Bold@0 SF(Idle)256.5 402 Q F1 2.203
(What happens when there are NO runnable processes in the system, e.g.)
33.336 438 R 5.453(aq)8.703 G(uiescent)-5.453 E 3.032(system w)33.336
453 R 3.032(aiting for input?)-.13 F 3.032
(Then the scheduler will not be able to select a runnable)9.532 F 8.687
(process. The)33.336 468 R 5.437(Linux k)8.687 F 5.438
(ernel uses a special process called, for historical reasons,)-.13 F/F3
13/Courier@0 SF(swapper)33.336 483 Q F1 3.519(,a)C 3.519(st)-3.519 G
.269(he idle task.)-3.519 F .269
(It is selected when there is absolutely nothing else to do.)6.769 F(On)
6.768 E
(multi-processor systems, there is one idle task for each processor)
33.336 498 Q(.)-.715 E .32(When po)33.336 519 R .321
(wer management features are enabled, idle processors may tak)-.325 F
3.571(ea)-.13 G .321(ction to reduce)-3.571 F(po)33.336 534 Q .088
(wer consumption, such as slo)-.325 F .088
(wing the CPU clock speed, or po)-.325 F .088(wering do)-.325 F .088
(wn disk dri)-.325 F -.195(ve)-.325 G(s.).195 E F2(scheduler_tick)
226.893 564 Q F1(The)33.336 600 Q F3(scheduler_tick)4.281 E F1 1.031
(function is called in an interrupt conte)4.281 F 1.032
(xt by the periodic timer)-.195 F(interrupt handler)33.336 615 Q 6.5(.I)
-.715 G 3.25(tp)-6.5 G(erforms the follo)-3.25 E
(wing operations \(in pseudo-code\))-.325 E/F4 10/Courier@0 SF
(scheduler_tick\(\))33.336 627 Q({)33.336 639 Q
(if \(current == idle process\))90.936 651 Q({)90.936 663 Q
(if \(local runqueue contains a runnable process\))148.536 675 Q
(set TIF_NEED_RESCHED)206.136 687 Q(})90.936 699 Q(else)90.936 711 Q({)
90.936 723 Q(if \(--current->time_slice<=0\))148.536 735 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 10/pg 12)69.498 E(\2512012 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF({)148.536 117 Q
(remove current from this_rq_>active)206.136 129 Q(set TIF_NEED_RESCHED)
206.136 141 Q(recalculate current->prio //dynamic prio)206.136 153 Q
(set current->time_slice based on current->static_prio)206.136 165 Q
(if \(TASK_INTERACTIVE\(current\)\))206.136 177 Q({)206.136 189 Q
(if \(\(process on this_rq->expired has)263.736 201 Q
(been waiting more than)321.336 213 Q(1000*\(number_runnable+1\)\) ||)
321.336 225 Q(\(an expired process has better static_prio)287.736 237 Q
(than current\)\))321.336 249 Q(put current on this_rq->expired)321.336
261 Q(else)263.736 273 Q(put current on this_rq->active)321.336 285 Q(})
206.136 297 Q(else)206.136 309 Q(put current on this_rq->expired)263.736
321 Q(})148.536 333 Q(})90.936 345 Q
(rebalance run queues based on multiprocessor load)90.936 357 Q(})33.336
369 Q/F2 13/Times-Bold@0 SF(Inserting a task into the run queue at wak)
141.002 399 Q(eup)-.13 E/F3 13/Times-Roman@0 SF(When a task is w)33.336
435 Q(ok)-.13 E(en up, this is done by the k)-.13 E(ernel function)-.13
E/F4 13/Courier@0 SF(try_to_wake_up)3.25 E F3(:)A 4.7<8349>33.336 450 S
1.45(dentify tar)-4.7 F 1.45(get runqueue.)-.234 F 1.45
(On multi-processor systems, it will usually be the queue of)7.95 F
1.328(the last CPU to run the process.)33.336 465 R(Ho)7.828 E(we)-.325
E -.195(ve)-.325 G 2.368 -.52(r, i).195 H -7.827 4.578(fa d).52 H(if)
-4.578 E 1.329(ferent CPU is idle, or has drastically)-.325 F(lo)33.336
480 Q(wer w)-.325 E(orkload than the last CPU, it will be migrated.)-.13
E 3.25<8352>33.336 495 S(ecalculate the a)-3.25 E -.195(ve)-.26 G
(rage sleep time and dynamic priority).195 E(.)-.845 E 3.25<8350>33.336
510 S(lace the w)-3.25 E(ok)-.13 E(en-up task on the acti)-.13 E .39
-.195(ve p)-.325 H(art of the tar).195 E(get run queue.)-.234 E 4.206
<8349>33.336 525 S 4.206(ft)-4.206 G .956(he w)-4.206 F(ok)-.13 E .956
(en-up task no)-.13 F 4.206(wh)-.325 G .955
(as a better priority than the task currently e)-4.206 F -.195(xe)-.195
G .955(cuting on the).195 F(tar)33.336 540 Q 1.797
(get CPU, set the TIF_NEED_RESCHED \215ag of the latter task.)-.234 F
1.798(On multi-processor)8.298 F .349
(systems, it may be necessary to send an inter)33.336 555 R .348
(-processor interrupt if the ne)-.26 F 3.598(wt)-.325 G(ar)-3.598 E .348
(get CPU is)-.234 F(dif)33.336 570 Q(ferent from the CPU e)-.325 E -.195
(xe)-.195 G(cuting try_to_w).195 E(ak)-.13 E(e_up.)-.13 E F2
(Scheduler interactions with f)177.766 600 Q(ork)-.325 E F3 2.977
(When a ne)33.336 636 R 6.227(wt)-.325 G 2.977
(ask is created with fork or clone, the Linux k)-6.227 F 2.977(ernel gi)
-.13 F -.195(ve)-.325 G 6.227(si).195 G 6.227(ta)-6.227 G 6.227(ni)
-6.227 G(nitial)-6.227 E 1.809(quantum which is half of the parent')
33.336 651 R 5.059(sr)-.715 G 1.809(emaining time.)-5.059 F 1.809
(The parent')8.309 F 5.059(sr)-.715 G 1.809(emaining time is)-5.059 F
.94(then di)33.336 666 R .94(vided by tw)-.325 F 4.19(o. In)-.13 F .94
(this w)4.19 F(ay)-.13 E 4.19(,a)-.845 G .94
(llocation of CPU resources remains f)-4.19 F .941(air and an)-.13 F
4.191(yo)-.195 G(ne)-4.191 E
(user can not monopolize the CPU by use of a "fork bomb".)33.336 681 Q 0
Cg EP
%%Trailer
end
%%EOF
