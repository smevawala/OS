%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Thu Nov  7 03:48:32 2013
%%DocumentNeededResources: font Times-Roman
%%+ font Courier
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: procset grops 1.19 1
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Helvetica-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Helvetica-Bold@0 ENC0/Helvetica-Bold RE/Times-Italic@0 ENC0
/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE/Courier@0 ENC0/Courier
RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 48 Q
(PS 7/pg 1)41.55 E(\2512013 Jef)119.78 E 2.5(fH)-.25 G(akner)-2.5 E/F1
11/Times-Roman@0 SF 3.348(In this problem set, you will e)58 97 R 3.347
(xplore synchronization issues on a simulated multi-processor)-.165 F
6.097(,s)-.44 G(hared-memory)-6.097 E(en)58 110 Q 3.594(vironment. W)
-.44 F 3.594(ew)-.88 G .845(ill not use threads-based programming, b)
-3.594 F .845(ut instead will create an en)-.22 F .845
(vironment in which se)-.44 F -.165(ve)-.275 G(ral).165 E
(UNIX processes share a memory re)58 123 Q(gion through)-.165 E/F2 11
/Courier@0 SF(mmap)2.75 E F1 5.5(.E)C
(ach process represents a parallel processor)-5.5 E(.)-.605 E 2.991 -.88
(We w)58 142 T 1.231
(ill number each of these "virtual processors" with a small inte).88 F
1.231(ger identi\214er which will be held in the global)-.165 F -.275
(va)58 155 S(riable).275 E F2(my_procnum)2.987 E F1 5.737(.T)C .237(his\
 is not the same as the UNIX process id, although you will probably nee\
d to k)-5.737 F .238(eep track)-.11 F .899(of the UNIX pids too.)58 168
R F2(my_procnum)6.399 E F1 .899(ranges from 0 to)3.649 F F2(N_PROC-1)
3.649 E F1(.)A F2(N_PROC)6.399 E F1 .898(is the)3.649 F/F3 11
/Times-Bold@0 SF(maximum)3.648 E F1 .898(number of virtual)3.648 F
(processors which your implementation is required to accept.)58 181 Q
-.165(Fo)5.5 G 2.75(rt).165 G(his project, de\214ne it as 64.)-2.75 E
2.51 -.88(To i)58 200 T .75(mplement sleeping and w).88 F .75
(aking in this project, the UNIX signal f)-.11 F .751
(acility will be used to simulate inter)-.11 F(-processor)-.22 E 2.75
(interrupts. Use)58 213 R(signal SIGUSR1 and the system calls)2.75 E F2
(sigsuspend)2.75 E F1(and)2.75 E F2(sigprocmask)2.75 E F1 2.75(,a)C 2.75
(sd)-2.75 G(iscussed in class.)-2.75 E .748
(The starting point is an atomic test and set instruction.)58 232 R .748
(Since "some assembly is required," this will be pro)6.248 F .747
(vided to)-.165 F 2.521(you in the \214le)58 245 R F2(tas.S)5.271 E F1
2.521(\(32-bit\), or)5.271 F F2(tas64.S)5.271 E F1 5.271
(\(64-bit\). Use)5.271 F 2.521(it with a mak)5.271 F 2.522
(e\214le or directly with gcc, e.g.)-.11 F F2(gcc)5.272 E .086
(fifotest.c fifolib.c semlib.c tas.S)58 258 R F1 2.836(A.)2.836 G 2.836
<538c>-2.836 G .086(le is a pure assembly language function.)-2.836 F
.086(At the C le)5.586 F -.165(ve)-.275 G .086(l, it).165 F(will w)58
271 Q(ork as:)-.11 E/F4 10/Courier@0 SF(int tas\(volatile char *lock\))
58 285 Q F1 -1.21(Yo)58 298 S 3.552(uw)1.21 G .803(ill ha)-3.552 F 1.133
-.165(ve t)-.22 H 3.553(ow).165 G .803(rite your o)-3.553 F .803
(wn prototype for the function since no header is pro)-.275 F 3.553
(vided. The)-.165 F .803(tas function w)3.553 F .803(orks as)-.11 F .429
(described in the lecture notes.)58 311 R 3.179(Az)5.929 G .429(ero v)
-3.179 F .428(alue means unlock)-.275 F .428(ed, and tas returns the)
-.11 F/F5 11/Times-Italic@0 SF(pr)3.178 E -.165(ev)-.407 G(ious).165 E
F1 -.275(va)3.178 G .428(lue of *lock, meaning it).275 F
(returns 0 when the lock has been acquired, and 1 when it has not.)58
324 Q 1.475
(It is suggested that you implement a spin lock using this atomic T)58
343 R 1.475(AS, and use that spin lock as a mute)-1.023 F 4.225(xt)-.165
G 4.225(oh)-4.225 G(elp)-4.225 E .955(implement the functions belo)58
356 R 5.135 -.715(w. I)-.275 H 3.705(tw).715 G .955
(ill not be necessary to implement a full mute)-3.705 F 3.705(xl)-.165 G
.955(ock with blocking/yielding, as)-3.705 F
(that functionality will be b)58 369 Q(uilt-in to the your semaphores.)
-.22 E/F6 11/Helvetica-Bold@0 SF(Pr)222.416 395 Q(ob)-.22 E
(lem 1 -- Implement semaphores)-.11 E F1 .035(Create a module, called)58
414 R F2(sem.c)2.786 E F1 2.786(,w)C .036(ith header \214le)-2.786 F F2
(sem.h)2.786 E F1 2.786(,w)C .036
(hich implements the semaphore operations de\214ned belo)-2.786 F -.715
(w.)-.275 G -1.21(Yo)58 427 S 2.75(uw)1.21 G(ill need to mak)-2.75 E
2.75(eu)-.11 G(se of the spinlock mute)-2.75 E 2.75(xd)-.165 G(eri)-2.75
E -.165(ve)-.275 G 2.75(df).165 G(rom the pro)-2.75 E(vided T)-.165 E
(AS function.)-1.023 E F4(void sem_init\(struct sem *s, int count\);)76
441 Q(Initialize the semaphore *s with the initial count. Initialize)
115.6 455 Q(any underlying data structures.)115.6 469 Q
(sem_init should only be called)12 E(once in the program.)115.6 483 Q
(If called after the semaphore has been)12 E
(used, results are unpredictable.)115.6 497 Q
(int sem_try\(struct sem *s\);)76 525 Q
(Attempt to perform the "P" operation \(atomically decrement)115.6 539 Q
(the semaphore\).)115.6 553 Q(If this operation would block, return 0,)
12 E(otherwise return 1.)115.6 567 Q(void sem_wait\(struct sem *s\);)76
595 Q(Perform the P operation, blocking until successful.)115.6 609 Q
(Blocking)12 E
(should be accomplished by noting within the *s that the current)115.6
623 Q(virtual processor needs to be woken up, and then sleeping using)
115.6 637 Q(the sigsuspend system call until SIGUSR1 is received.)115.6
651 Q(Assume)12 E
(that the extern int variable my_procnum exists and contains)115.6 665 Q
(the virtual processor id of the caller.)115.6 679 Q
(The implementation by)12 E
(which you keep track of waiting processors is up to you.)115.6 693 Q 0
Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 7/pg 2)78.105 E(\2512013 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
/F1 10/Courier@0 SF(void sem_inc\(struct sem *s\);)76 105 Q
(Perform the V operation.)115.6 119 Q
(If any other processors were sleeping)12 E
(on this semaphore, wake them by sending a SIGUSR1 to their)115.6 133 Q
(process id \(which is not the same as the virtual processor number\).)
115.6 147 Q/F2 11/Helvetica-Bold@0 SF(Pr)215.695 173 Q(ob)-.22 E
(lem 2 -- A FIFO using semaphores)-.11 E F0(No)58 192 Q 3.149(wc)-.275 G
.399(reate a \214fo module,)-3.149 F/F3 11/Courier@0 SF(fifo.c)3.149 E
F0 .399(with associated header \214le)3.149 F F3(fifo.h)3.148 E F0 3.148
(,w)C .398(hich maintains a FIFO of unsigned longs)-3.148 F .78
(using a shared memory data structure protected and coordinated)58 205 R
/F4 11/Times-Bold@0 SF(exclusi)3.53 E -.11(ve)-.11 G(ly).11 E F0 .78
(with the semaphore module de)3.53 F -.165(ve)-.275 G(loped).165 E(abo)
58 218 Q -.165(ve)-.165 G 7.991(.D).165 G 2.491(epending on your approa\
ch you may or may not need to use all of the semaphore functions abo)
-7.991 F -.165(ve)-.165 G(.).165 E(Ho)58 231 Q(we)-.275 E -.165(ve)-.275
G 1.175 -.44(r, i).165 H 3.045(fy).44 G .295
(our FIFO implementation tak)-3.045 F .296
(es more than about 100 lines of code, you are probably o)-.11 F -.165
(ve)-.165 G -.22(r-).165 G(complicating).22 E(things.)58 244 Q F1
(void fifo_init\(struct fifo *f\);)82 258 Q
(Initialize the shared memory FIFO *f including any)173.2 272 Q
(required underlying initializations.)173.2 286 Q(fifo will)12 E
(have a fifo length of MYFIFO_BUFSIZ elements, which should be)173.2 300
Q 6(as)173.2 314 S
(tatic #define in fifo.h \(a value of 4K is reasonable\).)-6 E
(void fifo_wr\(struct fifo *f,unsigned long d\);)82 328 Q
(Enqueue the data word d into the FIFO, blocking)173.2 342 Q
(unless and until the FIFO has room to accept it.)173.2 356 Q
(unsigned long fifo_rd\(struct fifo *f\);)82 370 Q
(Dequeue the next data word from the FIFO and return it.)173.2 384 Q
(Block unless and until there are available words)173.2 398 Q
(queued in the FIFO.)173.2 412 Q F2(Pr)245.505 438 Q(ob)-.22 E
(lem 3 -- T)-.11 E(est y)-.66 E(our FIFO)-.275 E F0 .042(Create a frame)
58 457 R -.11(wo)-.275 G .042(rk for testing your FIFO implementation.)
.11 F .042(Establish a)5.542 F F3 .042(struct fifo)2.792 F F0 .042
(in shared memory and create)2.792 F(tw)58 470 Q 3.038(ov)-.11 G .288(i\
rtual processors, one of which will be the writer and the other the rea\
der)-3.038 F 5.788(.H)-.605 G -2.475 -.22(av e)-5.788 H .288
(the writer send a \214x)3.258 F .289(ed number)-.165 F
(of sequentially-numbered data using)58 483 Q F3(fifo_wr)2.75 E F0
(and ha)2.75 E .33 -.165(ve t)-.22 H(he reader read these and v).165 E
(erify that all were recei)-.165 E -.165(ve)-.275 G(d.).165 E(Ne)58 502
Q 1.669(xt, gi)-.165 F 1.999 -.165(ve y)-.275 H 1.669
(our system the acid test by creating multiple writers, b).165 F 1.669
(ut one reader)-.22 F 7.168(.I)-.605 G 4.418(nas)-7.168 G 1.668
(uccessful test, all of the)-4.418 F .368
(writers' streams will be recei)58 515 R -.165(ve)-.275 G 3.118(db).165
G 3.118(yt)-3.118 G .368(he reader complete, in \(relati)-3.118 F -.165
(ve)-.275 G 3.118(\)s).165 G .368
(equence, with no missing or duplicated items,)-3.118 F 1.418
(and all processes will e)58 528 R -.165(ve)-.275 G 1.418
(ntually run to completion and e).165 F 1.418(xit \(no hanging\).)-.165
F 4.168(As)6.918 G 1.417(uggested approach is to treat each)-4.168 F
(datum \(32-bit w)58 541 Q(ord\) as a bitwise w)-.11 E
(ord consisting of an ID for the writer and the sequence number)-.11 E
(.)-.605 E .697(Use reasonable test parameters.)58 560 R(Remember)6.198
E 3.448(,a)-.44 G 3.448(na)-3.448 G .698(cid test of a FIFO where the b)
-3.448 F(uf)-.22 E .698(fer does not \214ll and empty quite a)-.275 F
(fe)58 573 Q 3.559(wt)-.275 G .809(imes has a pH of 6.9, i.e. it isn')
-3.559 F 3.559(ta)-.198 G -.165(ve)-.001 G .808(ry good acid.).165 F
-1.21(Yo)6.308 G 3.558(us)1.21 G .808(hould be able to demonstrate)
-3.558 F F4(failur)3.558 E(e)-.198 E F0 .808(by deliberately)3.558 F
.777(breaking something in your implementation, e.g. re)58 586 R -.165
(ve)-.275 G .777(rsing the order of tw).165 F 3.527(oo)-.11 G 3.527
(perations. Y)-3.527 F .777(ou should then be able to)-1.21 F
(demonstrate success under a v)58 599 Q(ariety of strenuous conditions.)
-.275 E/F5 11/Times-Italic@0 SF .137
(Submit all of the code comprising this \214nal test system, i.e)58 618
R 2.886(.y)-.165 G .136(our sem.[c)-2.886 F .136(h], \214fo.[c)-.165 F
.136(h] and main.c \214les, as well as output)-.165 F(fr)58 631 Q .863
(om your test pr)-.495 F -.11(og)-.495 G -.165(ra).11 G 3.613(ms).165 G
.863(howing it r)-3.613 F .863(an corr)-.165 F(ectly)-.407 E 6.363(.I)
-.605 G 3.613(ft)-6.363 G .863(he output is very verbose)-3.613 F 3.613
(,y)-.11 G .863(ou may trim the uninter)-3.613 F .864(esting stuf)-.407
F(f)-.198 E(with an appr)58 644 Q(opriate annotation.)-.495 E -1.012(Yo)
58 663 S .499(ur system should be b)1.012 F(ulletpr)-.22 E .499
(oof as far as loc)-.495 F .499(king and wait/wak)-.22 F .499
(eup in the face of multiple r)-.11 F(eader)-.407 E 3.249(sA)-.11 G .499
(ND writer)-3.249 F 3.249(so)-.11 G(n)-3.249 E .128
(the same FIFO \(although you do not have to test the multiple r)58 676
R(eader)-.407 E 2.878(s\). Y)-.11 F .128(ou will pr)-1.012 F .128
(obably \214nd that err)-.495 F(or)-.495 E 2.879(sa)-.11 G .943 -.407
(re q)-2.879 H(uic).407 E -.11(ke)-.22 G(r).11 E
(to appear on a true multi-pr)58 689 Q(ocessor system.)-.495 E 0 Cg EP
%%Trailer
end
%%EOF
