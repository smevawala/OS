%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Tue Nov 26 22:48:35 2013
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: file fork2.eps
%%+ file fork1.eps
%%+ file cswitch3.eps
%%+ file cswitch2.eps
%%+ file cswitch1.eps
%%+ file waitq.eps
%%+ file cll.eps
%%+ file procstate.eps
%%+ file ucontext.eps
%%+ procset grops 1.19 1
%%Pages: 33
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 60 Q
(Unit 9/pg 1)55.998 E(\2512013 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF 3.25(AT)227.484 120 S(ask Switch)-4.446 E/F2 13
/Times-Roman@0 SF 3.228(Consider a multi-threaded user)33.336 156 R(-le)
-.26 E -.195(ve)-.325 G 6.478(lp).195 G 6.478(rogram. I.e.)-6.478 F
3.228(one address space, with multiple)6.478 F 3.196
(independent threads of e)33.336 171 R -.195(xe)-.195 G 3.197
(cution within.).195 F 3.197(What de\214nes the)9.697 F F1(context)6.447
E F2 3.197(of e)6.447 F -.195(xe)-.195 G 3.197(cution on).195 F
(X86-32 architecture?)33.336 186 Q 0 0 216 323 -338.378 506 159.336
545.378 PBEGIN
%%BeginDocument: ucontext.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ucontext.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Apr 11 00:32:26 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 323 506
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 506 moveto 0 0 lineto 323 0 lineto 323 506 lineto closepath clip newpath
-147.8 576.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 2475 1200 m 5175 1200 l 5175 9600 l 2475 9600 l
 cp gs col0 s gr 
% Polyline
n 2475 1875 m 5175 1875 l 5175 4200 l 2475 4200 l
 cp gs col0 s gr 
% Polyline
n 2475 6825 m 5175 6825 l 5175 7275 l 2475 7275 l
 cp gs col0 s gr 
% Polyline
n 2475 7650 m 5175 7650 l 5175 8100 l 2475 8100 l
 cp gs col0 s gr 
% Polyline
n 2475 8475 m 5175 8475 l 5175 8925 l 2475 8925 l
 cp gs col0 s gr 
% Polyline
n 2475 4800 m 5175 4800 l 5175 6000 l 2475 6000 l
 cp gs col0 s gr 
% Polyline
n 2700 5175 m 4650 5175 l 4650 5400 l 2700 5400 l
 cp gs col0 s gr 
% Polyline
n 2700 5400 m 4650 5400 l 4650 5625 l 2700 5625 l
 cp gs col0 s gr 
% Polyline
n 2700 5625 m 4650 5625 l 4650 5850 l 2700 5850 l
 cp gs col0 s gr 
% Polyline
gs  clippath
4785 2520 m 4785 2580 l 4937 2580 l 4817 2550 l 4937 2520 l cp
eoclip
n 7050 2100 m 6750 2025 l 6675 2250 l 6375 2175 l 6300 2325 l 6000 2250 l
 5850 2400 l 5625 2400 l 5550 2550 l
 4800 2550 l gs col0 s gr gr

% arrowhead
n 4937 2520 m 4817 2550 l 4937 2580 l  col0 s
% Polyline
gs  clippath
4897 3007 m 4897 3067 l 5049 3067 l 4929 3037 l 5049 3007 l cp
eoclip
n 7162 2587 m 6862 2512 l 6787 2737 l 6487 2662 l 6412 2812 l 6112 2737 l
 5962 2887 l 5737 2887 l 5662 3037 l
 4912 3037 l gs col0 s gr gr

% arrowhead
n 5049 3007 m 4929 3037 l 5049 3067 l  col0 s
% Polyline
gs  clippath
4635 3570 m 4635 3630 l 4787 3630 l 4667 3600 l 4787 3570 l cp
eoclip
n 6900 3150 m 6600 3075 l 6525 3300 l 6225 3225 l 6150 3375 l 5850 3300 l
 5700 3450 l 5475 3450 l 5400 3600 l
 4650 3600 l gs col0 s gr gr

% arrowhead
n 4787 3570 m 4667 3600 l 4787 3630 l  col0 s
% Polyline
gs  clippath
4860 6945 m 4860 7005 l 5012 7005 l 4892 6975 l 5012 6945 l cp
eoclip
n 6375 6975 m
 4875 6975 l gs col0 s gr gr

% arrowhead
n 5012 6945 m 4892 6975 l 5012 7005 l  col0 s
% Polyline
gs  clippath
4860 7770 m 4860 7830 l 5012 7830 l 4892 7800 l 5012 7770 l cp
eoclip
n 6375 7800 m
 4875 7800 l gs col0 s gr gr

% arrowhead
n 5012 7770 m 4892 7800 l 5012 7830 l  col0 s
% Polyline
gs  clippath
4860 8670 m 4860 8730 l 5012 8730 l 4892 8700 l 5012 8670 l cp
eoclip
n 6375 8700 m
 4875 8700 l gs col0 s gr gr

% arrowhead
n 5012 8670 m 4892 8700 l 5012 8730 l  col0 s
/Times-Roman-iso ff 200.00 scf sf
3450 2100 m
gs 1 -1 sc (text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2850 7125 m
gs 1 -1 sc (stack for T1) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3000 7950 m
gs 1 -1 sc (stack for T2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2925 8775 m
gs 1 -1 sc (stack for T3) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2625 5025 m
gs 1 -1 sc (context-save areas) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3300 5325 m
gs 1 -1 sc (T1) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3300 5550 m
gs 1 -1 sc (T2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
3300 5850 m
gs 1 -1 sc (T3) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7125 2100 m
gs 1 -1 sc (T1.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 2625 m
gs 1 -1 sc (T2.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6975 3225 m
gs 1 -1 sc (T3.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 7050 m
gs 1 -1 sc (T1.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 7800 m
gs 1 -1 sc (T2.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 8775 m
gs 1 -1 sc (T3.esp) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 4.97<8354>33.336 566.378 S 1.72(he eip re)-4.97 F 1.72
(gister determines the \215o)-.195 F 4.97(wo)-.325 G 4.97(fe)-4.97 G
-.195(xe)-5.165 G 1.72(cution \(where the ne).195 F 1.719
(xt instruction will be)-.195 F(fetched\).)33.336 581.378 Q 6.738<8354>
33.336 596.378 S 3.488(he e\215ags re)-6.738 F 3.488
(gister contains the condition codes and thus af)-.195 F 3.489(fects ho)
-.325 F 6.739(wc)-.325 G(onditional)-6.739 E(branches will happen.)
33.336 611.378 Q 6.205<8354>33.336 626.378 S 2.955(he esp re)-6.205 F
2.954(gister controls calling/returning functions because it is where t\
he return)-.195 F 1.447(address is pushed/popped during CALL / RET)
33.336 641.378 R 7.947(.E)-.962 G 1.448(ach thread must ha)-7.947 F
1.838 -.195(ve a)-.26 H 4.698(ni).195 G(ndependent)-4.698 E(non-o)33.336
656.378 Q -.195(ve)-.195 G 3.865
(rlapping memory area for stack, otherwise there is no meaningful w).195
F 3.864(ay for)-.13 F(functions to e)33.336 671.378 Q(xist.)-.195 E
4.684<8354>33.336 686.378 S 1.434(he ebp re)-4.684 F 1.434
(gister is used in man)-.195 F 4.685(yl)-.195 G 1.435
(anguages' run-time model to access local v)-4.685 F(ariables)-.325 E
(which li)33.336 701.378 Q .39 -.195(ve i)-.325 H 3.25(nt).195 G
(he stack.)-3.25 E 4.321<834f>33.336 716.378 S 1.071(ther re)-4.321 F
1.071(gisters such as eax, ebx, etc. are used to store w)-.195 F 1.07
(orking v)-.13 F 1.07(ariables, intermediate)-.325 F(results, etc.)
33.336 731.378 Q 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 2)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF .214(So in other w)33.336 120 R .214
(ords, the v)-.13 F .214(alues of the CPU re)-.325 F .215
(gisters de\214ne the conte)-.195 F 3.465(xt. Thus)-.195 F .215
(from a purely)3.465 F(user)33.336 135 Q(-le)-.26 E -.195(ve)-.325 G
4.632(ls).195 G 1.382
(tandpoint, assuming that the operating system does not ha)-4.632 F
1.771 -.195(ve a)-.26 H 1.771 -.195(ny u).195 H(nderlying).195 E .276
(support for multi-threaded processes, it w)33.336 150 R .276
(ould be possible for one task)-.13 F/F2 13/Times-Italic@0 SF
(voluntarily)3.526 E F1 .276(to gi)3.526 F -.195(ve)-.325 G -2.99 -.195
(aw a)33.336 165 T 3.53(yt).195 G .28
(he sole \(virtual\) processor to another task by sa)-3.53 F .279
(ving all of its re)-.26 F .279(gisters in some safe)-.195 F 3.488
(place, and then restoring the other tasks' pre)33.336 180 R(viously-sa)
-.325 E -.195(ve)-.26 G 6.738(dr).195 G -.195(eg)-6.738 G 3.489
(ister set into the cpu).195 F(re)33.336 195 Q 6.182(gisters. Indeed,)
-.195 F 2.932(this user)6.182 F(-le)-.26 E -.195(ve)-.325 G 6.182(la)
.195 G 2.932(pproach w)-6.182 F 2.931(as used in v)-.13 F 2.931
(ery early v)-.195 F 2.931(ersions of Linux)-.195 F
(before thread support w)33.336 210 Q
(as introduced \(more than 15 years ago\).)-.13 E/F3 13/Times-Bold@0 SF
(Pr)150.901 240 Q(eempti)-.234 E .26 -.13(ve a)-.13 H(nd Cooperati).13 E
.26 -.13(ve M)-.13 H(ultitasking).13 E F1 5.125 -1.04(We h)33.336 276 T
-2.925 -.26(av e)1.04 H 3.045(seen ho)6.555 F 6.295(wt)-.325 G 3.046
(he k)-6.295 F 3.046(ernel uses time-slicing to pro)-.13 F 3.046
(vide an illusion: that a single)-.195 F 1.266
(processor is actually running multiple simultaneous tasks.)33.336 291 R
1.266(On a multiprocessor system,)7.766 F 4.304
(the illusion is that the total number of tasks can e)33.336 306 R 4.304
(xceed the number of ph)-.195 F(ysical)-.065 E(processors.)33.336 321 Q
3.279(Simple operating systems use)33.336 342 R F3(cooperati)6.529 E
3.539 -.13(ve m)-.13 H(ultitasking).13 E F1 9.779(.A)C 3.278
(task which is currently)-3.251 F 1.673(running on the processor v)
33.336 357 R 1.673(oluntarily gi)-.26 F -.195(ve)-.325 G 4.923(su).195 G
4.923(pt)-4.923 G 1.673(he processor and allo)-4.923 F 1.673
(ws another task to)-.325 F(run.)33.336 372 Q .989(Most operating syste\
ms designed for general multiuser use recognize that tasks can')33.336
393 R 4.239(tb)-.234 G(e)-4.239 E 2.366
(trusted to relinquish the processor)33.336 408 R(.)-.715 E F3(Pr)8.866
E(e-empti)-.234 E 2.626 -.13(ve m)-.13 H(ultitasking).13 E F1 2.366
(means that a currently)5.616 F 4.611
(running task can be forcefully suspended and a conte)33.336 423 R 4.61
(xt switch made to another)-.195 F(,)-.52 E(presumably `)33.336 438 Q
(`better')-.962 E 3.25('t)-.962 G(ask to run.)-3.25 E 1.399
(The trigger for preemption may be based on priority)33.336 459 R 4.649
(,i)-.845 G 1.4(.e. a higher)-4.649 F 1.4(-priority task has just)-.26 F
.503(become ready to run.)33.336 474 R .502
(It may also be based on time-slicing, in which each task is gi)7.003 F
-.195(ve)-.325 G 3.752(na).195 G .561
(certain amount of time and then another task is gi)33.336 489 R -.195
(ve)-.325 G 3.812(nt).195 G .562(he CPU.)-3.812 F .562(This requires a)
7.062 F F3 -.26(Pe)3.812 G(riodic).26 E(Inter)33.336 504 Q -.13(va)-.13
G 3.927(lT).13 G(imer)-4.161 E F1 3.927(interrupt. Or)3.927 F 3.927(,i)
-.52 G 3.927(tt)-3.927 G .677
(he trigger could be a blend of priority and time.)-3.927 F .676(In the)
7.176 F .139(Linux k)33.336 519 R .139(ernel, it is the)-.13 F/F4 13
/Courier@0 SF(scheduler)3.389 E F1 .139(subsystem which mak)3.389 F .14
(es the decision as to which task)-.13 F(to run and when.)33.336 534 Q
.781(In this unit, we shall study the implementation of multi-tasking i\
n the Linux k)33.336 555 R 4.03(ernel. W)-.13 F(e)-1.04 E(ha)33.336 570
Q 1.163 -.195(ve a)-.26 H .773(lready seen that the k).195 F .774
(ernel is a multi-threaded program of sorts where each thread)-.13 F
1.589(\(task\) has its o)33.336 585 R 1.589(wn k)-.325 F 1.589
(ernel-mode stack.)-.13 F 1.589
(The situation therefore is analogous to the user)8.089 F(-)-.26 E(le)
33.336 600 Q -.195(ve)-.325 G 5.055(lv).195 G 1.805
(oluntary task switch described abo)-5.315 F -.195(ve)-.195 G 8.305(.T)
.195 G 1.805(he k)-8.305 F 1.805(ernel is a)-.13 F F2(contr)5.055 E
(olled)-.585 E F1 -.195(ex)5.055 G 1.805(tension of a).195 F(process')
33.336 615 Q 5.012(s\()-.715 G(task')-5.012 E 1.762(s\) conte)-.715 F
1.762(xt into k)-.195 F 1.762(ernel mode.)-.13 F 1.762(The k)8.262 F
1.762(ernel code,)-.13 F F3 1.762(acting on behalf of the)5.012 F(pr)
33.336 630 Q(ocess)-.234 E F1 8.236(,i)C(mplements)-8.236 E F2(cooper)
8.236 E(ative)-.195 E F1 4.986
(multitasking, which from the standpoint of user)8.236 F
(processes, appears to be)33.336 645 Q F2(pr)3.25 E(eemptive)-.481 E F1
(multitasking.)3.25 E .262(In the Linux k)33.336 666 R .262
(ernel, the term)-.13 F F3(task)3.512 E F1 .261
(is used to mean a schedulable thread of control.)3.512 F(When)6.761 E
4.163(processes are running programs which are multi-threaded, there ar\
e multiple tasks)33.336 681 R .045
(running around inside the same process address space.)33.336 696 R .045
(The Linux scheduler w)6.545 F .045(orks on the)-.13 F
(basis of tasks, not processes.)33.336 711 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 3)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF(Pr)216.005 120 Q(ocess/task states)-.234 E/F2 13
/Times-Roman@0 SF(Uni)33.336 156 Q -.195(ve)-.325 G
(rsal among multitasking operating systems is the notion of task).195 E
F1(states)3.25 E F2(.)A 8.151(As)33.336 177 S 4.901
(imple model of task states is presented belo)-8.151 F 9.841 -.845(w. T)
-.325 H 4.901(he state names chosen are).845 F 1.06
(generalized, and not necessarily the names used in an)33.336 192 R 4.31
(yp)-.195 G 1.06(articular UNIX k)-4.31 F 4.31(ernel. W)-.13 F 4.31(ea)
-1.04 G(re)-4.31 E(also ignoring certain subtleties, such as job contro\
l and process tracing.)33.336 207 Q 0 0 468 479 -323.399 331 33.336
551.399 PBEGIN
%%BeginDocument: procstate.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: procstate.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 26 19:24:51 2013
%%For: hak@lex ()
%%BoundingBox: 0 0 479 331
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 331 moveto 0 0 lineto 479 0 lineto 479 331 lineto closepath clip newpath
-107.5 365.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 0
% Ellipse
7.500 slw
n 7200 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
30.000 slw
n 4800 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 4800 1200 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
7.500 slw
n 2400 3600 600 600 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 3750 5400 675 675 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 6071 5323 675 675 0 360 DrawEllipse gs col-1 s gr

% Polyline
gs  clippath
2985 3570 m 2985 3630 l 3137 3630 l 3017 3600 l 3137 3570 l cp
eoclip
n 4200 3600 m
 3000 3600 l gs col-1 s gr gr

% arrowhead
n 3137 3570 m 3017 3600 l 3137 3630 l  col-1 s
% Polyline
gs  clippath
7785 3570 m 7785 3630 l 7937 3630 l 7817 3600 l 7937 3570 l cp
eoclip
n 8550 3600 m
 7800 3600 l gs col-1 s gr gr

% arrowhead
n 7937 3570 m 7817 3600 l 7937 3630 l  col-1 s
% Polyline
gs  clippath
6615 3630 m 6615 3570 l 6463 3570 l 6583 3600 l 6463 3630 l cp
eoclip
n 5400 3600 m
 6600 3600 l gs col-1 s gr gr

% arrowhead
n 6463 3630 m 6583 3600 l 6463 3570 l  col-1 s
% Polyline
gs  clippath
3946 4707 m 3978 4758 l 4106 4676 l 3989 4716 l 4074 4626 l cp
eoclip
n 4800 4200 m
 3975 4725 l gs col-1 s gr gr

% arrowhead
n 4074 4626 m 3989 4716 l 4106 4676 l  col-1 s
% Polyline
gs  clippath
7228 4217 m 7196 4166 l 7068 4248 l 7186 4209 l 7100 4298 l cp
eoclip
n 6375 4725 m
 7200 4200 l gs col-1 s gr gr

% arrowhead
n 7100 4298 m 7186 4209 l 7068 4248 l  col-1 s
% Polyline
gs  clippath
5250 3090 m 5250 3150 l 5402 3150 l 5282 3120 l 5402 3090 l cp
eoclip
n 6810 3120 m
 5265 3120 l gs col-1 s gr gr

% arrowhead
n 5402 3090 m 5282 3120 l 5402 3150 l  col-1 s
% Polyline
gs  clippath
4830 1785 m 4770 1785 l 4770 1937 l 4800 1817 l 4830 1937 l cp
eoclip
n 4800 1800 m
 4800 3000 l gs col-1 s gr gr

% arrowhead
n 4830 1937 m 4800 1817 l 4770 1937 l  col-1 s
% Polyline
gs  clippath
4620 3015 m 4680 3015 l 4680 2863 l 4650 2983 l 4620 2863 l cp
eoclip
n 4650 3000 m
 4650 1800 l gs col-1 s gr gr

% arrowhead
n 4620 2863 m 4650 2983 l 4680 2863 l  col-1 s
% Polyline
 [60] 0 sd
gs  clippath
4785 2370 m 4785 2430 l 4937 2430 l 4817 2400 l 4937 2370 l cp
eoclip
n 7200 2400 m
 4800 2400 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 4937 2370 m 4817 2400 l 4937 2430 l  col-1 s
% Polyline
gs  clippath
6701 3995 m 6675 3941 l 6538 4007 l 6660 3982 l 6565 4061 l cp
eoclip
n 4350 5100 m
 6675 3975 l gs col-1 s gr gr

% arrowhead
n 6565 4061 m 6660 3982 l 6538 4007 l  col-1 s
% Polyline
gs  clippath
5770 4758 m 5804 4709 l 5679 4622 l 5761 4716 l 5645 4671 l cp
eoclip
n 5025 4200 m
 5775 4725 l gs col-1 s gr gr

% arrowhead
n 5645 4671 m 5761 4716 l 5679 4622 l  col-1 s
% Polyline
gs  clippath
7532 4134 m 7488 4093 l 7385 4204 l 7489 4137 l 7429 4245 l cp
eoclip
n 6672 5020 m
 7500 4125 l gs col-1 s gr gr

% arrowhead
n 7429 4245 m 7489 4137 l 7385 4204 l  col-1 s
% Polyline
2 slj
gs  clippath
4282 3257 m 4296 3199 l 4148 3164 l 4259 3221 l 4135 3223 l cp
eoclip
n 4575 3000 m 4574 2998 l 4572 2995 l 4569 2989 l 4563 2979 l 4556 2966 l
 4546 2948 l 4534 2927 l 4519 2902 l 4503 2875 l 4485 2844 l
 4465 2812 l 4444 2779 l 4423 2745 l 4400 2710 l 4377 2676 l
 4353 2642 l 4329 2610 l 4304 2579 l 4278 2549 l 4252 2520 l
 4225 2494 l 4198 2470 l 4169 2449 l 4140 2431 l 4110 2416 l
 4080 2405 l 4050 2400 l 4021 2400 l 3994 2405 l 3969 2413 l
 3946 2425 l 3925 2438 l 3907 2453 l 3890 2469 l 3876 2485 l
 3863 2502 l 3851 2519 l 3840 2536 l 3830 2553 l 3821 2570 l
 3812 2588 l 3804 2605 l 3796 2623 l 3789 2642 l 3781 2662 l
 3774 2683 l 3767 2705 l 3760 2728 l 3754 2753 l 3749 2779 l
 3744 2806 l 3742 2835 l 3741 2865 l 3744 2895 l 3750 2925 l
 3762 2958 l 3779 2989 l 3799 3018 l 3822 3043 l 3848 3065 l
 3876 3086 l 3905 3104 l 3936 3120 l 3967 3135 l 4000 3148 l
 4033 3160 l 4066 3171 l 4099 3181 l 4131 3190 l 4161 3198 l
 4189 3205 l 4213 3211 l 4233 3216 l 4249 3219 l
 4275 3225 l gs col-1 s gr gr

% arrowhead
0 slj
n 4135 3223 m 4259 3221 l 4148 3164 l  col-1 s
/Times-Roman-iso ff 200.00 scf sf
4800 1275 m
gs 1 -1 sc (RUNNING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 1050 m
gs 1 -1 sc (USER) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 3450 m
gs 1 -1 sc (KERNEL) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
4800 3720 m
gs 1 -1 sc (RUNNING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7200 3675 m
gs 1 -1 sc (READY) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
8625 3675 m
gs 1 -1 sc (CREATION) col-1 sh gr
/Times-Roman-iso ff 233.33 scf sf
2400 3675 m
gs 1 -1 sc (ZOMBIE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 233.33 scf sf
3600 3900 m
gs 1 -1 sc (exit) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3600 1950 m
gs 1 -1 sc (System Call,) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
5400 2250 m
gs 1 -1 sc (Return) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 2550 m
gs 1 -1 sc (Check for) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
7275 2790 m
gs 1 -1 sc (signals) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3555 2160 m
gs 1 -1 sc (Interrupt,Fault) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6210 3045 m
gs 1 -1 sc (Scheduled-IN) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6060 3555 m
gs 1 -1 sc (Scheduled-OUT) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3720 2925 m
gs 1 -1 sc (Page Fault) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3750 2700 m
gs 1 -1 sc (Interrupt,) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
3825 5175 m
gs 1 -1 sc (SLEEPING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6075 4425 m
gs 1 -1 sc (woken up) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
5175 4500 m
gs 1 -1 sc (waiting) dup sw pop neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6075 5100 m
gs 1 -1 sc (SLEEPING) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
6075 5400 m
gs 1 -1 sc (INTERRUPTIBLE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
3750 5550 m
gs 1 -1 sc (INTERRUPTIBLE) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 166.67 scf sf
3750 5400 m
gs 1 -1 sc (NON) dup sw pop 2 div neg 0 rm  col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6975 4875 m
gs 1 -1 sc (received) col-1 sh gr
/Times-Roman-iso ff 200.00 scf sf
6975 5100 m
gs 1 -1 sc (signal) col-1 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND(The state diagram depicts the task state transitions, from the\
 perspecti)33.336 578.399 Q .39 -.195(ve o)-.325 H 3.25(ft).195 G
(he task.)-3.25 E(USER R)33.336 599.399 Q
(UNNING: The task currently has a CPU and is running a user program.)
-.52 E .466(KERNEL R)33.336 620.399 R .466(UNNING: The task is being e)
-.52 F -.195(xe)-.195 G .466(cuted in k).195 F .466
(ernel mode, as the result of system)-.13 F(call, f)33.336 635.399 Q
(ault or \(asynchronous\) interrupt.)-.13 E(READ)33.336 656.399 Q 2.89
-1.196(Y: T)-.715 H .497(he task is ready to run, b)1.196 F .497
(ut does not currently ha)-.26 F .887 -.195(ve a C)-.26 H 3.747(PU. A)
.195 F(READ)3.747 E 3.747(Yt)-.715 G .497(ask is)-3.747 F
(found on a run queue.)33.336 671.399 Q .373(SLEEPING: The task is a)
33.336 692.399 R -.13(wa)-.195 G .373(iting some e).13 F -.195(ve)-.325
G .374(nt and is therefore not runnable.).195 F 3.624(At)6.874 G .374
(ask in the)-3.624 F .314
(SLEEPING state has been temporarily suspended.)33.336 707.399 R -.195
(Fo)6.814 G 3.564(re).195 G .314(xample, if a read system call has)
-3.759 F 2.434(been performed to read the ne)33.336 722.399 R 2.434
(xt character from the tty)-.195 F 5.685(,t)-.845 G 2.435
(he task must sleep until the)-5.685 F 1.105(character actually arri)
33.336 737.399 R -.195(ve)-.325 G 4.355(s. A).195 F 1.105
(sleeping task will ne)4.355 F -.195(ve)-.325 G 4.355(rb).195 G 4.355
(es)-4.355 G 1.105(cheduled until it is w)-4.355 F(ok)-.13 E 1.105
(en up.)-.13 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 4)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF 3.938(As)33.336 120 S .688(leeping task is al)
-3.938 F -.13(wa)-.13 G .688(ys in k).13 F .688
(ernel mode, and got there synchronously)-.13 F 3.938(,v)-.845 G .689
(ia a system call)-3.938 F(or f)33.336 135 Q(ault handler)-.13 E 6.5(.I)
-.715 G(nterrupt \(asynchronous\) handlers can ne)-6.5 E -.195(ve)-.325
G 3.25(rc).195 G(ause sleeping.)-3.25 E 4.81 -1.04(We m)33.336 156 T
2.73(ay further distinguish between INTERR)1.04 F 2.73
(UPTIBLE and NON-INTERR)-.52 F(UPTIBLE)-.52 E 5.883(sleeps. This)33.336
171 R 2.634(decision is made when the task puts itself to sleep.)5.883 F
(INTERR)9.134 E(UPTIBLE)-.52 E .726
(sleeps will be terminated if a signal arri)33.336 186 R -.195(ve)-.325
G .726(s, whereas in a NON-INTERR).195 F .725(UPTIBLE sleep)-.52 F(deli)
33.336 201 Q -.195(ve)-.325 G(ry of the signal will be deferred.).195 E
.313(ZOMBIE: A task which has terminated b)33.336 222 R .313
(ut whose statistics ha)-.26 F .703 -.195(ve n)-.26 H .313
(ot yet been claimed by).195 F 2.389(the parent.)33.336 237 R 2.388
(Once the zombie status has been claimed by the parent through the w)
8.889 F(ait)-.13 E -.13(fa)33.336 252 S
(mily of system calls, the task no longer e).13 E(xists.)-.195 E/F2 13
/Times-Bold@0 SF(Data structur)98.362 297 Q(es f)-.234 E(or tracking pr)
-.325 E(ocesses / tasks in Linux k)-.234 E(er)-.13 E(nel)-.195 E F1 .676
(Unfortunately the Linux k)33.336 333 R .676(ernel suf)-.13 F .676
(fers from a lack of consistent naming con)-.325 F -.195(ve)-.52 G .676
(ntion, and).195 F(man)33.336 348 Q 4.516(yo)-.195 G 4.516(ft)-4.516 G
1.266(he data structures ha)-4.516 F 1.655 -.195(ve m)-.26 H 1.265
(isleading names.).195 F 1.265(The primary data structures which)7.765 F
(implement multitasking are:)33.336 363 Q<83>33.336 378 Q/F3 13
/Courier@0 SF 2.571(struct thread_info)5.821 F F1 5.821(:Av)C 2.571
(ery small struct that li)-6.016 F -.195(ve)-.325 G 5.821(sa).195 G
5.821(tt)-5.821 G 2.572(he end of each task')-5.821 F(s)-.715 E -.13(ke)
33.336 393 S 1.823(rnel-mode stack.).13 F 1.822
(It contains only those data essential to the transition between user)
8.323 F(and k)33.336 408 Q(ernel mode, and w)-.13 E
(as described in Unit #8.)-.13 E<83>33.336 423 Q F3 2.433
(struct task_struct)5.683 F F1 5.683(:T)C 2.433(his lar)-5.683 F 2.434
(ger structure contains, either directly or through)-.234 F 4.057
(reference to other data structures, e)33.336 438 R -.195(ve)-.325 G
4.057(rything there is to kno).195 F 7.307(wa)-.325 G 4.057(bout a gi)
-7.307 F -.195(ve)-.325 G 7.307(nt).195 G(ask)-7.307 E .227(\(process\)\
, such as its credentials \(uid/gid\), its open \214le descriptor table\
, its virtual address)33.336 453 R 1.559(space map, and its relationshi\
p to other processes \(parent/child/sibling, process groups,)33.336 468
R 4.221(etc.\) The)33.336 483 R F3(task_struct)4.221 E F1 .971(is f)
4.221 F .971(ar too lar)-.13 F .971(ge to k)-.234 F .972
(eep in the limited k)-.13 F .972(ernel stack space, and)-.13 F 2.447
(instead is dynamically allocated via the k)33.336 498 R 2.446
(ernel memory allocator \(kmalloc, similar to)-.13 F(user)33.336 513 Q
(-space malloc\) whene)-.26 E -.195(ve)-.325 G 3.25(ran).195 G .65 -.325
(ew p)-3.25 H(rocess/task is created.).325 E<83>33.336 528 Q F3(current)
6.825 E F1 6.825(:T)C 3.575(his is simply a pointer to the)-6.825 F F3
(task_struct)6.825 E F1 3.575(of the task which is)6.825 F/F4 13
/Times-Italic@0 SF(curr)33.336 543 Q(ent)-.481 E F1 2.732(ly e)B -.195
(xe)-.195 G 2.732(cuting on).195 F F4(this)5.982 E F1(processor)5.981 E
9.231(.A)-.715 G 2.731(lthough syntactically)-9.231 F F3(current)5.981 E
F1 2.731(looks lik)5.981 F 5.981(ea)-.13 G .566(simple global v)33.336
558 R .566(ariable in k)-.325 F .566
(ernel code, on a multi-processor systems, it is implemented as)-.13 F
3.406(am)33.336 573 S .156(acro which pro)-3.406 F .155
(vides access to what is kno)-.195 F .155(wn as the)-.325 F F3(per-cpu)
3.405 E F1 -.325(va)3.405 G .155(riable area.).325 F .155(There is)6.655
F .415(one per)33.336 588 R .415(-cpu area for each CPU in the system.)
-.26 F -.195(Fo)6.915 G 3.665(rt).195 G .415
(he most part, this distinction does not)-3.665 F(matter)33.336 603 Q
7.737(.I)-.715 G 4.487(nk)-7.737 G 1.237(ernel code,)-4.617 F F3
(current)4.487 E F1 1.237(is used to answer questions about "who am I?")
4.487 F(E.g.)7.736 E F3(current->pid)33.336 618 Q F1 2.239
(is the process ID \(OK, to be 100% correct, it is the thread id, and)
5.488 F(->tgid is the PID, as f)33.336 633 Q
(ar as user programs are concerned\).)-.13 E F2(The struct task_struct)
205.956 663 Q F1(Let')33.336 699 Q 3.551(st)-.715 G(ak)-3.551 E 3.551
(eac)-.13 G .301(loser look at some of the \214elds of)-3.551 F F3
(task_struct)3.55 E F1 6.8(.F)C .3(or clarity)-6.995 F 3.55(,m)-.845 G
(an)-3.55 E 3.55(yo)-.195 G 3.55(ft)-3.55 G(he)-3.55 E(\214elds ha)
33.336 714 Q .39 -.195(ve b)-.26 H(een remo).195 E -.195(ve)-.195 G 3.25
(do).195 G 3.25(rs)-3.25 G(impli\214ed, and some \214elds ha)-3.25 E .39
-.195(ve b)-.26 H(een reordered.).195 E/F5 10/Courier@0 SF
(/* from /usr/src/linux/include/linux/sched.h, kernel version 2.6.33 */)
33.336 726 Q(struct task_struct {)33.336 738 Q 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 5)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 10/Courier@0 SF(volatile long state;)81.336 117 Q
(/* -1 unrunnable, 0 runnable, >0 blocked */)62.4 E(void *stack;)81.336
129 Q(/* Pointer to kernel-mode stack */)168 E
(struct thread_info *thread_info;)90.936 141 Q
(/* Ptr to struct in stack */)38.4 E(struct thread_struct thread;)81.336
153 Q(/* Place to stash regs */)72 E(unsigned long flags;)81.336 165 Q
(/* per process flags PF_XXX*/)120 E(int oncpu;)81.336 177 Q
(/* which CPU on multi-processor systems */)180 E
(/* scheduler parameters and data structures */)148.536 189 Q
(int prio, static_prio;)81.336 201 Q(/* task priority */)165.6 E
(struct sched_class *sched_class;)90.936 213 Q
(/* scheduler class \(norm/rt\) */)38.4 E(struct sched_entity se;)90.936
225 Q(/* scheduler params */)150 E(struct sched_rt_entity rt;)90.936 237
Q(/* for real-time tasks only */)74.4 E(struct sched_info sched_info;)
90.936 249 Q(/* stats on scheduling */)114 E(unsigned long policy;)
81.336 261 Q(/* NORMAL/FIFO/RR */)171.6 E(cpumask_t cpus_allowed;)90.936
285 Q(/* restrict specific cpus */)150 E(cputime_t utime, stime;)81.336
297 Q(/* user/sys ticks */)159.6 E(struct timespec start_time;)81.336
309 Q(/* task creation time */)78 E(struct list_head tasks;)81.336 333 Q
(/* linked list of all tasks */)102 E(struct mm_struct *mm, *active_mm;)
81.336 357 Q(/* address space */)42 E
(/* Parent/child/sibling relationships */)148.536 381 Q
(int exit_code, exit_signal;)81.336 393 Q(/* wait status */)78 E
(pid_t pid;)81.336 405 Q(/* see text "Process and Thread */)122.4 E
(pid_t tgid;)81.336 417 Q(/* Creation" about pid vs tgid */)116.4 E
(struct list_head thread_group;)81.336 429 Q
(/* list of threads in process */)60 E(struct task_struct *parent;)
81.336 441 Q(/* task_struct of parent */)78 E
(struct list_head children;)81.336 453 Q(/* list of children */)84 E
(struct list_head sibling;)81.336 465 Q(/* list of siblings */)90 E(/* \
PID/PID hash table linkage. E.g. find all threads in process group*/)
81.336 489 Q(struct pid pids[PIDTYPE_MAX];)81.336 501 Q
(char comm[TASK_COMM_LEN];)90.936 537 Q(/* executable name */)80.4 E
(/* process credentials */)148.536 561 Q
(/* Note: This is really in a separate structure now */)90.936 573 Q
(uid_t uid,euid,suid,fsuid;)81.336 585 Q(gid_t gid,egid,sgid,fsgid;)
81.336 597 Q(struct group_info *group_info;)81.336 609 Q
(struct fs_struct *fs;)81.336 645 Q(/* filesystems */)171.6 E
(struct files_struct *files;)81.336 657 Q(/* file descriptors */)135.6 E
(/* Signal stuff */)148.536 681 Q(struct signal_struct *signal;)81.336
693 Q(struct sighand_struct *sighand;)81.336 705 Q
(sigset_t blocked, real_blocked;)81.336 729 Q
(struct sigpending pending;)81.336 741 Q 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 6)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 10/Courier@0 SF(};)33.336 117 Q(/* Definition of thread_struct fro\
m /usr/src/linux/arch/x86/include/asm/processor.h */)33.336 141 Q
(struct thread_struct {)33.336 153 Q(unsigned long)90.936 165 Q 79.2
(esp0; /*)37.2 F(start of kernel stack area */)6 E(unsigned long)90.936
177 Q 85.2(esp; /*)37.2 F(saved kernel stack pointer */)6 E
(unsigned long)90.936 189 Q 85.2(eip; /*)37.2 F
(saved kernel program counter */)6 E
(/* And a bunch of other stuff, mostly registers which the kernel)90.936
201 Q(doesn't ever touch, such as:)148.536 213 Q
(fs,gs,debug registers %db0-%db7, floating)206.136 225 Q
(point registers, misc control registers */)206.136 237 Q(};)33.336 249
Q/F2 13/Times-Bold@0 SF(Sidebar: link)212.138 279 Q(ed lists)-.13 E/F3
13/Times-Roman@0 SF -.52(Wi)33.336 315 S 3.328(thin the Linux k).52 F
3.328(ernel, a frequently seen data structure is the)-.13 F/F4 13
/Courier@0 SF(list_head)6.578 E F3 9.828(.T)C(he)-9.828 E F4 .263
(struct list_head)33.336 330 R F3 .263(contains tw)3.513 F 3.513(op)-.13
G(ointers)-3.513 E F4(next)3.512 E F3(and)3.512 E F4(prev)3.512 E F3
.262(to implement the doubly-)3.512 F(link)33.336 345 Q .367(ed list.)
-.13 F(Ho)6.867 E(we)-.325 E -.195(ve)-.325 G 1.407 -.52(r, r).195 H
.368
(ather than pointing at the element itself, these pointers point to the)
.52 F F4 .542(struct list_head)33.336 360 R F3 .542
(within each element.)3.792 F .541
(The result is that generic list manipulation)7.041 F 1.638
(routines can be used for an)33.336 375 R 4.889(yl)-.195 G 1.639
(ist of type FOO, because the of)-4.889 F 1.639(fset of the ne)-.325 F
1.639(xt and pre)-.195 F(v)-.325 E .159
(pointers within an element of FOO is not needed.)33.336 390 R .159
(The macro)6.659 F F4(list_entry)3.409 E F3 .158(gets back to)3.408 F
2.502(the element of type)33.336 405 R F4(type)5.752 E F3 2.502
(in which)5.752 F F4(ptr)5.752 E F3 2.502
(is the address of the list_head \214eld named)5.752 F F4(member)33.336
420 Q F3(within the entry)3.25 E(.)-.845 E F1
(#define list_entry\(ptr, type, member\) \()33.336 432 Q(\\)132 E
(\(type *\)\( \(char *\)ptr - \(size_t\) &\(\(type *\)0\)->member\)\))
81.336 444 Q F3 1.231(Furthermore, the doubly-link)33.336 477 R 1.23
(ed list is circular)-.13 F 4.48(,m)-.52 G 1.23(eaning there are ne)
-4.48 F -.195(ve)-.325 G 4.48(rN).195 G 1.23(ULL pointers.)-4.48 F 1.13
(This is adv)33.336 492 R 1.13(antageous in that it remo)-.325 F -.195
(ve)-.195 G 4.38(sal).195 G 1.13(ot of conditional code.)-4.38 F 1.131
(The entire list is also)7.63 F 1.06(represented by a)33.336 507 R F4
1.059(struct list head)4.309 F F3 4.309(,a)C 1.059(lso kno)-4.309 F
1.059(wn as the list)-.325 F/F5 13/Times-Italic@0 SF(anc)4.309 E(hor)
-.195 E F3 7.559(.I)C 4.309(fw)-7.559 G 4.309(ec)-4.309 G 1.059
(all this)-4.309 F .657(anchor A, then)33.336 522 R F4(A.next)3.908 E F3
.658(points to the \214rst item on the list, and)3.908 F F4(A.prev)3.908
E F3 .658(is the last.)3.908 F .658(It is)7.158 F 1.632(therefore just \
as easy to insert an item at either end of the list, which is ag)33.336
537 R 1.632(ain used to)-.065 F(adv)33.336 552 Q 2.132(antage in man)
-.325 F 5.382(yp)-.195 G 5.382(laces. The)-5.382 F 2.132
(anchor itself is not considered an element of the list.)5.382 F .727
(Therefore an empty list is represented by ha)33.336 567 R .727
(ving an anchor where both)-.26 F F4(next)3.977 E F3(and)3.977 E F4
(prev)3.977 E F3(point back to the anchor)33.336 582 Q(.)-.715 E .722
(It is frequently the case that a gi)33.336 603 R -.195(ve)-.325 G(n)
.195 E F4 .722(struct FOO)3.972 F F3 .722(inside the k)3.972 F .722
(ernel contains more than)-.13 F(one)33.336 618 Q F4(list_head)4.532 E
F3(member)4.532 E 7.782(.E)-.715 G 1.282(ach threads a dif)-7.782 F
1.282(ferent circular)-.325 F 4.532(,d)-.52 G(oubly-link)-4.532 E 1.281
(ed list through)-.13 F 4.15(FOO. E.g.)33.336 633 R(the)4.15 E F4
(task_struct)4.15 E F3 .901
(is on a list of all tasks in the system, and also a distinct)4.151 F
(list of all children of a particular task, etc.)33.336 648 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 7)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E 0 0 468 600 -358.8 460 33.336 478.8 PBEGIN
%%BeginDocument: cll.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cll.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Apr 11 00:55:45 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 600 460
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 460 moveto 0 0 lineto 600 0 lineto 600 460 lineto closepath clip newpath
-26.3 527.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 1200 1800 m 2400 1800 l 2400 2400 l 1200 2400 l
 cp gs col0 s gr 
% Polyline
n 1200 2100 m
 2400 2100 l gs col0 s gr 
% Polyline
15.000 slw
n 1200 1800 m 2400 1800 l 2400 2400 l 1200 2400 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
1500 2025 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
1500 2325 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 4125 1800 m 5325 1800 l 5325 2400 l 4125 2400 l
 cp gs col0 s gr 
% Polyline
n 4125 2100 m
 5325 2100 l gs col0 s gr 
% Polyline
15.000 slw
n 4125 1800 m 5325 1800 l 5325 2400 l 4125 2400 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
4425 2025 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
4425 2325 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 2625 4800 m 3825 4800 l 3825 5400 l 2625 5400 l
 cp gs col0 s gr 
% Polyline
n 2625 5100 m
 3825 5100 l gs col0 s gr 
% Polyline
15.000 slw
n 2625 4800 m 3825 4800 l 3825 5400 l 2625 5400 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
2925 5025 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 5325 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 5325 4800 m 6525 4800 l 6525 5400 l 5325 5400 l
 cp gs col0 s gr 
% Polyline
n 5325 5100 m
 6525 5100 l gs col0 s gr 
% Polyline
15.000 slw
n 5325 4800 m 6525 4800 l 6525 5400 l 5325 5400 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
5625 5025 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
5625 5325 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 8100 4800 m 9300 4800 l 9300 5400 l 8100 5400 l
 cp gs col0 s gr 
% Polyline
n 8100 5100 m
 9300 5100 l gs col0 s gr 
% Polyline
15.000 slw
n 8100 4800 m 9300 4800 l 9300 5400 l 8100 5400 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
8400 5025 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
8400 5325 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 8100 6600 m 9300 6600 l 9300 7200 l 8100 7200 l
 cp gs col0 s gr 
% Polyline
n 8100 6900 m
 9300 6900 l gs col0 s gr 
% Polyline
15.000 slw
n 8100 6600 m 9300 6600 l 9300 7200 l 8100 7200 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
8400 6825 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
8400 7125 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 5325 6600 m 6525 6600 l 6525 7200 l 5325 7200 l
 cp gs col0 s gr 
% Polyline
n 5325 6900 m
 6525 6900 l gs col0 s gr 
% Polyline
15.000 slw
n 5325 6600 m 6525 6600 l 6525 7200 l 5325 7200 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
5625 6825 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
5625 7125 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 2625 6600 m 3825 6600 l 3825 7200 l 2625 7200 l
 cp gs col0 s gr 
% Polyline
n 2625 6900 m
 3825 6900 l gs col0 s gr 
% Polyline
15.000 slw
n 2625 6600 m 3825 6600 l 3825 7200 l 2625 7200 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
2925 6825 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 7125 m
gs 1 -1 sc (prev) col0 sh gr
% Polyline
7.500 slw
n 900 6600 m 2100 6600 l 2100 7200 l 900 7200 l
 cp gs col0 s gr 
% Polyline
n 900 6900 m
 2100 6900 l gs col0 s gr 
% Polyline
15.000 slw
n 900 6600 m 2100 6600 l 2100 7200 l 900 7200 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
1200 6825 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman ff 200.00 scf sf
1200 7125 m
gs 1 -1 sc (prev) col0 sh gr
% Arc
7.500 slw
gs  clippath
1166 1719 m 1215 1754 l 1305 1633 l 1210 1712 l 1256 1597 l cp
eoclip
n 1725.0 2025.0 604.7 -7.1 -150.3 arcn
gs col0 s gr
 gr

% arrowhead
n 1256 1597 m 1210 1712 l 1305 1633 l  col0 s
% Arc
gs  clippath
1146 1825 m 1132 1767 l 985 1804 l 1109 1804 l 999 1862 l cp
eoclip
n 1119.6 2051.8 251.8 51.9 -88.8 arc
gs col0 s gr
 gr

% arrowhead
n 999 1862 m 1109 1804 l 985 1804 l  col0 s
% Polyline
n 2625 3675 m 3825 3675 l 3825 8775 l 2625 8775 l
 cp gs col0 s gr 
% Polyline
n 5325 3675 m 6525 3675 l 6525 8775 l 5325 8775 l
 cp gs col0 s gr 
% Polyline
n 8100 3675 m 9300 3675 l 9300 8775 l 8100 8775 l
 cp gs col0 s gr 
% Polyline
gs  clippath
2565 4905 m 2565 4845 l 2413 4845 l 2533 4875 l 2413 4905 l cp
eoclip
n 5250 1950 m 5775 1950 l 5775 2775 l 2400 2775 l 2400 4875 l
 2550 4875 l gs col0 s gr gr

% arrowhead
n 2413 4905 m 2533 4875 l 2413 4845 l  col0 s
% Polyline
gs  clippath
5267 4828 m 5262 4768 l 5111 4783 l 5234 4802 l 5117 4843 l cp
eoclip
n 3675 4950 m
 5250 4800 l gs col0 s gr gr

% arrowhead
n 5117 4843 m 5234 4802 l 5111 4783 l  col0 s
% Polyline
gs  clippath
7969 4827 m 7960 4768 l 7810 4789 l 7934 4802 l 7819 4848 l cp
eoclip
n 6375 5025 m
 7950 4800 l gs col0 s gr gr

% arrowhead
n 7819 4848 m 7934 4802 l 7810 4789 l  col0 s
% Polyline
gs  clippath
4020 1815 m 4080 1815 l 4080 1663 l 4050 1783 l 4020 1663 l cp
eoclip
n 9225 4875 m 9825 4875 l 9825 1575 l 4050 1575 l
 4050 1800 l gs col0 s gr gr

% arrowhead
n 4020 1663 m 4050 1783 l 4080 1663 l  col0 s
% Polyline
gs  clippath
5464 4767 m 5455 4827 l 5604 4851 l 5491 4803 l 5614 4792 l cp
eoclip
n 8250 5250 m
 5475 4800 l gs col0 s gr gr

% arrowhead
n 5614 4792 m 5491 4803 l 5604 4851 l  col0 s
% Polyline
gs  clippath
2690 4767 m 2679 4826 l 2828 4854 l 2716 4803 l 2839 4795 l cp
eoclip
n 5475 5325 m
 2700 4800 l gs col0 s gr gr

% arrowhead
n 2839 4795 m 2716 4803 l 2828 4854 l  col0 s
% Polyline
gs  clippath
8089 4756 m 8131 4714 l 8024 4606 l 8088 4713 l 7981 4649 l cp
eoclip
n 5250 2250 m 7875 2250 l 7875 4500 l
 8100 4725 l gs col0 s gr gr

% arrowhead
n 7981 4649 m 8088 4713 l 8024 4606 l  col0 s
% Polyline
gs  clippath
4065 1755 m 4065 1695 l 3913 1695 l 4033 1725 l 3913 1755 l cp
eoclip
n 2700 5250 m 2175 5250 l 2175 2550 l 3750 2550 l 3750 1725 l
 4050 1725 l gs col0 s gr gr

% arrowhead
n 3913 1755 m 4033 1725 l 3913 1695 l  col0 s
% Polyline
gs  clippath
2571 6625 m 2557 6567 l 2410 6604 l 2534 6604 l 2424 6662 l cp
eoclip
n 1950 6750 m
 2550 6600 l gs col0 s gr gr

% arrowhead
n 2424 6662 m 2534 6604 l 2410 6604 l  col0 s
% Polyline
gs  clippath
5342 6628 m 5337 6568 l 5186 6581 l 5309 6601 l 5192 6641 l cp
eoclip
n 3600 6750 m
 5325 6600 l gs col0 s gr gr

% arrowhead
n 5192 6641 m 5309 6601 l 5186 6581 l  col0 s
% Polyline
gs  clippath
8116 6704 m 8113 6644 l 7961 6651 l 8083 6676 l 7964 6711 l cp
eoclip
n 6375 6750 m
 8100 6675 l gs col0 s gr gr

% arrowhead
n 7964 6711 m 8083 6676 l 7961 6651 l  col0 s
% Polyline
gs  clippath
10443 6553 m 10436 6493 l 10286 6511 l 10409 6527 l 10293 6570 l cp
eoclip
n 9150 6675 m
 10425 6525 l gs col0 s gr gr

% arrowhead
n 10293 6570 m 10409 6527 l 10286 6511 l  col0 s
% Polyline
gs  clippath
435 7020 m 435 7080 l 587 7080 l 467 7050 l 587 7020 l cp
eoclip
n 1050 7050 m
 450 7050 l gs col0 s gr gr

% arrowhead
n 587 7020 m 467 7050 l 587 7080 l  col0 s
% Polyline
gs  clippath
5313 6643 m 5306 6702 l 5456 6721 l 5341 6677 l 5463 6662 l cp
eoclip
n 8325 7050 m
 5325 6675 l gs col0 s gr gr

% arrowhead
n 5463 6662 m 5341 6677 l 5456 6721 l  col0 s
% Polyline
gs  clippath
2689 6642 m 2680 6702 l 2829 6726 l 2716 6678 l 2839 6667 l cp
eoclip
n 5475 7125 m
 2700 6675 l gs col0 s gr gr

% arrowhead
n 2839 6667 m 2716 6678 l 2829 6726 l  col0 s
% Polyline
gs  clippath
966 6642 m 954 6701 l 1102 6731 l 991 6678 l 1114 6673 l cp
eoclip
n 2775 7050 m
 975 6675 l gs col0 s gr gr

% arrowhead
n 1114 6673 m 991 6678 l 1102 6731 l  col0 s
% Polyline
gs  clippath
8166 6642 m 8153 6701 l 8301 6734 l 8191 6679 l 8314 6675 l cp
eoclip
n 10200 7125 m
 8175 6675 l gs col0 s gr gr

% arrowhead
n 8314 6675 m 8191 6679 l 8301 6734 l  col0 s
/Times-Roman ff 200.00 scf sf
1425 1275 m
gs 1 -1 sc (Anchor) col0 sh gr
/Times-Roman ff 200.00 scf sf
1125 2700 m
gs 1 -1 sc (Empty List) col0 sh gr
/Times-Roman ff 200.00 scf sf
4425 1275 m
gs 1 -1 sc (Anchor) col0 sh gr
/Times-Roman ff 200.00 scf sf
1050 6225 m
gs 1 -1 sc (Another) col0 sh gr
/Times-Roman ff 200.00 scf sf
1050 6480 m
gs 1 -1 sc (list anchor) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Bold@0 SF(Sleep and wak)217.195 514.8 Q(eup)-.13 E
/F2 13/Times-Roman@0 SF 1.718(Frequently within the k)33.336 550.8 R
1.718(ernel a situation is encountered in which a task, e)-.13 F -.195
(xe)-.195 G 1.717(cuting in a).195 F(synchronous conte)33.336 565.8 Q
3.25(xt, must)-.195 F -.13(wa)3.25 G(it for an e).13 E -.195(ve)-.325 G
(nt to occur).195 E 6.5(.E)-.715 G(xamples include:)-6.5 E 3.25<8353>
33.336 580.8 S(ystem call which needs to w)-3.25 E
(ait for an I/O operation to complete.)-.13 E 3.25<8353>33.336 595.8 S
(ystem calls in)-3.25 E -.26(vo)-.52 G
(lving reading from an empty pipe, or writing to a full pipe.).26 E 3.25
<8352>33.336 610.8 S(eads from a sock)-3.25 E
(et with no data pending, or write to a sock)-.13 E(et with the b)-.13 E
(uf)-.26 E(fer full.)-.325 E 3.25<8353>33.336 625.8 S
(ystem calls such as)-3.25 E/F3 13/Courier@0 SF(wait)3.25 E F2(which w)
3.25 E(ait until the state of another task changes.)-.13 E 3.25<8353>
33.336 640.8 S(o-called "major" page f)-3.25 E
(aults which block until a disk I/O operation completes.)-.13 E 1.252
(Sleeping on an e)33.336 676.8 R -.195(ve)-.325 G 1.252(nt and w).195 F
1.253(aking up when it occurs in)-.13 F -.26(vo)-.52 G(lv).26 E 1.253
(es tw)-.195 F 4.503(oc)-.13 G(onte)-4.503 E 1.253(xt switches, one)
-.195 F -.26(vo)33.336 691.8 S(luntary).26 E 3.919(,t)-.845 G .669
(he other potentially pre-empti)-3.919 F -.195(ve)-.325 G 7.169(.T).195
G .669(he \214rst, v)-7.169 F .669(oluntary switch comes when say)-.26 F
.24(task "A" encounters the blocking condition in a synchronous conte)
33.336 706.8 R 3.491(xt. It)-.195 F .241(places itself on a)3.491 F -.13
(wa)33.336 721.8 S(it queue, as described belo).13 E 1.69 -.845(w, a)
-.325 H(nd then calls).845 E F3(schedule\(\))3.25 E F2 -.26(vo)3.25 G
(luntarily to yield.).26 E 2.325(At some later time, the e)33.336 742.8
R -.195(ve)-.325 G 2.325
(nt is satis\214ed, either in an asynchronous conte).195 F 2.325
(xt \(e.g. I/O)-.195 F 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 8)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF .866
(complete interrupt\) or a synchronous conte)33.336 120 R .867
(xt \(e.g.)-.195 F .867(another process writes to a pipeline\).)7.367 F
.197(This causes task "A" to be mark)33.336 135 R .197
(ed as ready to run.)-.13 F 3.446(Ac)6.696 G(onte)-3.446 E .196
(xt switch may be forced if the)-.195 F 1.34(task running at that time,\
 say task "Y", has inferior priority to task "A".)33.336 150 R(Or)11.09
E 4.59(,ac)-.52 G(onte)-4.59 E(xt)-.195 E .343(switch may happen when t\
ask "Y" uses up its time slice \(see unit 10\). In these tw)33.336 165 R
3.593(oc)-.13 G(ases,)-3.593 E 1.199(the conte)33.336 180 R 1.199
(xt switch is pre-empti)-.195 F -.195(ve)-.325 G 4.449(,a).195 G 1.2
(nd occurs via the)-4.449 F/F2 13/Courier@0 SF(TIF_NEED_RESCHED)4.45 E
F1 1.2(\215ag when)4.45 F .812(task "Y" returns to user mode.)33.336 195
R .812(Or task A could be scheduled if task Y enters the k)7.312 F
(ernel)-.13 E(and blocks.)33.336 210 Q/F3 13/Times-Bold@0 SF -.845(Wa)
231.826 240 S(it Queues).845 E F1 -.195(Fo)33.336 270 S 4.216(re).195 G
.966(ach w)-4.216 F .967(aitable e)-.13 F -.195(ve)-.325 G .967(nt, a k)
.195 F .967(ernel data structure kno)-.13 F .967(wn as a)-.325 F F3 .967
(wait queue)4.217 F F1 .967(is de\214ned.)4.217 F .967(It is)7.467 F
2.002(implemented as a circular)33.336 285 R 5.252(,d)-.52 G(oubly-link)
-5.252 E 2.002(ed list with some unusual tricks which impro)-.13 F -.195
(ve)-.195 G(ef)33.336 300 Q(\214cienc)-.325 E 5.368 -.845(y. T)-.195 H
.428(his list chains together all of the tasks which are w).845 F .428
(aiting on a speci\214c e)-.13 F -.195(ve)-.325 G(nt.).195 E(The w)
33.336 321 Q(ait queue is anchored at a w)-.13 E
(ait queue head structure:)-.13 E/F4 10/Courier@0 SF
(typedef struct __wait_queue_head {)33.336 333 Q 6(spinlock_t lock;)
90.936 345 R(/* mutex */)128.4 E(struct list_head task_list;)90.936 357
Q(/* anchor */)68.4 E 6(}w)33.336 369 S(ait_queue_head_t;)-6 E F1
(Each element of the list is:)33.336 384 Q F4
(typedef struct __wait_queue {)33.336 396 Q(unsigned int flags;)90.936
408 Q(struct task_struct *task;)90.936 420 Q(/* a slight fib */)80.4 E
(int \(*func\)\(\);)90.936 432 Q(/* simplified */)204 E
(struct list_head task_list;)90.936 444 Q(/* chains */)68.4 E 6(}w)
33.336 456 S(ait_queue_t;)-6 E F1 4.403(Aw)33.336 477 S 1.153
(ait queue of type)-4.533 F F2(wait_queue_head_t)4.402 E F1 1.152
(contains a circular)4.402 F 4.402(,d)-.52 G(oubly-link)-4.402 E 1.152
(ed list of)-.13 F F2(wait_queue_t)33.336 492 Q F1
(entries, each of which represents one task w)3.25 E(aiting on that e)
-.13 E -.195(ve)-.325 G(nt.).195 E -.325(Ke)33.336 513 S 1.175
(rnel code which places tasks on a w).325 F 1.176(ait queue is e)-.13 F
-.195(xe)-.195 G 1.176(cuted in a synchronous situation,).195 F 4.239
(because it is running in the conte)33.336 528 R 4.239
(xt of a process which is being block)-.195 F 7.488(ed. On)-.13 F(a)
7.488 E 1.693(multiprocessor system, multiple k)33.336 543 R 1.693
(ernel routines could be e)-.13 F -.195(xe)-.195 G 1.694
(cuting in true parallel and).195 F 3.491
(potentially trying to insert into the same w)33.336 558 R 3.49
(ait queue \(e.g. picture se)-.13 F -.195(ve)-.325 G 3.49(ral processes)
.195 F 1.198
(simultaneously blocking on a read from the same input source.\))33.336
573 R 1.198(Since this operation is)7.698 F .354
(not inherently atomic the)33.336 588 R F2(spin_lock)3.604 E F1 .354
(element of the list anchor must be used to protect)3.604 F(it.)33.336
603 Q 2.371(One might ask "wh)33.336 624 R 5.621(yi)-.065 G 5.621(sas)
-5.621 G 2.372
(pin lock being used to protect the list head, rather than a)-5.621 F .3
(blocking mute)33.336 639 R 3.55(xo)-.195 G 3.55(rs)-3.55 G 3.55
(emaphore?" The)-3.55 F .3(reason is \(A\) the time that k)3.55 F .3
(ernel routines are in the)-.13 F .315(critical re)33.336 654 R .315
(gion is brief and bounded....the)-.195 F 3.566(yn)-.195 G .316
(eed only to obtain the spin lock, manipulate a)-3.566 F(fe)33.336 669 Q
4.692(wp)-.325 G 1.441(ointers to insert a w)-4.692 F 1.441
(ait queue entry)-.13 F 4.691(,t)-.845 G 1.441(hen release it.)-4.691 F
1.441(\(B\) Furthermore, code which)7.941 F -.13(wa)33.336 684 S -.13
(ke).13 G 3.521(su).13 G 3.521(pt)-3.521 G .271
(asks is often called from an asynchronous conte)-3.521 F .271
(xt, e.g. after an I/O completion)-.195 F 7.091(interrupt. Therefore)
33.336 699 R 3.84(it can not perform a blocking operation, because it w)
7.091 F 3.84(ould be)-.13 F .724(blocking a process which is in ef)
33.336 714 R .725
(fect an innocent bystander and which has nothing to do)-.325 F
(with the w)33.336 729 Q(ait queue in question.)-.13 E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 9)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF 1.047(When a k)33.336 120 R 1.046(ernel task \
\(in a synchronous situation\) is about to perform an operation which)
-.13 F .193
(could potentially be blocking, it prepares for this by creating a)
33.336 135 R/F2 13/Courier@0 SF(wait_queue_t)3.443 E F1 .193(entry \(it)
3.443 F 1.973(is acceptable to mak)33.336 150 R 5.223(et)-.13 G 1.973
(his a local v)-5.223 F 1.973(ariable...the k)-.325 F 1.972
(ernel stack is a pretty safe place and)-.13 F .225(control isn')33.336
165 R 3.475(ta)-.234 G .225(bout to lea)-3.475 F .615 -.195(ve t)-.26 H
.225(he function in question\) then inserting that entry into the w).195
F(ait)-.13 E 3.499(queue head, then calling)33.336 180 R F2
(schedule\(\))6.748 E F1 3.498(to relinquish the processor)6.748 F 9.998
(.T)-.715 G 3.498(here are tw)-9.998 F(o)-.13 E(possibilities:)33.336
195 Q 3.371<8345>33.336 210 S(xclusi)-3.371 E .511 -.195(ve w)-.325 H
.121(ait: The WQ_FLA).065 F .122
(G_EXCLUSIVE bit \215ag will be set in the)-.52 F F2(flags)3.372 E F1
.122(\214eld of)3.372 F(the)33.336 225 Q F2(wait_queue_t)3.25 E F1
(entry)3.25 E 6.5(.A)-.845 G 3.25(tm)-6.5 G(ost one e)-3.25 E(xclusi)
-.195 E .39 -.195(ve p)-.325 H(rocess will be w).195 E(ok)-.13 E
(en up at a time.)-.13 E 5.072<834e>33.336 240 S(on-e)-5.072 E(xclusi)
-.195 E 2.212 -.195(ve w)-.325 H 5.072(ait: WQ_FLA).065 F 1.822
(G_EXCLUSIVE is clear)-.52 F 8.321(.A)-.715 G 1.821(ll non-e)-8.321 F
(xclusi)-.195 E 2.211 -.195(ve p)-.325 H(rocesses).195 E
(on the particular w)33.336 255 Q(ait queue will be w)-.13 E(ok)-.13 E
(en up.)-.13 E/F3 13/Times-Bold@0 SF(Exclusi)172.436 285 Q .26 -.13
(ve v)-.13 H 3.25(sn).13 G(on-exclusi)-3.25 E .26 -.13(ve w)-.13 H
(aiting).13 E F1(Exclusi)33.336 321 Q 1.984 -.195(ve w)-.325 H 1.594
(aiters are normally inserted at the tail of the w).065 F 1.594
(ait queue and non-e)-.13 F(xclusi)-.195 E -.195(ve)-.325 G -.13(wa)
33.336 336 S 1.156(iters at the head.).13 F 1.155
(Therefore, if the queue should contain both types of w)7.656 F 1.155
(aiters, all of)-.13 F 3.224(the non-e)33.336 351 R(xclusi)-.195 E 3.614
-.195(ve w)-.325 H 3.224(aiters are a).065 F -.13(wo)-.195 G -.13(ke).13
G 6.474<6e8c>.13 G 3.224(rst, then at most one e)-6.474 F(xclusi)-.195 E
3.614 -.195(ve w)-.325 H(aiter).065 E 9.724(.T)-.715 G(his)-9.724 E .457
(situation is actually not common:)33.336 366 R .457(The choice of e)
6.957 F(xclusi)-.195 E .847 -.195(ve v)-.325 H 3.707(sn).195 G(on-e)
-3.707 E(xclusi)-.195 E .847 -.195(ve w)-.325 H .457(ait is made).065 F
1.597(by the w)33.336 381 R 1.597
(aiter at the time it goes to sleep based on whether it mak)-.13 F 1.598
(es sense to w)-.13 F(ak)-.13 E 4.848(eu)-.13 G(p)-4.848 E 1.054
(multiple w)33.336 396 R 1.054(aiters when the e)-.13 F -.195(ve)-.325 G
1.054(nt arri).195 F -.195(ve)-.325 G 7.554(s. If).195 F 1.054
(it is lik)4.304 F 1.054(ely that only one task could proceed)-.13 F
.957(\(e.g. w)33.336 411 R .957(aiting on a mute)-.13 F 4.207(xl)-.195 G
.958(ock\) then the w)-4.207 F .958(ait will be e)-.13 F(xclusi)-.195 E
1.348 -.195(ve t)-.325 H 4.208(oa).195 G -.26(vo)-4.468 G .958(id the)
.26 F F3("thundering)4.208 E(herd")33.336 426 Q F1(inef)3.283 E
(\214cienc)-.325 E 3.283(y\()-.195 G .033(all tasks w)-3.283 F(ak)-.13 E
3.283(eu)-.13 G .033(p, get scheduled, tak)-3.283 F 3.282(eu)-.13 G
3.282(pC)-3.282 G .032(PU time realizing that the)-3.282 F(y)-.195 E(ha)
33.336 441 Q .39 -.195(ve t)-.26 H 3.25(og).195 G 3.25(ob)-3.25 G
(ack to sleep ag)-3.25 E(ain\).)-.065 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 10)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 468 614 -353.668 464 33.336 473.668 PBEGIN
%%BeginDocument: waitq.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: waitq.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Apr  9 21:48:36 2008
%%For: hak@lex ()
%%BoundingBox: 0 0 614 464
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 464 moveto 0 0 lineto 614 0 lineto 614 464 lineto closepath clip newpath
-75.8 585.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 1950 2850 m 3600 2850 l 3600 3750 l 1950 3750 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 1950 3300 m
 3600 3300 l gs col0 s gr  [] 0 sd
/Times-Roman ff 266.67 scf sf
2775 3225 m
gs 1 -1 sc (.next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 266.67 scf sf
2775 3675 m
gs 1 -1 sc (.prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 4950 7200 m 6000 7200 l 6000 9750 l 4950 9750 l
 cp gs col0 s gr 
/Times-Italic ff 266.67 scf sf
5700 7050 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 6675 7200 m 7725 7200 l 7725 9750 l 6675 9750 l
 cp gs col0 s gr 
/Times-Italic ff 266.67 scf sf
7425 7050 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 8550 7200 m 9600 7200 l 9600 9750 l 8550 9750 l
 cp gs col0 s gr 
/Times-Italic ff 266.67 scf sf
9300 7050 m
gs 1 -1 sc (task_struct) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 1950 5175 m 3600 5175 l 3600 6075 l 1950 6075 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 1950 5625 m
 3600 5625 l gs col0 s gr  [] 0 sd
/Times-Roman ff 266.67 scf sf
2775 5550 m
gs 1 -1 sc (.next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 266.67 scf sf
2775 6000 m
gs 1 -1 sc (.prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
15.000 slw
n 1950 4125 m 3600 4125 l 3600 6075 l 1950 6075 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1950 4425 m
 3600 4425 l gs col0 s gr 
% Polyline
n 1950 4800 m
 3600 4800 l gs col0 s gr 
/Times-Roman ff 233.33 scf sf
2775 4350 m
gs 1 -1 sc (flags) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
2775 4650 m
gs 1 -1 sc (task) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
2775 5025 m
gs 1 -1 sc (func) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 5325 5175 m 6975 5175 l 6975 6075 l 5325 6075 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 5325 5625 m
 6975 5625 l gs col0 s gr  [] 0 sd
/Times-Roman ff 266.67 scf sf
6150 5550 m
gs 1 -1 sc (.next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 266.67 scf sf
6150 6000 m
gs 1 -1 sc (.prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
15.000 slw
n 5325 4125 m 6975 4125 l 6975 6075 l 5325 6075 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 5325 4425 m
 6975 4425 l gs col0 s gr 
% Polyline
n 5325 4800 m
 6975 4800 l gs col0 s gr 
/Times-Roman ff 233.33 scf sf
6150 4350 m
gs 1 -1 sc (flags) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
6150 4650 m
gs 1 -1 sc (task) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
6150 5025 m
gs 1 -1 sc (func) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
n 8325 5175 m 9975 5175 l 9975 6075 l 8325 6075 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 8325 5625 m
 9975 5625 l gs col0 s gr  [] 0 sd
/Times-Roman ff 266.67 scf sf
9150 5550 m
gs 1 -1 sc (.next) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 266.67 scf sf
9150 6000 m
gs 1 -1 sc (.prev) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
15.000 slw
n 8325 4125 m 9975 4125 l 9975 6075 l 8325 6075 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 8325 4425 m
 9975 4425 l gs col0 s gr 
% Polyline
n 8325 4800 m
 9975 4800 l gs col0 s gr 
/Times-Roman ff 233.33 scf sf
9150 4350 m
gs 1 -1 sc (flags) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
9150 4650 m
gs 1 -1 sc (task) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman ff 233.33 scf sf
9150 5025 m
gs 1 -1 sc (func) dup sw pop 2 div neg 0 rm  col0 sh gr
% Polyline
15.000 slw
n 1950 2400 m 3600 2400 l 3600 3750 l 1950 3750 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5343 5203 m 5336 5143 l 5186 5160 l 5309 5177 l 5193 5220 l cp
eoclip
n 3300 5400 m
 5325 5175 l gs col0 s gr gr

% arrowhead
n 5193 5220 m 5309 5177 l 5186 5160 l  col0 s
% Polyline
gs  clippath
8344 5277 m 8335 5218 l 8185 5239 l 8309 5252 l 8194 5298 l cp
eoclip
n 6750 5475 m
 8325 5250 l gs col0 s gr gr

% arrowhead
n 8194 5298 m 8309 5252 l 8185 5239 l  col0 s
% Polyline
gs  clippath
6972 5141 m 6949 5196 l 7088 5255 l 6990 5181 l 7112 5199 l cp
eoclip
n 8400 5775 m
 6975 5175 l gs col0 s gr gr

% arrowhead
n 7112 5199 m 6990 5181 l 7088 5255 l  col0 s
% Polyline
gs  clippath
3596 5141 m 3575 5197 l 3715 5252 l 3615 5181 l 3737 5196 l cp
eoclip
n 5325 5850 m
 3600 5175 l gs col0 s gr gr

% arrowhead
n 3737 5196 m 3615 5181 l 3715 5252 l  col0 s
% Polyline
gs  clippath
1890 2880 m 1890 2820 l 1738 2820 l 1858 2850 l 1738 2880 l cp
eoclip
n 2025 5850 m 1275 5850 l 1275 2850 l
 1875 2850 l gs col0 s gr gr

% arrowhead
n 1738 2880 m 1858 2850 l 1738 2820 l  col0 s
% Polyline
gs  clippath
9960 5295 m 9960 5355 l 10112 5355 l 9992 5325 l 10112 5295 l cp
eoclip
n 3450 3525 m 11250 3525 l 11250 5325 l
 9975 5325 l gs col0 s gr gr

% arrowhead
n 10112 5295 m 9992 5325 l 10112 5355 l  col0 s
% Polyline
gs  clippath
1965 5280 m 1965 5220 l 1813 5220 l 1933 5250 l 1813 5280 l cp
eoclip
n 2175 3150 m 1500 3150 l 1500 5250 l
 1950 5250 l gs col0 s gr gr

% arrowhead
n 1813 5280 m 1933 5250 l 1813 5220 l  col0 s
% Polyline
gs  clippath
3660 2820 m 3660 2880 l 3812 2880 l 3692 2850 l 3812 2820 l cp
eoclip
n 9750 5475 m 11475 5475 l 11475 2850 l
 3675 2850 l gs col0 s gr gr

% arrowhead
n 3812 2820 m 3692 2850 l 3812 2880 l  col0 s
% Polyline
2 slj
gs  clippath
4919 7212 m 4978 7216 l 4988 7065 l 4951 7183 l 4929 7061 l cp
eoclip
n 3600 4575 m 3601 4575 l 3604 4575 l 3610 4574 l 3618 4574 l 3629 4573 l
 3644 4572 l 3662 4570 l 3683 4569 l 3707 4568 l 3733 4567 l
 3760 4566 l 3790 4566 l 3821 4566 l 3852 4566 l 3885 4567 l
 3918 4569 l 3953 4572 l 3989 4576 l 4026 4582 l 4064 4588 l
 4104 4597 l 4145 4607 l 4188 4619 l 4231 4634 l 4275 4650 l
 4321 4669 l 4363 4689 l 4401 4708 l 4433 4725 l 4460 4740 l
 4481 4752 l 4498 4762 l 4511 4770 l 4521 4776 l 4528 4780 l
 4533 4784 l 4538 4788 l 4542 4791 l 4546 4796 l 4552 4802 l
 4560 4811 l 4570 4822 l 4583 4837 l 4599 4857 l 4619 4881 l
 4642 4910 l 4668 4944 l 4696 4983 l 4725 5025 l 4750 5066 l
 4773 5106 l 4794 5142 l 4812 5175 l 4827 5202 l 4839 5224 l
 4849 5241 l 4857 5253 l 4862 5261 l 4867 5266 l 4870 5268 l
 4873 5269 l 4875 5269 l 4877 5269 l 4879 5271 l 4881 5276 l
 4884 5285 l 4888 5299 l 4892 5319 l 4898 5346 l 4905 5382 l
 4913 5427 l 4922 5482 l 4931 5546 l 4941 5619 l 4950 5700 l
 4956 5758 l 4961 5818 l 4965 5878 l 4968 5938 l 4972 5997 l
 4974 6056 l 4976 6114 l 4977 6171 l 4978 6227 l 4979 6282 l
 4979 6336 l 4979 6390 l 4979 6443 l 4978 6496 l 4977 6547 l
 4976 6599 l 4974 6649 l 4973 6699 l 4971 6748 l 4969 6795 l
 4968 6841 l 4966 6886 l 4964 6928 l 4962 6969 l 4960 7006 l
 4958 7041 l 4957 7072 l 4955 7100 l 4954 7124 l 4953 7145 l
 4952 7162 l 4951 7175 l 4951 7185 l
 4950 7200 l gs col0 s gr gr

% arrowhead
0 slj
n 4929 7061 m 4951 7183 l 4988 7065 l  col0 s
% Polyline
2 slj
gs  clippath
7320 7216 m 7380 7213 l 7371 7061 l 7349 7183 l 7312 7064 l cp
eoclip
n 6975 4650 m 6977 4650 l 6982 4649 l 6991 4648 l 7003 4647 l 7018 4646 l
 7037 4644 l 7057 4643 l 7079 4642 l 7102 4641 l 7127 4640 l
 7153 4640 l 7180 4641 l 7210 4643 l 7242 4646 l 7275 4650 l
 7307 4655 l 7334 4660 l 7356 4663 l 7373 4664 l 7384 4664 l
 7392 4662 l 7397 4659 l 7400 4656 l 7403 4654 l 7408 4652 l
 7414 4653 l 7424 4658 l 7437 4666 l 7455 4680 l 7477 4699 l
 7500 4725 l 7517 4746 l 7532 4768 l 7546 4788 l 7559 4806 l
 7570 4821 l 7579 4833 l 7587 4842 l 7595 4849 l 7601 4855 l
 7607 4859 l 7613 4863 l 7618 4867 l 7623 4872 l 7628 4879 l
 7633 4889 l 7637 4904 l 7642 4922 l 7646 4946 l 7649 4976 l
 7652 5012 l 7652 5054 l 7650 5100 l 7646 5141 l 7641 5181 l
 7634 5220 l 7626 5255 l 7618 5287 l 7610 5315 l 7602 5339 l
 7594 5359 l 7586 5376 l 7579 5390 l 7571 5403 l 7564 5414 l
 7556 5425 l 7549 5436 l 7541 5447 l 7533 5460 l 7524 5475 l
 7515 5493 l 7506 5514 l 7496 5540 l 7485 5569 l 7473 5603 l
 7461 5642 l 7449 5684 l 7437 5729 l 7425 5775 l 7412 5828 l
 7401 5877 l 7391 5919 l 7384 5953 l 7378 5979 l 7374 5998 l
 7371 6010 l 7370 6017 l 7369 6020 l 7369 6019 l 7369 6018 l
 7369 6022 l 7369 6030 l 7368 6044 l 7366 6065 l 7364 6095 l
 7361 6133 l 7357 6181 l 7354 6237 l 7350 6300 l 7348 6348 l
 7346 6397 l 7344 6445 l 7343 6492 l 7342 6538 l 7341 6583 l
 7341 6627 l 7340 6669 l 7340 6710 l 7340 6751 l 7341 6790 l
 7341 6829 l 7342 6867 l 7342 6904 l 7343 6940 l 7344 6975 l
 7344 7008 l 7345 7040 l 7346 7069 l 7347 7096 l 7348 7120 l
 7348 7141 l 7349 7158 l 7349 7173 l 7349 7183 l
 7350 7200 l gs col0 s gr gr

% arrowhead
0 slj
n 7312 7064 m 7349 7183 l 7371 7061 l  col0 s
% Polyline
2 slj
gs  clippath
9266 7196 m 9317 7228 l 9398 7100 l 9309 7186 l 9347 7068 l cp
eoclip
n 9975 4650 m 9977 4649 l 9980 4648 l 9987 4645 l 9996 4642 l 10009 4637 l
 10024 4632 l 10042 4627 l 10062 4622 l 10084 4617 l 10107 4614 l
 10133 4612 l 10161 4611 l 10191 4613 l 10225 4617 l 10263 4624 l
 10305 4635 l 10350 4650 l 10387 4665 l 10423 4680 l 10456 4694 l
 10486 4707 l 10511 4719 l 10532 4728 l 10550 4735 l 10565 4740 l
 10578 4744 l 10590 4747 l 10600 4750 l 10610 4753 l 10621 4758 l
 10633 4764 l 10646 4772 l 10662 4784 l 10680 4800 l 10701 4820 l
 10724 4845 l 10749 4875 l 10775 4911 l 10800 4950 l 10819 4985 l
 10836 5020 l 10850 5053 l 10862 5084 l 10872 5111 l 10880 5135 l
 10887 5155 l 10892 5172 l 10897 5186 l 10900 5198 l 10903 5208 l
 10905 5217 l 10906 5225 l 10908 5234 l 10908 5243 l 10909 5254 l
 10910 5266 l 10910 5282 l 10909 5301 l 10908 5324 l 10906 5351 l
 10903 5383 l 10899 5420 l 10893 5460 l 10885 5504 l 10875 5550 l
 10862 5596 l 10848 5640 l 10834 5680 l 10819 5716 l 10806 5748 l
 10794 5775 l 10783 5797 l 10773 5816 l 10765 5830 l 10757 5843 l
 10750 5853 l 10744 5861 l 10737 5869 l 10731 5876 l 10724 5885 l
 10715 5894 l 10706 5905 l 10694 5919 l 10680 5936 l 10664 5956 l
 10644 5980 l 10621 6008 l 10595 6040 l 10566 6075 l 10534 6112 l
 10500 6150 l 10462 6190 l 10426 6226 l 10392 6258 l 10361 6285 l
 10335 6307 l 10312 6324 l 10294 6337 l 10278 6347 l 10266 6353 l
 10255 6358 l 10246 6361 l 10237 6363 l 10229 6364 l 10220 6367 l
 10209 6370 l 10197 6375 l 10181 6383 l 10162 6393 l 10140 6407 l
 10114 6425 l 10083 6446 l 10049 6470 l 10013 6497 l 9975 6525 l
 9931 6558 l 9892 6588 l 9858 6613 l 9831 6633 l 9810 6649 l
 9795 6660 l 9784 6667 l 9777 6671 l 9772 6674 l 9769 6675 l
 9766 6676 l 9761 6679 l 9755 6683 l 9746 6690 l 9733 6701 l
 9715 6717 l 9693 6737 l 9665 6762 l 9634 6792 l 9600 6825 l
 9567 6859 l 9536 6892 l 9507 6923 l 9482 6953 l 9459 6980 l
 9437 7006 l 9418 7031 l 9400 7055 l 9383 7078 l 9368 7099 l
 9354 7120 l 9341 7138 l 9330 7155 l 9320 7169 l 9312 7181 l

 9300 7200 l gs col0 s gr gr

% arrowhead
0 slj
n 9347 7068 m 9309 7186 l 9398 7100 l  col0 s
/Times-Roman ff 266.67 scf sf
2625 2700 m
gs 1 -1 sc (lock) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Italic ff 266.67 scf sf
2475 2250 m
gs 1 -1 sc (wait_queue_head_t) dup sw pop 2 div neg 0 rm  col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Bold@0 SF -.845(Wa)193.905 509.668 S
(it interrupted by signal).845 E/F2 13/Times-Roman@0 SF 6.082
(In addition to e)33.336 545.668 R(xclusi)-.195 E 6.473 -.195(ve v)-.325
H 6.083(s. non-e).195 F(xclusi)-.195 E 6.473 -.195(ve w)-.325 H 6.083
(aiting, we can distinguish between).065 F .511
(interruptible and non-interruptible w)33.336 560.668 R 3.761(aits. It)
-.13 F .511(is useful to allo)3.761 F 3.761(was)-.325 G .511
(ignal to interrupt certain)-3.761 F 3.391(potentially long w)33.336
575.668 R 3.391(aits \(e.g.)-.13 F -.13(wa)9.891 G 3.391
(iting for a netw).13 F 3.391(ork message to arri)-.13 F -.195(ve)-.325
G 6.641(,w).195 G 3.391(aiting for a)-6.771 F -.13(ke)33.336 590.668 S
.153(yboard character\).)-.065 F .152
(As we shall see, there is cleanup in)6.653 F -.26(vo)-.52 G(lv).26 E
.152(ed when this happens, so the)-.195 F .335(majority of w)33.336
605.668 R .335(aits within the k)-.13 F .336
(ernel are non-interruptible.)-.13 F 3.586(An)6.836 G .336
(on-interruptible w)-3.586 F(ait)-.13 E/F3 13/Times-Italic@0 SF(should)
3.586 E F2 3.533(be quick, b)33.336 620.668 R 3.533(ut sometimes the e)
-.26 F -.195(ve)-.325 G 3.533(nt tak).195 F 3.533(es longer than e)-.13
F 6.783(xpected. E.g.)-.195 F 3.533(most disk I/O)6.783 F 1.847
(operations are non-interruptible.)33.336 635.668 R 1.847
(If the disk operation hangs, either because the media)8.347 F 1.58
(has been remo)33.336 650.668 R -.195(ve)-.195 G 1.579(d, or there is a\
n I/O error that is being retried, this is manifested as a).195 F
("freeze" of the process that can not be killed, e)33.336 665.668 Q
-.195(ve)-.325 G 3.25(nw).195 G(ith SIGKILL!)-3.25 E .222
(When the task puts itself on a w)33.336 686.668 R .222
(ait queue, it sets its)-.13 F/F4 13/Courier@0 SF(state)3.472 E F2(to)
3.472 E F4(TASK_INTERRUPTIBLE)3.472 E F2(or)33.336 701.668 Q F4
(TASK_UNINTERRUPTIBLE)4.515 E F2 1.265(to indicate that it is sleeping.)
4.515 F 1.264(Either state pre)7.764 F -.195(ve)-.325 G 1.264(nts the)
.195 F 6.29
(scheduler from placing the task on a run queue, until it is w)33.336
716.668 R(ok)-.13 E 6.291(en up.)-.13 F(The)12.791 E F4
(TASK_INTERRUPTIBLE)33.336 731.668 Q F2(state allo)3.25 E(ws the arri)
-.325 E -.325(va)-.325 G 3.25(lo).325 G 3.25(fas)-3.25 G(ignal to w)
-3.25 E(ak)-.13 E 3.25(eu)-.13 G 3.25(pt)-3.25 G(he task too.)-3.25 E 0
Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 11)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF -.845(Wa)211.065 120 S(it queue example)
.845 E/F2 10/Courier@0 SF(// From /usr/src/linux/include/linux/list.h)
33.336 153 Q(// self-circular initialization)33.336 165 Q
(#define LIST_HEAD_INIT\(name\) { &\(name\), &\(name\) })33.336 177 Q
(// From /usr/src/linux/include/linux/wait.h)33.336 213 Q
(// Following uses C-99 structure initialization syntax)33.336 225 Q
(#define DEFINE_WAIT\(name\) \\\\)33.336 237 Q
(wait_queue_t name = {\\\\)90.936 249 Q(.task=current,\\\\)148.536 261 Q
(.func=autoremove_wake_function,\\\\)148.536 273 Q
(.task_list=LIST_HEAD_INIT\(\(name\).task_list\)\\\\)148.536 285 Q(})
90.936 297 Q(// The following macro is defined in /usr/src/linux/includ\
e/linux/wait.h)33.336 321 Q
(// the do { }while\(0\) construct is a preprocessor trick to make this)
33.336 333 Q(// work syntactically as if it were a function)33.336 345 Q
(#define __wait_event\(wq, condition\))33.336 357 Q(\\)222 E(do {)33.336
369 Q(\\)408 E 258(DEFINE_WAIT\(__wait\); \\)81.336 381 R(\\)465.336 393
Q(for \(;;\) {)81.336 405 Q(\\)324 E
(prepare_to_wait\(&wq, &__wait, TASK_UNINTERRUPTIBLE\);)129.336 417 Q
(\\)24 E(if \(condition\))129.336 429 Q(\\)252 E 246(break; \\)177.336
441 R 264(schedule\(\); \\)129.336 453 R 378(}\\)81.336 465 S
(finish_wait\(&wq, &__wait\);)81.336 477 Q(\\)228 E 6(}w)33.336 489 S
(hile \(0\))-6 E
(// The following code is abstracted from /usr/src/linux/kernel/wait.c)
33.336 525 Q(// there is a similar routine for exclusive waiting)33.336
537 Q(prepare_to_wait\( wait_queue_head_t *q, wait_queue_t *wait, int s\
tate\))33.336 549 Q({)33.336 561 Q(wait->flags&=~WQ_FLAG_EXCLUSIVE;)
90.936 573 Q 162(spin_lock\(&q->lock\); /*)90.936 585 R(simplified */)6
E(/* This might not be the first time through the loop above, */)90.936
597 Q(/* in which case the wait_queue entry is already enqueued */)
90.936 609 Q(if \(list_empty\(&wait->task_list\)\))90.936 621 Q
(/* skip if already enqueued*/)32.4 E({)90.936 633 Q
(list_add\(&wait->task_list,&q->task_list\);)148.536 645 Q(})90.936 657
Q(// State will be either TASK_INTERRUPTIBLE or TASK_UNINTERRUPTIBLE)
90.936 669 Q(// Either one keeps)90.936 681 Q
(this task off the run queue)12 E(current->state=state;)90.936 693 Q
(spin_unlock\(&q->lock\);)90.936 705 Q(})33.336 717 Q
(finish_wait\(wait_queue_head_t *q, wait_queue_t *wait\))33.336 741 Q 0
Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 12)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF({)33.336 117 Q 20.4
(__set_current_state\(TASK_RUNNING\); //)90.936 129 R
(Basically redundant)6 E
(// The next passage basically takes the wait queue entry)90.936 141 Q
(// "wait" and unlinks it from the CLL.)90.936 153 Q
(On a multiprocessor)12 E
(// system, another processor may also be in the process of)90.936 165 Q
(// waking up this same wait queue entry.)90.936 177 Q
(// list_empty_careful checks that next points to itself)90.936 189 Q
(// AND prev points to itself.)90.936 201 Q
(if \(!list_empty_careful\(&wait->task_list\)\) {)90.936 213 Q
(spin_lock\(&q->lock\);)148.536 225 Q 26.4
(list_del_init\(\(&wait->task_list\); //remove)148.536 237 R(from list)6
E(spin_unlock\(&q->lock\);)148.536 249 Q(})90.936 261 Q(})33.336 273 Q
/F2 13/Times-Roman@0 SF .888
(This one of the typical methods as seen within the Linux k)33.336 306 R
.888(ernel, ho)-.13 F(we)-.325 E -.195(ve)-.325 G 4.138(ri).195 G 4.138
(no)-4.138 G .888(ther cases)-4.138 F -.13(wa)33.336 321 S .732
(it queues are manipulated directly by k).13 F .733(ernel routines.)-.13
F .733(Unfortunately the Linux k)7.233 F(ernel)-.13 E(is f)33.336 336 Q
(airly slopp)-.13 E 3.25(ya)-.13 G
(nd inconsistent with synchronization primiti)-3.25 E -.195(ve)-.325 G
(s.).195 E .52(Comparing this e)33.336 357 R .52(xample with)-.195 F/F3
13/Times-Italic@0 SF .52(condition variables)3.77 F F2 .52
(\(Unit 7\), the use of the mute)3.77 F 3.77(xt)-.195 G 3.77(og)-3.77 G
(uard)-3.77 E(ag)33.336 372 Q .632(ainst the lost w)-.065 F(ak)-.13 E
.632(eup problem is approached dif)-.13 F(ferently)-.325 E 7.132(.H)
-.845 G .632(ere in the Linux k)-7.132 F .632(ernel, the)-.13 F 2.148
(calling task al)33.336 387 R -.13(wa)-.13 G 2.148
(ys places itself on the w).13 F 2.148
(ait queue, before it has tested the condition,)-.13 F 5.052
(THEN it marks itself as being in a sleeping state \(T)33.336 402 R
(ASK_INTERR)-1.209 E 5.053(UPTIBLE or)-.52 F -1.209(TA)33.336 417 S
(SK_UNINTERR)1.209 E 1.588(UPTIBLE in Linux k)-.52 F 1.587
(ernel speak\).)-.13 F 1.587(Therefore it can not go to sleep)8.087 F
.888(without being on the w)33.336 432 R .888(ait queue.)-.13 F .888
(When we look at the w)7.388 F(ak)-.13 E .889(eup routine belo)-.13 F
2.579 -.845(w, w)-.325 H(e').845 E .889(ll see)-.13 F .805(that it e)
33.336 447 R .805(xamines all of the tasks on the gi)-.195 F -.195(ve)
-.325 G 4.054(nw).195 G .804(ait queue under the protection of the w)
-4.184 F(ait)-.13 E(queue')33.336 462 Q 4.255(sm)-.715 G(ute)-4.255 E
4.255(x. Therefore)-.195 F 1.005
(no other task can be in the process of inserting itself into the)4.255
F -.13(wa)33.336 477 S(it queue while the w).13 E(ak)-.13 E
(eup is happening.)-.13 E/F4 13/Times-Bold@0 SF -.845(Wa)235.791 507 S
(king Up).845 E F2 1.658
(Once a process puts itself to sleep, it can not be scheduled ag)33.336
543 R 1.658(ain until it is w)-.065 F(ok)-.13 E 1.657(en up.)-.13 F .56
(Therefore it is al)33.336 558 R -.13(wa)-.13 G .561
(ys another task \(or an interrupt handler\) which w).13 F(ak)-.13 E
.561(es up the sleeping)-.13 F(process.)33.336 573 Q F1
(/*From /usr/src/linux/kernel/sched.c */)33.336 585 Q
(/* and /usr/src/linux/kernel/wait.c */)33.336 597 Q(/* When this is ca\
lled, the mutex spin lock q->lock has already been grabbed */)33.336 621
Q
(static void __wake_up_common\(wait_queue_head_t *q, unsigned int mode,)
33.336 645 Q(int nr_exclusive, int sync, void *key\))207.336 657 Q({)
33.336 669 Q(struct list_head *tmp, *next;)81.336 681 Q
(// Iterate over wait queue CLL with variable tmp)90.936 705 Q
(list_for_each_safe\(tmp, next, &q->task_list\) {)81.336 717 Q
(wait_queue_t *curr;)129.336 729 Q(unsigned flags;)129.336 741 Q 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 13)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(// Get back to start of wait queue entry)
148.536 117 Q(curr = list_entry\(tmp, wait_queue_t, task_list\);)129.336
129 Q(flags = curr->flags;)129.336 141 Q
(if \(curr->func\(curr, mode, sync, key\) &&)129.336 153 Q
(\(flags & WQ_FLAG_EXCLUSIVE\) &&)153.336 165 Q(!--nr_exclusive\))
153.336 177 Q(break;)177.336 189 Q(})81.336 201 Q(})33.336 213 Q(autore\
move_wake_function\(wait_queue *t, unsigned mode, int sync, void *key\))
33.336 237 Q({)33.336 249 Q(try_to_wake_up\(t->task,mode, wake_flags\);)
90.936 261 Q(list_del_init\(&wait->task_list\);)90.936 273 Q(})33.336
285 Q(try_to_wake_up\(struct task_struct *p,unsigned int state, int wak\
e_flags\))33.336 309 Q({)33.336 321 Q(p->state=TASK_WAKING;)90.936 333 Q
20.4(rq=orig_rq=task_rq_lock\(p,&flags\); //)90.936 345 R
(Get original run queue)6 E(//Execute scheduler class specific hook)
90.936 357 Q(p->sched_class->task_waking\(rq,p\);)90.936 369 Q
(//Potentially move to different CPU)90.936 381 Q
(cpu = select_task_rq\(p, SD_BALANCE_WAKE, wake_flags\);)81.336 393 Q
(if \(cpu != orig_cpu\))81.336 405 Q(set_task_cpu\(p, cpu\);)129.336 417
Q(rq = __task_rq_lock\(p\);)81.336 429 Q
(/*..update scheduling statistics .. */)90.936 441 Q
(/* Possibly: current->thread_info.flags|=TIF_NEED_RESCHED */)90.936 453
Q 92.4(activate_task\(rq,p,1\); //)90.936 465 R(Mark task as runnable)6
E(p->state = TASK_RUNNING;)90.936 477 Q(})33.336 489 Q/F2 13
/Times-Roman@0 SF .401(This code iterates o)33.336 504 R -.195(ve)-.195
G 3.651(rt).195 G .401(he w)-3.651 F .401(ait list.)-.13 F -.195(Fo)
6.901 G 3.651(re).195 G .4(ach task, it calls the)-3.651 F/F3 13
/Courier@0 SF(func)3.65 E F2 .4(function, which had)3.65 F .407
(been initialized to)33.336 519 R F3(autoremove_wake_function)3.658 E F2
(by)3.658 E F3(DEFINE_WAIT)3.658 E F2 3.658(,w)C .408(hich in turn)
-3.658 F(calls)33.336 534 Q F3(try_to_wake_up)4.774 E F2 8.024(.D)C
1.523(espite the name, this function not only tries b)-8.024 F 1.523
(ut generally)-.26 F .511(succeeds at w)33.336 549 R .511
(aking the task up, by setting its state to)-.13 F F3(TASK_RUNNING)3.762
E F2 .512(and placing it on)3.762 F 6.506(ar)33.336 564 S 3.256
(un queue.)-6.506 F(Ag)9.756 E 3.256(ain, names are misleading.)-.065 F
3.255(The state)9.755 F F3(TASK_RUNNING)6.505 E F2 3.255(is really a)
6.505 F(READ)33.336 579 Q 4.986(Ys)-.715 G 4.986(tate. At)-4.986 F 1.737
(some later time, the task will be selected by the scheduler and will)
4.986 F(become the)33.336 594 Q F3(current)3.25 E F2(running task.)3.25
E .96(After the task has been w)33.336 615 R(ok)-.13 E .959(en up,)-.13
F F3(autoremove_wake_function)4.209 E F2 .959(then remo)4.209 F -.195
(ve)-.195 G 4.209(st).195 G(he)-4.209 E .775(task from the w)33.336 630
R .775(ait list, still under the protection of the w)-.13 F .775
(ait queue')-.13 F 4.025(ss)-.715 G .775(pin lock mute)-4.025 F 4.026
(x. In)-.195 F 2.962(the case of an e)33.336 645 R(xclusi)-.195 E 3.352
-.195(ve w)-.325 H 2.961(ait, no further tasks are w).065 F(ok)-.13 E
2.961(en up, b)-.13 F 2.961(ut otherwise the list)-.26 F
(iteration continues and additional tasks are a)33.336 660 Q -.13(wa)
-.195 G -.13(ke).13 G(ned.).13 E 2.29(One or more of the a)33.336 681 R
-.13(wa)-.195 G -.13(ke).13 G 2.291(ned tasks might ha).13 F 2.681 -.195
(ve a \()-.26 H 2.291(dynamic\) priority greater than the).195 F 6.068
(current task \(the w)33.336 696 R(ak)-.13 E(er)-.13 E 9.318
(-upper\). If)-.26 F 6.067(this is true,)9.318 F F3(try_to_wakeup)9.317
E F2 6.067(will set the)9.317 F 3.056
(TIF_NEED_RESCHED \215ag for the current task, which will be check)
33.336 711 R 3.056(ed as the task)-.13 F .76
(returns to user mode, causing schedule\(\) to be called.)33.336 726 R
.759(Thus a ne)7.259 F .759(wly a)-.325 F -.13(wa)-.195 G -.13(ke).13 G
.759(ned task may).13 F
(pre-empt the current task upon return to user mode.)33.336 741 Q 0 Cg
EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 14)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF 3.25(As)191.5 120 S
(ystem call with blocking)-3.25 E/F2 13/Times-Roman@0 SF 1.116
(As a further e)33.336 156 R 1.116(xample, we shall follo)-.195 F 4.366
(was)-.325 G 1.116(ystem call which may in)-4.366 F -.26(vo)-.52 G(lv)
.26 E 4.367(et)-.195 G 1.117(he caller being)-4.367 F 1.471(put to slee\
p, speci\214cally reading from a pipe which currently has no data in it\
.)33.336 171 R 1.47(In this)7.97 F -.195(ex)33.336 186 S .196
(ample, the generic __w).195 F(ait_e)-.13 E -.195(ve)-.325 G .196
(nt macro is not used, b).195 F .196(ut the k)-.26 F .196(ernel code ef)
-.13 F(fecti)-.325 E -.195(ve)-.325 G .196(ly does).195 F 1.848
(the same thing.)33.336 201 R 1.848(The Linux k)8.348 F 1.848
(ernel is generally inconsistent, and depending on when a)-.13 F .815
(particular part of the k)33.336 216 R .815(ernel w)-.13 F .816
(as coded or re)-.13 F .816(vised, dif)-.325 F .816
(ferent synchronization mechanisms)-.325 F(may be in play)33.336 231 Q
(.)-.845 E .262(As discussed in the pre)33.336 252 R .262
(vious unit, the parameters to the system call \(\214le descriptor)-.325
F 3.511(,b)-.52 G(uf)-3.771 E(fer)-.325 E .243
(address, count\) are passed via re)33.336 267 R 3.493(gisters. At)-.195
F .243(the entry to)3.493 F/F3 13/Courier@0 SF(system_call)3.493 E F2
3.493(,t)C .243(he re)-3.493 F .243(gisters are)-.195 F(sa)33.336 282 Q
-.195(ve)-.26 G 5.714(do).195 G 5.714(nt)-5.714 G 2.464(he k)-5.714 F
2.463(ernel mode stack, in the same order in which ar)-.13 F 2.463
(guments are normally)-.234 F 1.434(pushed on the stack in a re)33.336
297 R 1.434(gular C program.)-.195 F 1.434
(Therefore, when the particular)7.934 F F3(sys_xxx)4.684 E F2 .991
(system call handler is in)33.336 312 R -.26(vo)-.52 G -.13(ke).26 G
.991(d, it \214nds the parameters on the stack just as if it had been)
.13 F(in)33.336 327 Q -.26(vo)-.52 G -.13(ke).26 G 3.606(da).13 G 3.606
(sa)-3.606 G 3.606(no)-3.606 G .356(rdinary function.)-3.606 F(The)6.856
E F3(__user)3.606 E F2 .356(macro in the ar)3.606 F .356
(gument declaration for the)-.234 F .162(read b)33.336 342 R(uf)-.26 E
.161(fer pointer is there to remind us that the address is a user)-.325
F .161(-mode address and is not)-.26 F 3.25(trusted. W)33.336 357 R 3.25
(ep)-1.04 G(ick up our system call trace at)-3.25 E F3
(fs/read_write.c:sys_read)3.25 E F2(:)A/F4 10/Courier@0 SF
(// From /usr/src/linux/fs/read_write.c)33.336 384 Q(asmlinkage ssize_t\
 sys_read\(unsigned int fd, char __user * buf, size_t count\))33.336 408
Q({)33.336 420 Q(struct file *file;)90.936 432 Q(ssize_t ret ;)90.936
444 Q(loff_t pos;)90.936 456 Q
(// Next 3 lines are interpolation of several routines)148.536 480 Q
(if \(fd >= current->files->max_fds\) return -EBADF;)90.936 492 Q
(if \(!\(file=current->files->fdtable[fd]\)\) return -EBADF;)90.936 504
Q(file->f_count++)90.936 516 Q(pos=file->f_pos;)90.936 528 Q
(ret = vfs_read\(file, buf, count, &pos\);)90.936 540 Q
(file->f_pos=pos;)90.936 552 Q(file->f_count--;)90.936 564 Q
(return ret;)90.936 576 Q(})33.336 588 Q(ssize_t vfs_read\(struct file \
*file, char __user *buf, size_t count, loff_t *pos\))33.336 612 Q({)
33.336 624 Q(ssize_t ret;)81.336 636 Q
(if \(!\(file->f_mode & FMODE_READ\)\))81.336 660 Q(//open mode correct)
99.6 E(return -EBADF;)129.336 672 Q
(if \(!file->f_op || !file->f_op->read\))81.336 684 Q
(//vfs supports read)75.6 E(return -EINVAL;)129.336 696 Q
(if \(!access_ok\(VERIFY_WRITE, buf, count\)\)\))81.336 708 Q
(//ptr to valid addr)45.6 E(return -EFAULT;)129.336 720 Q 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 15)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF
(// rw_verify_area checks if the read request falls within)90.936 117 Q
(// a mandatory record locking area of the file.)90.936 129 Q(It also)12
E(// does some range checks \(e.g. negative position\))90.936 141 Q
(ret = rw_verify_area\(READ, file, pos, count\);)81.336 153 Q
(if \(ret<0\) return ret;)90.936 165 Q(count=ret;)90.936 177 Q
(/*Most filesystems do not define op->read, but instead let the generic)
90.936 189 Q
(do_sync_read do the work by paging in the requested parts of file */)
102.936 201 Q(if \(file->f_op->read\))90.936 213 Q
(ret = file->f_op->read\(file, buf, count, pos\);)148.536 225 Q
(//VFS dispatch)12 E(else)90.936 237 Q
(ret= do_sync_read\(file, buf, count, pos\);)148.536 249 Q
(if \(ret > 0\) {)90.936 261 Q 32.4
(fsnotify_access\(file->f_dentry\); //Hook)148.536 273 R(for events)6 E
(current->rchar += ret;)148.536 285 Q(// Update stats)98.4 E(})90.936
297 Q 122.4(current->syscr++; //)90.936 309 R(Update stats)6 E
(return ret;)81.336 321 Q(})33.336 333 Q/F2 13/Times-Roman@0 SF 2.126
(As usual, the abo)33.336 360 R 2.516 -.195(ve c)-.195 H 2.126
(ode has been simpli\214ed some).195 F 2.126
(what from the actual Linux k)-.325 F(ernel)-.13 E 3.684(sources. In)
33.336 375 R(particular)3.684 E 3.684(,s)-.52 G .434
(ome complicated locking has been elided.)-3.684 F .434
(The \214rst thing done is)6.934 F .778(to retrie)33.336 390 R 1.168
-.195(ve t)-.325 H(he).195 E/F3 13/Courier@0 SF .778(struct file)4.028 F
F2 .778(corresponding to the \214le descriptor)4.028 F 7.278(.I)-.715 G
4.028(ft)-7.278 G .778(he \214le descriptor)-4.028 F .621(is not v)
33.336 405 R .621(alid, -EB)-.325 F .621(ADF is returned.)-.455 F .621
(The f_count \214eld is incremented because an operation)7.121 F 1.894
(will be pending.)33.336 420 R(Ne)8.394 E 1.895(xt, in the function)
-.195 F F3(vfs_read)5.145 E F2 5.145(,o)C 1.895
(ther basic checks are performed.)-5.145 F -1.04(Wa)33.336 435 S 3.388
(st)1.04 G .138(he \214le opened for reading \(O_RDONL)-3.388 F 3.388
(Yo)-1.3 G 3.388(rO)-3.388 G(_RD)-3.388 E 3.388(WR\)? Is)-.39 F .138
(the read of)3.388 F .138(fset ne)-.325 F -.065(ga)-.195 G(ti).065 E
-.195(ve)-.325 G(?).195 E(Finally)33.336 456 Q 4.14(,w)-.845 G 4.14(ea)
-4.14 G .89(re dispatched to the)-4.14 F F3(read)4.14 E F2 .89
(method of the \214lesystem module which controls)4.14 F 1.045
(the \214le in question.)33.336 471 R 1.045(This is performed via the)
7.545 F F3(f_ops)4.295 E F2 1.044(structure of the)4.294 F F3 1.044
(struct file)4.294 F F2(.)A 2.094(Recall that the o)33.336 486 R -.195
(ve)-.195 G 2.094(rall \214lesystem comprises one or more "mounted v)
.195 F 2.094(olumes," each of)-.26 F 2.503(which may be of a dif)33.336
501 R 2.503(ferent \214lesystem type.)-.325 F 2.503
(Each \214lesystem type has an associated)9.003 F 1.617
(module which pro)33.336 516 R 1.617
(vides methods for performing \214le operations such as read and write.)
-.195 F -1.04(We)33.336 531 S -.13('l)1.04 G 3.794(ls).13 G .544
(ee more of this V)-3.794 F .543
(irtual File System \(VFS\) layer in a later unit.)-.78 F .543
(\(Un-named\) pipes)7.043 F 1.296(do not e)33.336 546 R 1.296(xist in t\
he \214lesystem namespace, so there is a pseudo-\214lesystem module cal\
led)-.195 F F3(pipefs)33.336 561 Q F2 .409(which pro)3.659 F .409
(vides these methods when using pipe inodes.)-.195 F .409(Our code w)
6.909 F(alk-through)-.13 E(winds up at)33.336 576 Q F3
(fs/pipe.c:pipe_read)3.25 E F2(:)A F1(ssize_t pipe_read\(struct file *f\
ilp, char *buf, size_t count, loff_t *ppos\))33.336 588 Q({)33.336 600 Q
(struct inode *inode = filp->f_dentry->d_inode;)81.336 612 Q
(struct pipe_inode_info *info;)81.336 624 Q(ssize_t ret;)81.336 636 Q
(int do_wakeup;)90.936 648 Q(do_wakeup=0;)90.936 672 Q
(if \(count==0\) return 0;)90.936 684 Q 56.4
(mutex_lock\(&inode->i_mutex\); /*)90.936 696 R(Lock inode */)6 E 52.8
(info=inode->i_pipe; /*)90.936 708 R(Get private data */)6 E(for\(;;\))
90.936 720 Q({)90.936 732 Q 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 16)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(int bufs=info->nrbufs;)102.936 117 Q
(if \(bufs\) {)148.536 129 Q
(/* ... This elided code copies the data from)206.136 141 Q
(the pipe buffer\(s\) to user space and)263.736 153 Q
(adjusts info->nrbufs accordingly.)263.736 165 Q
(ret=number of bytes copied */)263.736 177 Q 94.8(do_wakeup=1; /*)
206.136 189 R(we have created room */)6 E(break;)206.136 201 Q(})148.536
213 Q(else)148.536 225 Q({)148.536 237 Q(if \(info->writers==0\))206.136
249 Q({)206.136 261 Q(ret=0;)263.736 273 Q(break;)263.736 285 Q(})
206.136 297 Q(pipe_wait\(inode\);)206.136 309 Q(})148.536 321 Q
(if \(signal_pending\(current\)\))148.536 333 Q({)148.536 345 Q
(if \(!ret\) ret=-ERESTARTSYS;)206.136 357 Q(break;)206.136 369 Q(})
148.536 381 Q(})90.936 393 Q 102(mutex_unlock\(&inode->i_mutex\); /*)
90.936 405 R(Release inode lock */)6 E
(if \(do_wakeup\) wake_up_interruptible_sync\(&inode->i_pipe->wait\);)
90.936 417 Q(if \(ret>0\) file_access\(filp\);)90.936 429 Q
(/* update atime*/)114 E(return ret;)90.936 441 Q(})33.336 453 Q
(/* The arguments to pipe_write look strange because all writes within)
33.336 477 Q
(the kernel are transformed into a "scatter/gather" form known)90.936
489 Q(as an "iovec" with nr_segs segments.)90.936 501 Q(*/)12 E
(ssize_t pipe_write\(struct file *filp, struct iovec *_iov,)33.336 513 Q
(unsigned long nr_segs, loff_t pos\))148.536 525 Q({)33.336 537 Q
(ssize_t chars;)45.336 549 Q(size_t total_len,ret;)45.336 561 Q
(struct pipe_inode_info *pipe;)45.336 573 Q
(struct inode *inode=filp->f_dentry->d_inode;)45.336 585 Q
(int do_wakeup;)45.336 597 Q 20.4
(total_len=iov_length\(iov,nr_segs\); //Compute)90.936 609 R
(total write req len)6 E(do_wakeup=0;)90.936 621 Q(ret=0;)90.936 633 Q
(mutex_lock\(&inode->mutex\);)90.936 645 Q(pipe=inode->i_pipe;)90.936
657 Q(if \(!pipe->readers\) {)90.936 669 Q
(send_sig\(SIGPIPE,current,0\);)148.536 681 Q(ret= -EPIPE;)148.536 693 Q
(goto out;)148.536 705 Q(})90.936 717 Q(for\(;;\) {)90.936 729 Q 1.2
(bufs=pipe->nrbufs; //How)148.536 741 R(many buffers already in pipe)6 E
0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 17)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(if \(bufs<PIPE_BUFFERS\))148.536 117 Q 51.6
({/)40.8 G(/still room)-51.6 E
(/* Elided code creates a new buffer, copies the)206.136 129 Q
(user data into it, and puts buffer into)263.736 141 Q
(the FIFO list of buffers */)263.736 153 Q(do_wakeup=1;)206.136 165 Q
(ret += chars;)206.136 177 Q(total_len -= chars;)206.136 189 Q
(if \(!total_len\) break;)206.136 201 Q(//done copying)40.8 E(})148.536
213 Q(//No more room)148.536 225 Q
(//eliding code for NONBLOCK operation)148.536 237 Q
(if \(signal_pending\(current\)\) {)148.536 249 Q
(if \(!ret\) ret= -ERESTARTSYS;)206.136 261 Q(break;)206.136 273 Q(})
148.536 285 Q(if \(do_wakeup\) {)148.536 297 Q
(wake_up_interruptible_sync\(&pipe_wait\);)206.136 309 Q(do_wakeup=0;)
206.136 321 Q(})148.536 333 Q(pipe->waiting_writers++;)148.536 345 Q
70.8(pipe_wait\(pipe\); //Wait)148.536 357 R(for more room)6 E
(pipe->waiting_writers--;)148.536 369 Q(})90.936 381 Q(out:)39.336 393 Q
(mutex_unlock\(&inode->i_mutex\);)90.936 405 Q(if \(do_wakeup\))90.936
417 Q(wake_up_interruptible_sync\(&pipe->wait\);)12 E
(if \(ret>0\) file_update_time\(filp\);)90.936 429 Q(return ret;)90.936
441 Q(})33.336 453 Q(void pipe_wait\(struct inode *inode\))33.336 513 Q
({)33.336 525 Q 58.8(DEFINE_WAIT\(wait\); /*)90.936 537 R
(declare wait entry */)6 E
(prepare_to_wait\(&inode->i_pipe->wait,&wait,TASK_INTERRUPTIBLE\);)
90.936 549 Q(mutex_unlock\(&inode->i_mutex\);)90.936 561 Q
(schedule\(\);)90.936 573 Q(finish_wait\(&inode->i_pipe->wait,&wait\);)
90.936 585 Q(mutex_lock\(&inode->i_mutex\);)90.936 597 Q(})33.336 609 Q
/F2 13/Times-Roman@0 SF .219(There are tw)33.336 624 R 3.47(os)-.13 G
(leep/w)-3.47 E(ak)-.13 E .22
(eup conditions with which to contend: reader sleeping until more)-.13 F
2.74(bytes are written, and writer sleeping until there is space in the\
 pipe b)33.336 639 R(uf)-.26 E(fer)-.325 E 9.24(.L)-.715 G 2.74(et us)
-9.24 F(consider the \214rst case only)33.336 654 Q 3.25(,a)-.845 G 3.25
(st)-3.25 G(he second case is analogous.)-3.25 E 1.192
(The \214rst thing which)33.336 675 R/F3 13/Courier@0 SF(pipe_read)4.442
E F2 1.192(does is obtain a blocking mute)4.442 F 4.443(xl)-.195 G 1.193
(ock on the in-core)-4.443 F 3.555(inode. This)33.336 690 R .305
(will pre)3.555 F -.195(ve)-.325 G .304
(nt other operations such as read, write, stat, etc. on the inode while)
.195 F 2.817(the pipe_read is running.)33.336 705 R 2.817
(Because we are in a system call, which is a synchronous)9.317 F(situat\
ion, it is acceptable to use this potentially blocking operation.)33.336
720 Q .48(If there are b)33.336 741 R(uf)-.26 E .48(fered data w)-.325 F
.48(aiting on the pipe, the)-.13 F 3.729(ya)-.195 G .479
(re copied to the user')-3.729 F 3.729(sb)-.715 G(uf)-3.989 E .479
(fer \(we are)-.325 F 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 18)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF .069
(not concerned with the mechanics in this unit\) and)33.336 120 R/F2 13
/Courier@0 SF(do_wakeup)3.32 E F1 .07(is set, which will remind)3.32 F
(us later to w)33.336 135 Q(ak)-.13 E 3.25(eu)-.13 G 3.25(pp)-3.25 G
(otential w)-3.25 E(aiting writers.)-.13 E 2.21(If there are no b)33.336
156 R(uf)-.26 E 2.21
(fered data, and there are still possible writers to the pipe, then the)
-.325 F 1.405(calling process must be put to sleep.)33.336 171 R 1.405
(An INTERR)7.905 F 1.405(UPTIBLE sleep is chosen because it)-.52 F 1.153
(could be a long time before a writer process w)33.336 186 R(ak)-.13 E
1.152(es us up, and the user should ha)-.13 F 1.542 -.195(ve t)-.26 H
(he).195 E 1.159(option of breaking out of the sleep with a signal.)
33.336 201 R 1.159(The sleep will also be non-e)7.659 F(xclusi)-.195 E
-.195(ve)-.325 G(,).195 E 3.024(because once data are placed into the p\
ipe, it is meaningful for multiple readers to)33.336 216 R
(proceed \(the)33.336 231 Q 3.25(ym)-.195 G(ight all w)-3.25 E
(ant just a little data and there is enough to go around\).)-.13 E F2
(pipe_wait)33.336 252 Q F1 .862(handles the b)4.112 F .862
(usiness of going to sleep.)-.26 F 4.112(Aw)7.362 G .863
(ait queue entry is de\214ned as a)-4.242 F 6.919(local v)33.336 267 R
6.919(ariable with)-.325 F F2(DEFINE_WAIT)10.169 E F1 6.918
(and placed on the inode')10.169 F 10.168(sw)-.715 G 6.918
(ait list with)-10.298 F F2(prepare_to_wait)33.336 282 Q F1 10.066(.N)C
4.216 -.325(ow t)-10.066 H 3.566(he inode mute).325 F 6.817(xc)-.195 G
3.567(an be released \(and indeed)-6.817 F/F3 13/Times-Italic@0 SF(must)
6.817 E F1(be)6.817 E 1.431(released, to a)33.336 297 R -.26(vo)-.26 G
1.431(id sleeping with the mute).26 F 4.681(xh)-.195 G 1.431
(eld, which w)-4.681 F 1.431(ould pre)-.13 F -.195(ve)-.325 G 1.431
(nt an).195 F 4.681(yw)-.195 G 1.431(riters from)-4.681 F -2.795 -.325
(ev e)33.336 312 T 4.175(ra).325 G .925(ccessing the inode\).)-4.175 F
F2(schedule)7.426 E F1 .926(is called, and one or more other tasks run.)
4.176 F(Note)7.426 E 1.994(that this code does not use the generic)
33.336 327 R F2(__wait_event)5.244 E F1 1.994(code seen abo)5.244 F
2.384 -.195(ve b)-.195 H 1.994(ut instead)-.065 F(rolls its o)33.336 342
Q 3.25(wn. This)-.325 F(is f)3.25 E
(airly typical of the non-uniform coding style of the Linux k)-.13 E
(ernel.)-.13 E 3.686
(At some later time, another task writes to the pipe.)33.336 363 R 3.686
(This writer task will call, in)10.186 F F2 -3.39
(pipe_write\(\) wakeup_interruptible_sync)33.336 378 R F1 4.409(,w)C
1.159(hich e)-4.409 F -.195(ve)-.325 G 1.159(ntually brings us into).195
F(the scheduler at)33.336 393 Q F2(__wake_up_common)3.25 E F1 3.25(,s)C
(een abo)-3.25 E -.195(ve)-.195 G(.).195 E 2.173
(Therefore the reader process is e)33.336 414 R -.195(ve)-.325 G 2.174
(ntually re-scheduled, and returns from pipe_w).195 F(ait\(\).)-.13 E
2.187(Note the enclosing for\(;;\) loop which re-tests the condition \(\
are there an)33.336 429 R 5.436(yd)-.195 G 2.186(ata in the)-5.436 F
(pipe?\), because w)33.336 444 Q
(aking up does not necessarily mean the condition is no)-.13 E 3.25(wt)
-.325 G(rue.)-3.25 E 1.508(Also note the check, after w)33.336 465 R
1.508(aking up, for pending signals.)-.13 F 1.508(This will be co)8.008
F -.195(ve)-.195 G 1.508(red in the).195 F(ne)33.336 480 Q
(xt unit when interrupted/restarted system calls are described.)-.195 E
9.203(The reader \(of these lecture notes, not the pipe\) can also e)
33.336 501 R 9.202(xamine the)-.195 F .535
(pipe_read/pipe_write code abo)33.336 516 R .925 -.195(ve t)-.195 H
3.785(os).195 G .535(ee ho)-3.785 F 3.785(waw)-.325 G .535
(riter task, upon encountering a full pipe,)-3.785 F
(goes to sleep and is a)33.336 531 Q -.13(wo)-.195 G -.13(ke).13 G 3.25
(nb).13 G 3.25(yar)-3.25 G(eader when the pipe is drained.)-3.25 E/F4 13
/Times-Bold@0 SF(Sleep/W)198.663 561 Q(ak)-.845 E(eup Summary)-.13 E F1
2.08 -1.04(To s)33.336 591 T(ummarize the sleeping and w)1.04 E
(aking up process:)-.13 E 4.417<8342>33.336 606 S 1.167
(oth the sleeper')-4.417 F 4.417(sc)-.715 G 1.167(ode and the w)-4.417 F
(ak)-.13 E(er')-.13 E 4.417(sc)-.715 G 1.167(ode must agree on ho)-4.417
F 4.416(wt)-.325 G 1.166(he e)-4.416 F -.195(ve)-.325 G 1.166
(nt is de\214ned,).195 F(and must both share a pre-declared w)33.336 621
Q(ait queue.)-.13 E(SLEEPER:)33.336 636 Q 7.254<8349>33.336 651 S 7.254
(nt)-7.254 G 4.004(he synchronous conte)-7.254 F 4.004
(xt of a system call or e)-.195 F 4.004(xception handler)-.195 F 7.254
(,a)-.52 G 4.004(llocates and)-7.254 F(initializes a w)33.336 666 Q
(ait queue entry)-.13 E 3.25<8354>33.336 681 S(he w)-3.25 E
(ait queue entry is added to the w)-.13 E(ait queue representing the e)
-.13 E -.195(ve)-.325 G(nt).195 E 4.281<8354>33.336 696 S 1.031
(he task state is mark)-4.281 F 1.031(ed as T)-.13 F(ASK_INTERR)-1.209 E
1.03(UPTIBLE if the w)-.52 F 1.03(ait can be w)-.13 F(ok)-.13 E 1.03
(en up by)-.13 F(signal arri)33.336 711 Q -.325(va)-.325 G
(l, otherwise T).325 E(ASK_UNINTERR)-1.209 E(UPTIBLE.)-.52 E<83>33.336
726 Q F2(schedule\(\))4.345 E F1 1.095(is called.)4.345 F 1.095
(The task is switched out, and because it is not in a runnable)7.595 F
3.25(state, it)33.336 741 R(will not get scheduled in ag)3.25 E
(ain, until:)-.065 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 19)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF -1.56(WA)33.336 120 S(KER:)1.56 E 3.25
<8354>33.336 135 S(he e)-3.25 E -.195(ve)-.325 G(nt arri).195 E -.195
(ve)-.325 G(s, either in a synchronous or an asynchronous conte).195 E
(xt.)-.195 E 3.689<8354>33.336 150 S .439
(he sleeping task is selected from the w)-3.689 F .439
(ait queue, and the w)-.13 F .438(ait queue entry is remo)-.13 F -.195
(ve)-.195 G(d.).195 E -.195(Fo)33.336 165 S 3.261(re).195 G(xclusi)
-3.456 E .401 -.195(ve w)-.325 H .011
(aits, only one task is selected, b).065 F .011(ut for non-e)-.26 F
(xclusi)-.195 E .401 -.195(ve w)-.325 H .011(aits all w).065 F .012
(aiting tasks)-.13 F(are selected and remo)33.336 180 Q -.195(ve)-.195 G
3.25(df).195 G(rom the w)-3.25 E(ait queue.)-.13 E 3.471<8354>33.336 195
S .221(he task state is set to T)-3.471 F(ASK_R)-1.209 E .22
(UNNING and the task is placed on a run queue, making)-.52 F
(it eligible to be scheduled.)33.336 210 Q 3.25<8354>33.336 225 S(he ta\
sk is \(at some later time\) selected by the scheduler to run, and is s\
witched in.)-3.25 E/F2 13/Times-Bold@0 SF(The schedule\(\) function)
201.972 255 Q F1 .026(In the Linux k)33.336 291 R .027(ernel, a)-.13 F
F2 .027(task switch)3.277 F F1(tak)3.277 E .027(es place in the)-.13 F
/F3 13/Courier@0 SF(schedule)3.277 E F1 .027(function, which selects a)
3.277 F(ne)33.336 306 Q 3.364(wt)-.325 G .113
(ask to run \(possibly the same task if the system is f)-3.364 F .113
(airly quiet\) and ef)-.13 F .113(fects the switch)-.325 F .515
(to the ne)33.336 321 R 3.765(wt)-.325 G 3.765(ask. Abstractly)-3.765 F
(,)-.845 E F3(schedule\(\))3.765 E F1 .516
(is called and then another task has use of the)3.766 F(processor)33.336
336 Q 8.982(.T)-.715 G 2.482
(hen at some later time, the original task is scheduled ag)-8.982 F
2.482(ain, and control)-.065 F .248
(appears to return transparently from)33.336 351 R F3(schedule\(\))3.499
E F1 6.749(.I)C(nternally)-6.749 E(,)-.845 E F3(schedule\(\))3.499 E F1
(maintains)3.499 E 3.92(al)33.336 366 S .669
(ist of tasks which are in a ready to run state \(as determined by the)
-3.92 F F3(state)3.919 E F1 .669(\214eld of the)3.919 F F3(task_struct)
33.336 381 Q F1 1.229
(\), and picks the "best" one based on algorithms which we will co)B
-.195(ve)-.195 G 4.479(ri).195 G(n)-4.479 E(the ne)33.336 396 Q
(xt unit.)-.195 E 2.08 -1.04(We c)6.5 H
(all this list of ready tasks the)1.04 E F2(run queue)3.25 E F1(.)A F3
(schedule)33.336 417 Q F1(can be called in tw)3.25 E 3.25(ow)-.13 G
(ays:)-3.38 E<83>33.336 432 Q F2(Dir)5.531 E(ectly)-.234 E F1 5.531(:I)C
5.531(nas)-5.531 G 2.281(ynchronous conte)-5.531 F(xt,)-.195 E F3
(schedule\(\))5.53 E F1 2.28(is called directly \(or through an)5.53 F
1.048(intermediate function or macro\) when the current task wishes to \
relinquish \(v)33.336 447 R(oluntarily\))-.26 E 1.702
(the processor because it has reached a blocking state.)33.336 462 R
1.702(Examples include a system call)8.202 F 2.537(which must block w)
33.336 477 R 2.538(aiting for input, or a page f)-.13 F 2.538(ault e)
-.13 F 2.538(xception which must block the)-.195 F
(process until the page f)33.336 492 Q(ault has been resolv)-.13 E
(ed by paging-in from backing store.)-.195 E<83>33.336 507 Q F2(Indir)
3.303 E .053(ectly \(lazy\))-.234 F F1 6.553(:W)C(hene)-6.553 E -.195
(ve)-.325 G 3.303(rc).195 G .053
(ontrol is about to return from an interrupt, f)-3.303 F .053
(ault or system)-.13 F 1.207(call, the v)33.336 522 R 1.207
(alue of the bit \215ag)-.325 F F3(TIF_NEED_RESCHED)4.457 E F1 1.207
(in the)4.457 F F3(flags)4.457 E F1 -.13(wo)4.457 G 1.208
(rd of the current).13 F 2.719(thread_info structure is e)33.336 537 R
5.968(xamined. If)-.195 F 2.718(set, then)5.968 F F3(schedule\(\))5.968
E F1 2.718(is in)5.968 F -.26(vo)-.52 G -.13(ke).26 G 5.968
(d. Therefore,).13 F 2.655(when a k)33.336 552 R 2.655
(ernel routine sets)-.13 F F3(TIF_NEED_RESCHED)5.905 E F1 5.906(,i)C
5.906(ti)-5.906 G 5.906(sr)-5.906 G 2.656(equesting that the currently)
-5.906 F -.195(exe)33.336 567 S .642
(cuting task be pre-empted and another task be scheduled.).195 F F2 .641
(An asynchr)7.141 F .641(onous r)-.234 F(outine)-.234 E 1.396(must ne)
33.336 582 R -.13(ve)-.195 G 4.647(rc).13 G(all)-4.647 E F3(schedule)
4.647 E F2(dir)4.647 E(ectly)-.234 E F1 4.647(,b)C 1.397(ecause that w)
-4.647 F 1.397(ould lea)-.13 F 1.787 -.195(ve a)-.26 H 4.647(nu).195 G
1.397(n\214nished interrupt)-4.647 F 2.956(handler pending.)33.336 597 R
2.955(The task switch will occur upon return from the interrupt handler)
9.456 F 3.587(routine. Generally)33.336 612 R .337(speaking, an interru\
pt handler routine will set the RESCHED \215ag if it)3.587 F .668(is w)
33.336 627 R .667(aking up a sleeping task which has higher priority th\
an the current task, or when the)-.13 F 1.492
(timer interrupt routine determines that the current task has e)33.336
642 R 1.492(xhausted its cpu time slice)-.195 F(quantum.)33.336 657 Q F2
-.325(Ke)194.783 672 S -.195(rn).325 G(el Mode Pr).195 E(e-emption)-.234
E F1 .618(On older Linux k)33.336 708 R .618
(ernels, pre-emption could only occur when the task w)-.13 F .617
(as about to return)-.13 F 1.77(to user mode from an e)33.336 723 R 1.77
(xception or interrupt handler)-.195 F(.)-.715 E F2 -.325(Ke)8.27 G
-.195(rn).325 G 1.77(el pr).195 F(e-emption)-.234 E F1 1.771(means that)
5.021 F 1.602(pre-emption can also occur when returning from the interr\
upt handler back to a k)33.336 738 R(ernel)-.13 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 20)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 2.738(control path.)33.336 120 R -.325
(Ke)9.238 G 2.739(rnel pre-emption can impro).325 F 3.129 -.195(ve p)
-.195 H 2.739(erformance in real-time applications,).195 F 2.875
(because it allo)33.336 135 R 2.874
(ws a higher priority task to run immediately)-.325 F 9.374(.T)-.845 G
(he)-9.374 E/F2 13/Courier@0 SF(preempt_count)6.124 E F1 1.803
(member of a task')33.336 150 R(s)-.715 E F2(thread_info)5.053 E F1
1.803(structure controls k)5.053 F 1.803(ernel-mode preemption, and is)
-.13 F -.195(ex)33.336 165 S .571(amined when control is about to retur\
n from an interrupt handler back to k).195 F .571(ernel mode.)-.13 F
.924(The k)33.336 180 R .924(ernel macro)-.13 F F2(preempt_disable)4.174
E F1 .924(increments this counter)4.174 F 7.425(.W)-.715 G(hene)-7.425 E
-.195(ve)-.325 G 4.175(rt).195 G .925(he counter)-4.175 F .473
(is non-zero, pre-emption is disabled.)33.336 195 R F2(preempt_enable)
6.972 E F1 .472(decrements the counter)3.722 F 6.972(.U)-.715 G(ses)
-6.972 E(of)33.336 210 Q F2(preempt_disable)5.803 E F1 2.554
(can be "nested" and pre-emption is not re-enabled until the)5.804 F .81
(outermost k)33.336 225 R .81(ernel routine re-enables.)-.13 F .809
(In man)7.309 F 4.059(yp)-.195 G .809(laces in the k)-4.059 F .809
(ernel, k)-.13 F .809(ernel pre-emption is)-.13 F
(temporarily disabled to pre)33.336 240 Q -.195(ve)-.325 G(nt lea).195 E
(ving things in an inconsistent state.)-.26 E/F3 13/Times-Bold@0 SF
(What schedule\(\) does)208.114 270 Q F1(An v)33.336 306 Q
(astly simpli\214ed outline of)-.325 E F2(schedule)3.25 E F1
(is as follo)3.25 E(ws:)-.325 E/F4 10/Courier@0 SF
(/* from kernel/sched.c*/)148.536 318 Q(schedule\(\))33.336 330 Q({)
33.336 342 Q(task_t *prev,*next;)90.936 354 Q(runqueue_t *rq;)90.936 366
Q(need_resched:)57.336 390 Q 1.2(preempt_disable\(\); /*)90.936 402 R
(Temporarily disable kernel mode preemption*/)6 E
(cpu = smp_processor_id\(\);)90.936 414 Q
(/* Get unique id of "this" CPU */)22.8 E 94.8(rq=cpu_rq\(\); /*)90.936
426 R(Run queue holding the current task */)6 E(spin_lock\(&rq->lock\);)
90.936 438 Q 82.8(prev=rq->curr; /*)90.936 450 R
(Remember the current task */)6 E
(/* ... update a bunch of scheduling statistics ... */)90.936 462 Q
(/* pick_next_task is the "real" scheduler */)90.936 474 Q
(next = pick_next_task\(rq\);)90.936 486 Q 12
(prev->thread_info->flags&=~_TIF_NEED_RESCHED; //Clear)90.936 498 R
(flag)6 E(/* ... adjust run time stats of prev ... */)90.936 510 Q
(if \(prev!=next\))90.936 522 Q(//Really going to switch now)82.8 E({)
90.936 534 Q 50.4(sched_info_switch\(prev,next\); /*)148.536 546 R
(Update timestamps, etc.*/)6 E(rq->curr=next;)148.536 558 Q
(/* context_switch will also unlock rq*/)154.536 570 Q
(context_switch\(rq,prev,next\);)148.536 582 Q
(/* upon return from context_switch, we have been)148.536 594 Q
(scheduled again, and prev is the task)206.136 606 Q(which we replaced.)
206.136 618 Q(current is us again. */)12 E(cpu = smp_processor_id\(\);)
148.536 630 Q(rq = cpu_rq\(cpu\);)148.536 642 Q(})90.936 654 Q(else)
90.936 666 Q(spin_unlock\(&rq->lock\);)148.536 678 Q
(preempt_enable\(\);)90.936 690 Q
(if \(current_thread_info\(\)->flags & TIF_NEED_RESCHED\))90.936 702 Q
(goto need_resched;)206.136 714 Q(})33.336 726 Q 0 Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 21)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF
(context_switch\(runqueue_t *rq, task_t *prev, task_t *next\))33.336 117
Q({)33.336 129 Q(prepare_task_switch\(rq,prev,next\);)90.936 141 Q
(mm = next->mm;)90.936 153 Q(oldmm = prev->active_mm;)90.936 165 Q 74.4
(switch_mm\(oldmm,mm,next\); //switch)90.936 177 R(address space)6 E
(switch_to\(prev,next,prev\);)90.936 189 Q 72
(finish_task_switch\(this_rq\(\),prev\); //Update)90.936 201 R(stats)6 E
(})33.336 213 Q
(/*The following from /usr/src/linux/include/asm/system.h.)33.336 249 Q
(In its actual form, switch_to is a #define that mixes C and assembly)
45.336 261 Q(language to create an inline assembly expansion.)45.336 273
Q(The form below is simplified)45.336 285 Q(*/)33.336 297 Q
(#define switch_to\(prev,next,last\))33.336 309 Q(asm\()90.936 321 Q
27.6(movl prev,%eax)148.536 333 R 27.6(movl next,%edx)148.536 345 R 21.6
(pushl %ebp)148.536 357 R(/* save on prev stack */)148.8 E
(// THREAD is the offset of the .thread member of the task_struct)39.336
369 Q
(// Likewise ESP is the offset of the .esp member of the thread struct)
39.336 381 Q 27.6(movl %esp,\(THREAD+ESP\)\(%eax\))148.536 393 R
(/* prev->thread.esp=%esp */)6 E 27.6(movl \(THREAD+ESP\)\(%edx\),%esp)
148.536 405 R(/* %esp = next->thread.esp */)34.8 E
(// At this moment we have switched to kernel stack of the NEXT task)
39.336 417 Q 27.6(movl $LABEL1,\(THREAD+EIP\)\(%eax\))148.536 429 R
(/* set return addr */)16.8 E 21.6(pushl \(THREAD+EIP\)\(%edx\))148.536
441 R(/* push next->thread.eip */)7.2 E 24(jmp __switch_to)148.536 453 R
(/* jump to C routine */)58.8 E(// When __switch_to returns, it will re\
turn to the next->thread.eip address)39.336 465 Q
(// When we are scheduled in again, we will come to life at LABEL1)
39.336 477 Q(LABEL1:)51.336 489 Q 27.6(popl %ebp)148.536 501 R
(/* restore */)148.8 E 27.6(movl %eax,prev)148.536 513 R(\))90.936 525 Q
(struct task_struct)33.336 537 Q(fastcall *__switch_to\()12 E
(struct task_struct *prev_p,)263.736 549 Q(//in eax)18 E
(struct task_struct *next_p\))263.736 561 Q(//in edx)18 E({)33.336 573 Q
(/* Get the thread_structs associated with old and new */)148.536 585 Q
(struct thread_struct *prev= &prev_p->thread,)90.936 597 Q
(*next= &next_p->thread;)236.136 609 Q(int cpu=smp_processor_id\(\);)
90.936 621 Q(/* Get the Task State Segment for this CPU */)148.536 645 Q
(struct tss_struct *tss= &per_cpu\(init_tss,cpu\);)90.936 657 Q
(tss->x86_tss.esp0 = next->esp0;)90.936 669 Q
(//Set kernel re-entry stack ptr)102 E
(/* ... Deal with save/restore of additional registers which)90.936 681
Q(are normally not touched in kernel mode, such as the)148.536 693 Q
(floating point, mmx/xxm/sse, debug registers, etc.)148.536 705 Q
(These are saved in the ->thread part of the task_struct */)148.536 717
Q 20.4(percpu_write\(current_task,next_p\); //update)90.936 729 R
(current "variable")6 E(return prev_p;)90.936 741 Q 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 22)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(})33.336 117 Q/F2 13/Times-Roman@0 SF .666
(Let us)33.336 138 R -.13(wa)7.166 G .666(lk through a h).13 F .666
(ypothetical e)-.065 F .666(xample of making a conte)-.195 F .667
(xt switch.)-.195 F(Unfortunately)7.167 E(,)-.845 E 3.869(ap)33.336 153
S .619(roblem with such e)-3.869 F .618
(xamples is the circularity of reasoning.)-.195 F -1.04(We)7.118 G -.13
('l)1.04 G 3.868(la).13 G .618(ssume that at some)-3.868 F .022
(time in the past, task #456 had made a system call to \(the h)33.336
168 R(ypothetical\))-.065 E/F3 13/Courier@0 SF(sys_bar\(\))3.272 E F2
3.272(,a)C(nd)-3.272 E 2.695
(that system call reached a blocking state, causing it to call)33.336
183 R F3(schedule\(\))5.945 E F2 9.195(.W)C 5.945(ew)-10.235 G(ill)
-5.945 E 1.377(further assume that task #789 w)33.336 198 R 1.377
(as selected by)-.13 F F3(schedule\(\))4.627 E F2 1.377
(at that time and replaced)4.627 F(task #456 on the CPU.)33.336 213 Q
(No)33.336 234 Q 2.948 -.845(w, s)-.325 H 1.258
(ome time has elapsed, and perhaps se).845 F -.195(ve)-.325 G 1.257
(ral interv).195 F 1.257(ening tasks ha)-.195 F 1.647 -.195(ve h)-.26 H
1.257(ad use of the).195 F 3.291(CPU. T)33.336 249 R .042
(ask #123 is currently running in user mode.)-1.04 F(Some)6.542 E .042
(where along the w)-.325 F(ay)-.13 E 3.292(,t)-.845 G .042(ask #456)
-3.292 F -.13(wa)33.336 264 S 3.359(su).13 G(nblock)-3.359 E .109
(ed \(e.g. because the input it w)-.13 F .108(as w)-.13 F .108
(aiting for arri)-.13 F -.195(ve)-.325 G .108(d\) and thus w).195 F .108
(as placed into)-.13 F 3.075(the run queue.)33.336 279 R(Ho)9.575 E(we)
-.325 E -.195(ve)-.325 G 4.116 -.52(r, i).195 H 6.326(th).52 G 3.076
(as still not yet been scheduled.)-6.326 F 5.156 -1.04(We n)9.576 H
3.726 -.325(ow c)1.04 H 3.076(ome to the).325 F(be)33.336 294 Q 1.328
(ginning point of our e)-.195 F 1.328
(xample, when task #123 has made a system call)-.195 F F3(sys_foo\(\))
4.578 E F2(,)A(and)33.336 309 Q F3(sys_foo)3.486 E F2 .236
(has to block task #123, thus it has called)3.486 F F3(schedule\(\))
3.487 E F2 .237(to yield the CPU.)3.487 F 3.419 -1.04(We a)33.336 324 T
1.339(ssume that)1.04 F F3(schedule\(\))4.588 E F2 1.338
(has selected task #456 as the best task to run ne)4.588 F 1.338
(xt, and)-.195 F(has just called)33.336 339 Q F3(context_switch\(\))3.25
E F2 6.5(.T)C(he situation is depicted as follo)-6.5 E(ws:)-.325 E 0 0
468 744 -301.935 480 33.336 661.935 PBEGIN
%%BeginDocument: cswitch1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cswitch1.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 10 23:16:04 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 744 480
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 480 moveto 0 0 lineto 744 0 lineto 744 480 lineto closepath clip newpath
-44.3 470.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 8625 3900 m 10125 3900 l 10125 4650 l 8625 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 4455 m
gs 1 -1 sc ( sys_bar) col0 sh gr
% Polyline
n 8625 3150 m 10125 3150 l 10125 3900 l 8625 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 8625 2400 m 10125 2400 l 10125 3150 l 8625 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Polyline
n 3900 4650 m 5400 4650 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
n 4614 4725 m 4471 4725 l 4471 6675 l
 4614 6675 l gs col0 s gr 
% Polyline
n 4614 6900 m 4471 6900 l 4471 7725 l
 4614 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
4829 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4300 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4257 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 3900 3900 m 5400 3900 l 5400 4650 l 3900 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 4455 m
gs 1 -1 sc ( sys_foo) col0 sh gr
% Polyline
n 3900 3150 m 5400 3150 l 5400 3900 l 3900 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 3900 2400 m 5400 2400 l 5400 3150 l 3900 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Polyline
n 8625 4650 m 10125 4650 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
n 9339 4725 m 9196 4725 l 9196 6675 l
 9339 6675 l gs col0 s gr 
% Polyline
n 9339 6900 m 9196 6900 l 9196 7725 l
 9339 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
9554 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9025 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8982 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Arc
gs  clippath
9829 3491 m 9795 3541 l 9922 3625 l 9839 3534 l 9955 3575 l cp
eoclip
n 8437.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 9955 3575 m 9839 3534 l 9922 3625 l  col0 s
% Arc
gs  clippath
5104 3491 m 5070 3541 l 5197 3625 l 5114 3534 l 5230 3575 l cp
eoclip
n 3712.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 5230 3575 m 5114 3534 l 5197 3625 l  col0 s
% Polyline
15.000 slw
n 1200 300 m 2700 300 l 2700 4200 l 1200 4200 l
 cp gs col0 s gr 
% Polyline
n 2250 4950 m 3150 4950 l 3150 6150 l 2250 6150 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 5250 m 3150 5250 l 3150 5700 l 2250 5700 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 1050 6300 m 3000 6300 l 3000 6900 l 1050 6900 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5983 929 m 6033 895 l 5949 769 l 5991 886 l 5899 802 l cp
eoclip
n 3000 6600 m 3450 6600 l 3450 450 l 5700 450 l
 6000 900 l gs col0 s gr gr

% arrowhead
n 5899 802 m 5991 886 l 5949 769 l  col0 s
% Polyline
gs  clippath
3840 2430 m 3840 2370 l 3688 2370 l 3808 2400 l 3688 2430 l cp
eoclip
n 1800 5250 m 1950 5250 l 2100 4500 l 3150 4500 l 3150 2400 l
 3825 2400 l gs col0 s gr gr

% arrowhead
n 3688 2430 m 3808 2400 l 3688 2370 l  col0 s
% Polyline
gs  clippath
1515 3030 m 1515 2970 l 1363 2970 l 1483 3000 l 1363 3030 l cp
eoclip
n 1050 5700 m 750 5700 l 750 3000 l
 1500 3000 l gs col0 s gr gr

% arrowhead
n 1363 3030 m 1483 3000 l 1363 2970 l  col0 s
% Polyline
30.000 slw
n 1155 5100 m 1050 5100 1050 5895 105 arcto 4 {pop} repeat
  1050 6000 1695 6000 105 arcto 4 {pop} repeat
  1800 6000 1800 5205 105 arcto 4 {pop} repeat
  1800 5100 1155 5100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1050 5550 m
 1800 5550 l gs col0 s gr 
% Polyline
gs  clippath
3915 7830 m 3915 7770 l 3763 7770 l 3883 7800 l 3763 7830 l cp
eoclip
n 3000 5400 m 3300 5400 l 3300 7800 l
 3900 7800 l gs col0 s gr gr

% arrowhead
n 3763 7830 m 3883 7800 l 3763 7770 l  col0 s
% Polyline
n 10875 1950 m 12225 1950 l 12225 3300 l 10875 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 10875 1050 m 12225 1050 l 12225 4350 l 10875 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10185 7770 m 10185 7830 l 10337 7830 l 10217 7800 l 10337 7770 l cp
eoclip
n 11025 2400 m 10575 2400 l 10575 7800 l
 10200 7800 l gs col0 s gr gr

% arrowhead
n 10337 7770 m 10217 7800 l 10337 7830 l  col0 s
% Polyline
gs  clippath
12210 1020 m 12210 1080 l 12362 1080 l 12242 1050 l 12362 1020 l cp
eoclip
n 11625 4950 m 12525 4950 l 12525 1050 l
 12225 1050 l gs col0 s gr gr

% arrowhead
n 12362 1020 m 12242 1050 l 12362 1080 l  col0 s
% Polyline
n 8625 1650 m 10125 1650 l 10125 1050 l 8625 1050 l
 cp gs col0 s gr 
% Polyline
n 6150 1500 m 7500 1500 l 7500 1800 l 6150 1800 l
 cp gs col0 s gr 
% Polyline
n 6150 1950 m 7500 1950 l 7500 3300 l 6150 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 6150 1050 m 7500 1050 l 7500 4350 l 6150 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5385 7770 m 5385 7830 l 5537 7830 l 5417 7800 l 5537 7770 l cp
eoclip
n 6300 2400 m 5850 2400 l 5850 7800 l
 5400 7800 l gs col0 s gr gr

% arrowhead
n 5537 7770 m 5417 7800 l 5537 7830 l  col0 s
% Polyline
gs  clippath
7485 1020 m 7485 1080 l 7637 1080 l 7517 1050 l 7637 1020 l cp
eoclip
n 6900 4950 m 7800 4950 l 7800 1050 l
 7500 1050 l gs col0 s gr gr

% arrowhead
n 7637 1020 m 7517 1050 l 7637 1080 l  col0 s
% Polyline
n 3900 1650 m 5400 1650 l 5400 1050 l 3900 1050 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 3900 1050 m 5400 1050 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 10875 1500 m 12225 1500 l 12225 1800 l 10875 1800 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6098 1149 m 6080 1091 l 5935 1136 l 6059 1130 l 5953 1193 l cp
eoclip
n 5100 1425 m
 6075 1125 l gs col0 s gr gr

% arrowhead
n 5953 1193 m 6059 1130 l 5935 1136 l  col0 s
% Polyline
gs  clippath
12495 6090 m 12555 6090 l 12555 5938 l 12525 6058 l 12495 5938 l cp
eoclip
n 11475 5250 m 12525 5250 l
 12525 6075 l gs col0 s gr gr

% arrowhead
n 12495 5938 m 12525 6058 l 12555 5938 l  col0 s
% Polyline
gs  clippath
10858 1004 m 10908 970 l 10824 844 l 10866 961 l 10774 877 l cp
eoclip
n 6750 5250 m 8025 5250 l 8025 525 l 10575 525 l
 10875 975 l gs col0 s gr gr

% arrowhead
n 10774 877 m 10866 961 l 10824 844 l  col0 s
% Polyline
15.000 slw
n 8625 1050 m 10125 1050 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 8625 2175 m 10125 2175 l 10125 2400 l 8625 2400 l
 cp gs col0 s gr 
% Polyline
gs  clippath
8640 3180 m 8640 3120 l 8488 3120 l 8608 3150 l 8488 3180 l cp
eoclip
n 8775 2325 m 8475 2325 l 8475 3150 l
 8625 3150 l gs col0 s gr gr

% arrowhead
n 8488 3180 m 8608 3150 l 8488 3120 l  col0 s
% Polyline
gs  clippath
1365 3255 m 1365 3195 l 1213 3195 l 1333 3225 l 1213 3255 l cp
eoclip
n 11700 3000 m 12825 3000 l 12825 150 l 900 150 l 900 3225 l
 1350 3225 l gs col0 s gr gr

% arrowhead
n 1213 3255 m 1333 3225 l 1213 3195 l  col0 s
% Polyline
gs  clippath
10110 2145 m 10110 2205 l 10262 2205 l 10142 2175 l 10262 2145 l cp
eoclip
n 11250 2625 m 10350 2625 l 10350 2175 l
 10125 2175 l gs col0 s gr gr

% arrowhead
n 10262 2145 m 10142 2175 l 10262 2205 l  col0 s
% Polyline
gs  clippath
10823 1149 m 10805 1091 l 10660 1136 l 10784 1130 l 10678 1193 l cp
eoclip
n 9825 1425 m
 10800 1125 l gs col0 s gr gr

% arrowhead
n 10678 1193 m 10784 1130 l 10660 1136 l  col0 s
% Polyline
2 slj
n 11025 4500 m 11061 4496 l 11100 4494 l 11138 4493 l 11176 4493 l 11213 4494 l
 11247 4496 l 11280 4498 l 11310 4501 l 11338 4504 l 11364 4507 l
 11389 4511 l 11412 4514 l 11433 4518 l 11454 4521 l 11475 4525 l
 11496 4529 l 11517 4533 l 11538 4538 l 11561 4543 l 11586 4548 l
 11612 4554 l 11640 4561 l 11670 4569 l 11703 4577 l 11737 4587 l
 11774 4597 l 11812 4609 l 11850 4622 l 11889 4635 l 11925 4650 l
 11963 4668 l 11996 4685 l 12024 4702 l 12046 4717 l 12063 4731 l
 12076 4742 l 12085 4752 l 12091 4761 l 12094 4768 l 12094 4774 l
 12093 4779 l 12091 4783 l 12087 4788 l 12084 4792 l 12080 4796 l
 12076 4802 l 12073 4808 l 12071 4816 l 12069 4826 l 12068 4837 l
 12068 4851 l 12069 4867 l 12071 4885 l 12073 4905 l 12074 4927 l
 12075 4950 l 12074 4980 l 12071 5007 l 12067 5031 l 12063 5051 l
 12060 5066 l 12057 5078 l 12055 5086 l 12053 5092 l 12052 5097 l
 12050 5100 l 12048 5103 l 12045 5108 l 12041 5114 l 12035 5122 l
 12026 5134 l 12014 5149 l 11998 5169 l 11978 5193 l 11953 5220 l
 11925 5250 l 11897 5277 l 11869 5303 l 11843 5327 l 11819 5348 l
 11799 5366 l 11783 5382 l 11770 5396 l 11759 5408 l 11751 5419 l
 11744 5429 l 11737 5438 l 11731 5446 l 11723 5455 l 11713 5464 l
 11700 5474 l 11683 5484 l 11662 5495 l 11635 5507 l 11603 5519 l
 11565 5531 l 11522 5542 l 11475 5550 l 11431 5555 l 11388 5557 l
 11348 5557 l 11311 5556 l 11279 5553 l 11250 5550 l 11225 5547 l
 11203 5543 l 11184 5539 l 11167 5534 l 11152 5530 l 11137 5525 l
 11123 5520 l 11109 5515 l 11093 5508 l 11076 5502 l 11057 5494 l
 11036 5485 l 11013 5475 l 10987 5463 l 10959 5450 l 10930 5435 l
 10902 5418 l 10875 5400 l 10848 5377 l 10828 5355 l 10813 5335 l
 10805 5317 l 10801 5302 l 10801 5291 l 10804 5281 l 10810 5274 l
 10817 5268 l 10825 5262 l 10833 5257 l 10842 5250 l 10850 5242 l
 10857 5232 l 10864 5219 l 10868 5202 l 10872 5182 l 10874 5157 l
 10875 5130 l 10875 5100 l 10875 5063 l 10875 5031 l 10874 5004 l
 10872 4984 l 10870 4970 l 10868 4961 l 10865 4954 l 10863 4950 l
 10860 4946 l 10858 4939 l 10857 4930 l 10857 4916 l 10858 4896 l
 10861 4869 l 10867 4837 l 10875 4800 l 10882 4775 l 10888 4751 l
 10894 4729 l 10898 4709 l 10900 4691 l 10900 4675 l 10899 4662 l
 10896 4649 l 10892 4639 l 10886 4629 l 10881 4621 l 10875 4612 l
 10870 4605 l 10866 4597 l 10863 4588 l 10863 4580 l 10865 4571 l
 10872 4561 l 10883 4550 l 10899 4539 l 10921 4528 l 10949 4517 l
 10984 4508 l
 cp gs col0 s gr 
% Polyline
n 6300 4500 m 6336 4496 l 6375 4494 l 6413 4493 l 6451 4493 l 6488 4494 l
 6522 4496 l 6555 4498 l 6585 4501 l 6613 4504 l 6639 4507 l
 6664 4511 l 6687 4514 l 6708 4518 l 6729 4521 l 6750 4525 l
 6771 4529 l 6792 4533 l 6813 4538 l 6836 4543 l 6861 4548 l
 6887 4554 l 6915 4561 l 6945 4569 l 6978 4577 l 7012 4587 l
 7049 4597 l 7087 4609 l 7125 4622 l 7164 4635 l 7200 4650 l
 7238 4668 l 7271 4685 l 7299 4702 l 7321 4717 l 7338 4731 l
 7351 4742 l 7360 4752 l 7366 4761 l 7369 4768 l 7369 4774 l
 7368 4779 l 7366 4783 l 7362 4788 l 7359 4792 l 7355 4796 l
 7351 4802 l 7348 4808 l 7346 4816 l 7344 4826 l 7343 4837 l
 7343 4851 l 7344 4867 l 7346 4885 l 7348 4905 l 7349 4927 l
 7350 4950 l 7349 4980 l 7346 5007 l 7342 5031 l 7338 5051 l
 7335 5066 l 7332 5078 l 7330 5086 l 7328 5092 l 7327 5097 l
 7325 5100 l 7323 5103 l 7320 5108 l 7316 5114 l 7310 5122 l
 7301 5134 l 7289 5149 l 7273 5169 l 7253 5193 l 7228 5220 l
 7200 5250 l 7172 5277 l 7144 5303 l 7118 5327 l 7094 5348 l
 7074 5366 l 7058 5382 l 7045 5396 l 7034 5408 l 7026 5419 l
 7019 5429 l 7012 5438 l 7006 5446 l 6998 5455 l 6988 5464 l
 6975 5474 l 6958 5484 l 6937 5495 l 6910 5507 l 6878 5519 l
 6840 5531 l 6797 5542 l 6750 5550 l 6706 5555 l 6663 5557 l
 6623 5557 l 6586 5556 l 6554 5553 l 6525 5550 l 6500 5547 l
 6478 5543 l 6459 5539 l 6442 5534 l 6427 5530 l 6412 5525 l
 6398 5520 l 6384 5515 l 6368 5508 l 6351 5502 l 6332 5494 l
 6311 5485 l 6288 5475 l 6262 5463 l 6234 5450 l 6205 5435 l
 6177 5418 l 6150 5400 l 6123 5377 l 6103 5355 l 6088 5335 l
 6080 5317 l 6076 5302 l 6076 5291 l 6079 5281 l 6085 5274 l
 6092 5268 l 6100 5262 l 6108 5257 l 6117 5250 l 6125 5242 l
 6132 5232 l 6139 5219 l 6143 5202 l 6147 5182 l 6149 5157 l
 6150 5130 l 6150 5100 l 6150 5063 l 6150 5031 l 6149 5004 l
 6147 4984 l 6145 4970 l 6143 4961 l 6140 4954 l 6138 4950 l
 6135 4946 l 6133 4939 l 6132 4930 l 6132 4916 l 6133 4896 l
 6136 4869 l 6142 4837 l 6150 4800 l 6157 4775 l 6163 4751 l
 6169 4729 l 6173 4709 l 6175 4691 l 6175 4675 l 6174 4662 l
 6171 4649 l 6167 4639 l 6161 4629 l 6156 4621 l 6150 4612 l
 6145 4605 l 6141 4597 l 6138 4588 l 6138 4580 l 6140 4571 l
 6147 4561 l 6158 4550 l 6174 4539 l 6196 4528 l 6224 4517 l
 6259 4508 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
1350 600 m
gs 1 -1 sc (system_call:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1800 m
gs 1 -1 sc (sys_bar) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1200 m
gs 1 -1 sc (sys_foo) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 2400 m
gs 1 -1 sc (schedule:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 3000 m
gs 1 -1 sc (context_switch) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 0 m
gs 1 -1 sc (Kernel text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2400 4800 m
gs 1 -1 sc (TSS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5400 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5850 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6600 m
gs 1 -1 sc (Per-CPU global var) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6855 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
900 4950 m
gs 1 -1 sc (CPU REGS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
11475 1650 m
gs 1 -1 sc (456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9375 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1005 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 900 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
6750 1650 m
gs 1 -1 sc (123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1005 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 900 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2550 5550 m
gs 1 -1 sc (esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6150 m
gs 1 -1 sc (To task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6405 m
gs 1 -1 sc (for task 789) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8925 2325 m
gs 1 -1 sc (saved %ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1500 3300 m
gs 1 -1 sc (LABEL1:) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 1.471(Examining the k)33.336 688.935 R 1.471
(ernel stack for task 123, we see the usual)-.13 F F3(thread_info)4.721
E F2 1.471(structure at)4.721 F 1.26(the f)33.336 703.935 R 1.26
(ar end of the stack.)-.13 F 3.339 -1.04(We s)7.76 H 1.259(ee the user')
1.04 F 4.509(sr)-.715 G -.195(eg)-4.509 G 1.259(isters which were sa)
.195 F -.195(ve)-.26 G 4.509(db).195 G 4.509(yt)-4.509 G 1.259(he hardw)
-4.509 F(are)-.13 E .051(and by the)33.336 718.935 R F3(system_call)
3.301 E F2 -.13(ke)3.301 G .051(rnel entrypoint code.).13 F 2.131 -1.04
(We t)6.551 H .051(hen see a stack frame created for)1.04 F F3
(sys_foo\(\))33.336 733.935 Q F2 4.647(,w)C 1.396
(ith the return address on the stack being the place where)-4.647 F F3
(sys_foo\(\))4.646 E 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 23)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF -.13(wa)33.336 120 S 8.024(sc).13 G 4.774
(alled from the entrypoint code.)-8.024 F(Lik)11.275 E -.325(ew)-.13 G
4.775(ise, we see that).325 F/F2 13/Courier@0 SF(sys_foo\(\))8.025 E F1
(called)8.025 E F2(schedule\(\))33.336 135 Q F1 3.286(,a)C .036(nd that)
-3.286 F F2(schedule\(\))3.286 E F1 .036
(\(refer to the code listing abo)3.286 F -.195(ve)-.195 G 3.285(\)h).195
G .035(as local v)-3.285 F(ariable)-.325 E F2(prev)33.336 150 Q F1 .922
(pointing to task #123, and)4.172 F F2(next)4.172 E F1 .922
(pointing to task #456.)4.172 F(Then)7.422 E F2(schedule\(\))4.172 E F1
(has)4.172 E(called)33.336 165 Q F2(context_switch\(\))3.993 E F1 .742
(to ef)3.993 F .742(fect the actual conte)-.325 F .742(xt switch.)-.195
F .742(The CPU)7.242 F F2(%esp)3.992 E F1(stack)3.992 E .243(pointer re)
33.336 180 R .243(gister is thus pointing to the ne)-.195 F .244
(xt location in task 123')-.195 F 3.494(sk)-.715 G .244(ernel stack.)
-3.624 F(The)6.744 E F2(%eip)3.494 E F1(program counter re)33.336 195 Q
(gister is pointing to the \214rst instruction in)-.195 E F2
(context_switch\(\))3.25 E F1(.)A(No)33.336 216 Q 3.25(wt)-.325 G
(he follo)-3.25 E(wing happens within)-.325 E F2(context_switch\(\))3.25
E F1(:)A 3.25<8354>33.336 231 S(he)-3.25 E F2(%ebp)3.25 E F1
(frame pointer re)3.25 E(gister is pushed onto the k)-.195 E
(ernel stack)-.13 E/F3 13/Times-Bold@0 SF(of task #123)3.25 E F1(.)A
5.267<8354>33.336 246 S 2.017(he current stack pointer is sa)-5.267 F
-.195(ve)-.26 G 5.267(di).195 G(n)-5.267 E F2(prev->thread.esp)5.267 E
F1 2.017(This is the end of the)8.517 F F2(context_switch\(\))33.336 261
Q F1 2.912(stack frame in task 123, plus one w)6.162 F 2.912
(ord for the sa)-.13 F -.195(ve)-.26 G(d).195 E F2(%ebp)6.162 E F1(re)
33.336 276 Q(gister)-.195 E(.)-.715 E 5.608<8354>33.336 291 S 2.358
(he address which had been stored in)-5.608 F F2(next->thread.esp)5.607
E F1 2.357(when task #456 w)5.607 F(as)-.13 E .614
(switched-out is also the stack pointer address corresponding to one w)
33.336 306 R .614(ord be)-.13 F .614(yond the end)-.195 F .23
(of the stack frame for)33.336 321 R F2(context_switch\(\))3.48 E F1(,)A
F3 -.13(BU)3.48 G(T).13 E F1 .23(within the k)3.48 F .23
(ernel stack of task #456.)-.13 F .204(This v)33.336 336 R .205
(alue is loaded into the)-.325 F F2(%esp)3.455 E F1(re)3.455 E(gister)
-.195 E 3.455(,a)-.52 G .205(nd therefore we are no)-3.455 F 3.455(wo)
-.325 G 3.455(nt)-3.455 G .205(he stack of task)-3.455 F(#456.)33.336
351 Q 3.692<8354>33.336 366 S .442
(he address of the instruction labeled)-3.692 F F2(LABEL1:)3.692 E F1
(in)3.692 E F2(context_switch\(\))3.692 E F1 .442(is stored in)3.692 F
F2(prev->thread.eip)33.336 381 Q F1 3.25(,i)C(.e. in task #123')-3.25 E
3.25(st)-.715 G(ask_struct.)-3.25 E 3.519<8354>33.336 396 S .269
(he address which had pre)-3.519 F .269(viously been stored in the)-.325
F F2(thread.eip)3.519 E F1 .27(\214eld of task #456')3.52 F(s)-.715 E
.418(task_struct is, lik)33.336 411 R -.325(ew)-.13 G .418
(ise, that same address of the).325 F F2(LABEL1:)3.668 E F1 3.668
(label. W)3.668 F(e')-1.04 E .418(ll see an e)-.13 F(xception)-.195 E
3.111(to this when dealing with)33.336 426 R F2(fork\(\))6.361 E F1
9.611(.T)C 3.111(his v)-9.611 F 3.112(alue is fetched from)-.325 F F2
(thread.eip)6.362 E F1(and)6.362 E(pushed onto the k)33.336 441 Q
(ernel stack)-.13 E F2(of task #456)3.25 E F1(.)A 4.415<8357>33.336 456
S 4.415(ej)-5.455 G 1.165(ump to the function)-4.415 F F2
(__switch_to\(\))4.415 E F1 7.665(.N)C(ormally)-7.665 E 4.415(,Cf)-.845
G 1.165(unctions are called with a)-4.415 F F2(CALL)33.336 471 Q F1
3.089(instruction, which sa)6.339 F -.195(ve)-.26 G 6.339(st).195 G
3.089(he current)-6.339 F F2(%eip)6.339 E F1(re)6.339 E 3.089
(gister on the stack as the return)-.195 F 10.839(address. Here,)33.336
486 R 7.589(the return address is the v)10.839 F 7.588
(alue which we had loaded from)-.325 F F2(next->thread.eip)33.336 501 Q
F1 6.613(,a)C 3.363(nd manually pushed onto the stack.)-6.613 F 3.364
(It so happens in this)9.864 F -.195(ex)33.336 516 S .744
(ample that said address corresponds to the ne).195 F .743
(xt instruction in)-.195 F F2(context_switch\(\))3.993 E F1(,)A .319
(i.e. label)33.336 531 R F2(LABEL1:)3.569 E F1 3.569(,b)C .319
(ut this mechanism allo)-3.829 F .32(ws us to resume e)-.325 F -.195(xe)
-.195 G .32(cution when switched-in).195 F(at some other place in the k)
33.336 546 Q(ernel code.)-.13 E(No)33.336 582 Q 3.25(wl)-.325 G(et')
-3.25 E 3.25(st)-.715 G(ak)-3.25 E 3.25(eal)-.13 G
(ook at things when we ha)-3.25 E .39 -.195(ve j)-.26 H(ust entered).195
E F2(__switch_to\(\))6.5 E F1(:)A 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 24)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 468 757 -301.078 487 33.336 421.078 PBEGIN
%%BeginDocument: cswitch2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cswitch2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 10 23:15:59 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 757 487
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 487 moveto 0 0 lineto 757 0 lineto 757 487 lineto closepath clip newpath
-30.8 477.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 8625 3900 m 10125 3900 l 10125 4650 l 8625 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 4455 m
gs 1 -1 sc ( sys_bar) col0 sh gr
% Polyline
n 8625 3150 m 10125 3150 l 10125 3900 l 8625 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 8625 2400 m 10125 2400 l 10125 3150 l 8625 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Polyline
n 3900 4650 m 5400 4650 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
n 4614 4725 m 4471 4725 l 4471 6675 l
 4614 6675 l gs col0 s gr 
% Polyline
n 4614 6900 m 4471 6900 l 4471 7725 l
 4614 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
4829 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4300 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4257 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 3900 3900 m 5400 3900 l 5400 4650 l 3900 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 4455 m
gs 1 -1 sc ( sys_foo) col0 sh gr
% Polyline
n 3900 3150 m 5400 3150 l 5400 3900 l 3900 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 3900 2400 m 5400 2400 l 5400 3150 l 3900 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Polyline
n 8625 4650 m 10125 4650 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
n 9339 4725 m 9196 4725 l 9196 6675 l
 9339 6675 l gs col0 s gr 
% Polyline
n 9339 6900 m 9196 6900 l 9196 7725 l
 9339 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
9554 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9025 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8982 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Arc
gs  clippath
9829 3491 m 9795 3541 l 9922 3625 l 9839 3534 l 9955 3575 l cp
eoclip
n 8437.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 9955 3575 m 9839 3534 l 9922 3625 l  col0 s
% Arc
gs  clippath
5104 3491 m 5070 3541 l 5197 3625 l 5114 3534 l 5230 3575 l cp
eoclip
n 3712.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 5230 3575 m 5114 3534 l 5197 3625 l  col0 s
% Polyline
15.000 slw
n 1200 300 m 2700 300 l 2700 4200 l 1200 4200 l
 cp gs col0 s gr 
% Polyline
n 2250 4950 m 3150 4950 l 3150 6150 l 2250 6150 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 5250 m 3150 5250 l 3150 5700 l 2250 5700 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 1050 6300 m 3000 6300 l 3000 6900 l 1050 6900 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5983 929 m 6033 895 l 5949 769 l 5991 886 l 5899 802 l cp
eoclip
n 3000 6600 m 3450 6600 l 3450 450 l 5700 450 l
 6000 900 l gs col0 s gr gr

% arrowhead
n 5899 802 m 5991 886 l 5949 769 l  col0 s
% Polyline
gs  clippath
1365 3780 m 1365 3720 l 1213 3720 l 1333 3750 l 1213 3780 l cp
eoclip
n 1050 5700 m 750 5700 l 750 3750 l
 1350 3750 l gs col0 s gr gr

% arrowhead
n 1213 3780 m 1333 3750 l 1213 3720 l  col0 s
% Polyline
30.000 slw
n 1155 5100 m 1050 5100 1050 5895 105 arcto 4 {pop} repeat
  1050 6000 1695 6000 105 arcto 4 {pop} repeat
  1800 6000 1800 5205 105 arcto 4 {pop} repeat
  1800 5100 1155 5100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1050 5550 m
 1800 5550 l gs col0 s gr 
% Polyline
gs  clippath
3915 7830 m 3915 7770 l 3763 7770 l 3883 7800 l 3763 7830 l cp
eoclip
n 3000 5400 m 3300 5400 l 3300 7800 l
 3900 7800 l gs col0 s gr gr

% arrowhead
n 3763 7830 m 3883 7800 l 3763 7770 l  col0 s
% Polyline
n 10875 1950 m 12225 1950 l 12225 3300 l 10875 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 10875 1050 m 12225 1050 l 12225 4350 l 10875 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10185 7770 m 10185 7830 l 10337 7830 l 10217 7800 l 10337 7770 l cp
eoclip
n 11025 2400 m 10575 2400 l 10575 7800 l
 10200 7800 l gs col0 s gr gr

% arrowhead
n 10337 7770 m 10217 7800 l 10337 7830 l  col0 s
% Polyline
gs  clippath
12210 1020 m 12210 1080 l 12362 1080 l 12242 1050 l 12362 1020 l cp
eoclip
n 11625 4950 m 12525 4950 l 12525 1050 l
 12225 1050 l gs col0 s gr gr

% arrowhead
n 12362 1020 m 12242 1050 l 12362 1080 l  col0 s
% Polyline
n 6150 1500 m 7500 1500 l 7500 1800 l 6150 1800 l
 cp gs col0 s gr 
% Polyline
n 6150 1950 m 7500 1950 l 7500 3300 l 6150 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 6150 1050 m 7500 1050 l 7500 4350 l 6150 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5385 7770 m 5385 7830 l 5537 7830 l 5417 7800 l 5537 7770 l cp
eoclip
n 6300 2400 m 5850 2400 l 5850 7800 l
 5400 7800 l gs col0 s gr gr

% arrowhead
n 5537 7770 m 5417 7800 l 5537 7830 l  col0 s
% Polyline
gs  clippath
7485 1020 m 7485 1080 l 7637 1080 l 7517 1050 l 7637 1020 l cp
eoclip
n 6900 4950 m 7800 4950 l 7800 1050 l
 7500 1050 l gs col0 s gr gr

% arrowhead
n 7637 1020 m 7517 1050 l 7637 1080 l  col0 s
% Polyline
15.000 slw
n 3900 1050 m 5400 1050 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 10875 1500 m 12225 1500 l 12225 1800 l 10875 1800 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6098 1149 m 6080 1091 l 5935 1136 l 6059 1130 l 5953 1193 l cp
eoclip
n 5100 1425 m
 6075 1125 l gs col0 s gr gr

% arrowhead
n 5953 1193 m 6059 1130 l 5935 1136 l  col0 s
% Polyline
gs  clippath
12495 6090 m 12555 6090 l 12555 5938 l 12525 6058 l 12495 5938 l cp
eoclip
n 11475 5250 m 12525 5250 l
 12525 6075 l gs col0 s gr gr

% arrowhead
n 12495 5938 m 12525 6058 l 12555 5938 l  col0 s
% Polyline
gs  clippath
10858 1004 m 10908 970 l 10824 844 l 10866 961 l 10774 877 l cp
eoclip
n 6750 5250 m 8025 5250 l 8025 525 l 10575 525 l
 10875 975 l gs col0 s gr gr

% arrowhead
n 10774 877 m 10866 961 l 10824 844 l  col0 s
% Polyline
15.000 slw
n 8625 1050 m 10125 1050 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 8625 2175 m 10125 2175 l 10125 2400 l 8625 2400 l
 cp gs col0 s gr 
% Polyline
gs  clippath
8715 3105 m 8715 3045 l 8563 3045 l 8683 3075 l 8563 3105 l cp
eoclip
n 8775 2325 m 8475 2325 l 8475 3075 l
 8700 3075 l gs col0 s gr gr

% arrowhead
n 8563 3105 m 8683 3075 l 8563 3045 l  col0 s
% Polyline
gs  clippath
1365 3255 m 1365 3195 l 1213 3195 l 1333 3225 l 1213 3255 l cp
eoclip
n 11700 3000 m 12825 3000 l 12825 150 l 900 150 l 900 3225 l
 1350 3225 l gs col0 s gr gr

% arrowhead
n 1213 3255 m 1333 3225 l 1213 3195 l  col0 s
% Polyline
gs  clippath
10110 2145 m 10110 2205 l 10262 2205 l 10142 2175 l 10262 2145 l cp
eoclip
n 11250 2625 m 10350 2625 l 10350 2175 l
 10125 2175 l gs col0 s gr gr

% arrowhead
n 10262 2145 m 10142 2175 l 10262 2205 l  col0 s
% Polyline
gs  clippath
10823 1149 m 10805 1091 l 10660 1136 l 10784 1130 l 10678 1193 l cp
eoclip
n 9825 1425 m
 10800 1125 l gs col0 s gr gr

% arrowhead
n 10678 1193 m 10784 1130 l 10660 1136 l  col0 s
% Polyline
gs  clippath
8640 1755 m 8640 1695 l 8488 1695 l 8608 1725 l 8488 1755 l cp
eoclip
n 1125 5325 m 525 5325 l 525 7950 l 8325 7950 l 8325 1725 l
 8625 1725 l gs col0 s gr gr

% arrowhead
n 8488 1755 m 8608 1725 l 8488 1695 l  col0 s
% Polyline
n 8625 1575 m 10125 1575 l 10125 1050 l 8625 1050 l
 cp gs col0 s gr 
% Polyline
n 3900 1575 m 5400 1575 l 5400 1050 l 3900 1050 l
 cp gs col0 s gr 
% Polyline
n 8625 1725 m 10125 1725 l 10125 2025 l 8625 2025 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7725 116 m 7698 170 l 7833 237 l 7740 157 l 7860 183 l cp
eoclip
n 8700 2100 m 8175 2100 l 8175 375 l
 7725 150 l gs col0 s gr gr

% arrowhead
n 7860 183 m 7740 157 l 7833 237 l  col0 s
% Polyline
gs  clippath
5250 116 m 5223 170 l 5358 237 l 5265 157 l 5385 183 l cp
eoclip
n 6375 2925 m 5550 2925 l 5550 300 l
 5250 150 l gs col0 s gr gr

% arrowhead
n 5385 183 m 5265 157 l 5358 237 l  col0 s
% Polyline
n 3900 2400 m 5400 2400 l 5400 2175 l 3900 2175 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5400 2141 m 5373 2195 l 5508 2262 l 5415 2182 l 5535 2208 l cp
eoclip
n 6450 2700 m
 5400 2175 l gs col0 s gr gr

% arrowhead
n 5535 2208 m 5415 2182 l 5508 2262 l  col0 s
% Polyline
gs  clippath
3915 3105 m 3915 3045 l 3763 3045 l 3883 3075 l 3763 3105 l cp
eoclip
n 3900 2250 m 3675 2250 l 3675 3075 l
 3900 3075 l gs col0 s gr gr

% arrowhead
n 3763 3105 m 3883 3075 l 3763 3045 l  col0 s
% Polyline
2 slj
n 11025 4500 m 11061 4496 l 11100 4494 l 11138 4493 l 11176 4493 l 11213 4494 l
 11247 4496 l 11280 4498 l 11310 4501 l 11338 4504 l 11364 4507 l
 11389 4511 l 11412 4514 l 11433 4518 l 11454 4521 l 11475 4525 l
 11496 4529 l 11517 4533 l 11538 4538 l 11561 4543 l 11586 4548 l
 11612 4554 l 11640 4561 l 11670 4569 l 11703 4577 l 11737 4587 l
 11774 4597 l 11812 4609 l 11850 4622 l 11889 4635 l 11925 4650 l
 11963 4668 l 11996 4685 l 12024 4702 l 12046 4717 l 12063 4731 l
 12076 4742 l 12085 4752 l 12091 4761 l 12094 4768 l 12094 4774 l
 12093 4779 l 12091 4783 l 12087 4788 l 12084 4792 l 12080 4796 l
 12076 4802 l 12073 4808 l 12071 4816 l 12069 4826 l 12068 4837 l
 12068 4851 l 12069 4867 l 12071 4885 l 12073 4905 l 12074 4927 l
 12075 4950 l 12074 4980 l 12071 5007 l 12067 5031 l 12063 5051 l
 12060 5066 l 12057 5078 l 12055 5086 l 12053 5092 l 12052 5097 l
 12050 5100 l 12048 5103 l 12045 5108 l 12041 5114 l 12035 5122 l
 12026 5134 l 12014 5149 l 11998 5169 l 11978 5193 l 11953 5220 l
 11925 5250 l 11897 5277 l 11869 5303 l 11843 5327 l 11819 5348 l
 11799 5366 l 11783 5382 l 11770 5396 l 11759 5408 l 11751 5419 l
 11744 5429 l 11737 5438 l 11731 5446 l 11723 5455 l 11713 5464 l
 11700 5474 l 11683 5484 l 11662 5495 l 11635 5507 l 11603 5519 l
 11565 5531 l 11522 5542 l 11475 5550 l 11431 5555 l 11388 5557 l
 11348 5557 l 11311 5556 l 11279 5553 l 11250 5550 l 11225 5547 l
 11203 5543 l 11184 5539 l 11167 5534 l 11152 5530 l 11137 5525 l
 11123 5520 l 11109 5515 l 11093 5508 l 11076 5502 l 11057 5494 l
 11036 5485 l 11013 5475 l 10987 5463 l 10959 5450 l 10930 5435 l
 10902 5418 l 10875 5400 l 10848 5377 l 10828 5355 l 10813 5335 l
 10805 5317 l 10801 5302 l 10801 5291 l 10804 5281 l 10810 5274 l
 10817 5268 l 10825 5262 l 10833 5257 l 10842 5250 l 10850 5242 l
 10857 5232 l 10864 5219 l 10868 5202 l 10872 5182 l 10874 5157 l
 10875 5130 l 10875 5100 l 10875 5063 l 10875 5031 l 10874 5004 l
 10872 4984 l 10870 4970 l 10868 4961 l 10865 4954 l 10863 4950 l
 10860 4946 l 10858 4939 l 10857 4930 l 10857 4916 l 10858 4896 l
 10861 4869 l 10867 4837 l 10875 4800 l 10882 4775 l 10888 4751 l
 10894 4729 l 10898 4709 l 10900 4691 l 10900 4675 l 10899 4662 l
 10896 4649 l 10892 4639 l 10886 4629 l 10881 4621 l 10875 4612 l
 10870 4605 l 10866 4597 l 10863 4588 l 10863 4580 l 10865 4571 l
 10872 4561 l 10883 4550 l 10899 4539 l 10921 4528 l 10949 4517 l
 10984 4508 l
 cp gs col0 s gr 
% Polyline
n 6300 4500 m 6336 4496 l 6375 4494 l 6413 4493 l 6451 4493 l 6488 4494 l
 6522 4496 l 6555 4498 l 6585 4501 l 6613 4504 l 6639 4507 l
 6664 4511 l 6687 4514 l 6708 4518 l 6729 4521 l 6750 4525 l
 6771 4529 l 6792 4533 l 6813 4538 l 6836 4543 l 6861 4548 l
 6887 4554 l 6915 4561 l 6945 4569 l 6978 4577 l 7012 4587 l
 7049 4597 l 7087 4609 l 7125 4622 l 7164 4635 l 7200 4650 l
 7238 4668 l 7271 4685 l 7299 4702 l 7321 4717 l 7338 4731 l
 7351 4742 l 7360 4752 l 7366 4761 l 7369 4768 l 7369 4774 l
 7368 4779 l 7366 4783 l 7362 4788 l 7359 4792 l 7355 4796 l
 7351 4802 l 7348 4808 l 7346 4816 l 7344 4826 l 7343 4837 l
 7343 4851 l 7344 4867 l 7346 4885 l 7348 4905 l 7349 4927 l
 7350 4950 l 7349 4980 l 7346 5007 l 7342 5031 l 7338 5051 l
 7335 5066 l 7332 5078 l 7330 5086 l 7328 5092 l 7327 5097 l
 7325 5100 l 7323 5103 l 7320 5108 l 7316 5114 l 7310 5122 l
 7301 5134 l 7289 5149 l 7273 5169 l 7253 5193 l 7228 5220 l
 7200 5250 l 7172 5277 l 7144 5303 l 7118 5327 l 7094 5348 l
 7074 5366 l 7058 5382 l 7045 5396 l 7034 5408 l 7026 5419 l
 7019 5429 l 7012 5438 l 7006 5446 l 6998 5455 l 6988 5464 l
 6975 5474 l 6958 5484 l 6937 5495 l 6910 5507 l 6878 5519 l
 6840 5531 l 6797 5542 l 6750 5550 l 6706 5555 l 6663 5557 l
 6623 5557 l 6586 5556 l 6554 5553 l 6525 5550 l 6500 5547 l
 6478 5543 l 6459 5539 l 6442 5534 l 6427 5530 l 6412 5525 l
 6398 5520 l 6384 5515 l 6368 5508 l 6351 5502 l 6332 5494 l
 6311 5485 l 6288 5475 l 6262 5463 l 6234 5450 l 6205 5435 l
 6177 5418 l 6150 5400 l 6123 5377 l 6103 5355 l 6088 5335 l
 6080 5317 l 6076 5302 l 6076 5291 l 6079 5281 l 6085 5274 l
 6092 5268 l 6100 5262 l 6108 5257 l 6117 5250 l 6125 5242 l
 6132 5232 l 6139 5219 l 6143 5202 l 6147 5182 l 6149 5157 l
 6150 5130 l 6150 5100 l 6150 5063 l 6150 5031 l 6149 5004 l
 6147 4984 l 6145 4970 l 6143 4961 l 6140 4954 l 6138 4950 l
 6135 4946 l 6133 4939 l 6132 4930 l 6132 4916 l 6133 4896 l
 6136 4869 l 6142 4837 l 6150 4800 l 6157 4775 l 6163 4751 l
 6169 4729 l 6173 4709 l 6175 4691 l 6175 4675 l 6174 4662 l
 6171 4649 l 6167 4639 l 6161 4629 l 6156 4621 l 6150 4612 l
 6145 4605 l 6141 4597 l 6138 4588 l 6138 4580 l 6140 4571 l
 6147 4561 l 6158 4550 l 6174 4539 l 6196 4528 l 6224 4517 l
 6259 4508 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
1350 600 m
gs 1 -1 sc (system_call:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1800 m
gs 1 -1 sc (sys_bar) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1200 m
gs 1 -1 sc (sys_foo) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 2400 m
gs 1 -1 sc (schedule:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 3000 m
gs 1 -1 sc (context_switch) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 0 m
gs 1 -1 sc (Kernel text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2400 4800 m
gs 1 -1 sc (TSS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5400 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5850 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6600 m
gs 1 -1 sc (Per-CPU global var) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6855 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
900 4950 m
gs 1 -1 sc (CPU REGS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
11475 1650 m
gs 1 -1 sc (456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9375 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1005 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 900 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
6750 1650 m
gs 1 -1 sc (123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1005 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 900 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2550 5550 m
gs 1 -1 sc (esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6150 m
gs 1 -1 sc (To task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6405 m
gs 1 -1 sc (for task 789) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8925 2325 m
gs 1 -1 sc (saved %ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1500 3300 m
gs 1 -1 sc (LABEL1:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8700 1875 m
gs 1 -1 sc (__switch_to) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8925 2175 m
gs 1 -1 sc (ret addr) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4050 2325 m
gs 1 -1 sc (saved %ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1275 3825 m
gs 1 -1 sc (__switch_to) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Courier@0 SF(__switch_to\(\))33.336 448.078 Q/F2 13
/Times-Roman@0 SF .883
(updates the TSS so that at some later time, when task #456 is doing)
4.134 F 1.185(its thing in user mode, and control re-enters the k)33.336
463.078 R 1.186(ernel from user mode, it does so with)-.13 F
(the correct k)33.336 478.078 Q(ernel stack pointer)-.13 E 3.25(,i)-.52
G(.e. the k)-3.25 E(ernel stack of task #456.)-.13 E(When)33.336 499.078
Q F1(__switch_to\(\))4.12 E F2 .87(returns, its return v)4.12 F .87
(alue is the task which we replaced, i.e. the)-.325 F 1.353
(pointer to task struct #123.)33.336 514.078 R 1.353(Thus the local v)
7.853 F(ariable)-.325 E F1(prev)4.603 E F2(in)4.603 E F1
(context_switch\(\))4.603 E F2(is)4.604 E .363(properly set.)33.336
529.078 R(The)6.863 E F1(current)3.613 E F2 -.325(va)3.613 G .362
(riable has lik).325 F -.325(ew)-.13 G .362
(ise been set to point to task #456.).325 F 2.442 -1.04(We a)6.862 H(re)
1.04 E(no)33.336 544.078 Q 4.086(wr)-.325 G .836(eady to return from)
-4.086 F F1(context_switch)4.087 E F2 4.087(,a)C .837(nd then complete)
-4.087 F F1(sys_bar)4.087 E F2 .837(and return)4.087 F
(to user mode in task #456:)33.336 559.078 Q 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 25)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 468 757 -309.733 501 33.336 429.733 PBEGIN
%%BeginDocument: cswitch3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cswitch3.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 10 23:15:51 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 757 501
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 501 moveto 0 0 lineto 757 0 lineto 757 501 lineto closepath clip newpath
-30.8 491.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 8625 3900 m 10125 3900 l 10125 4650 l 8625 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 4455 m
gs 1 -1 sc ( sys_bar) col0 sh gr
% Polyline
n 8625 3150 m 10125 3150 l 10125 3900 l 8625 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 3900 4650 m 5400 4650 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
n 4614 4725 m 4471 4725 l 4471 6675 l
 4614 6675 l gs col0 s gr 
% Polyline
n 4614 6900 m 4471 6900 l 4471 7725 l
 4614 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
4829 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4300 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4257 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 3900 3900 m 5400 3900 l 5400 4650 l 3900 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 4455 m
gs 1 -1 sc ( sys_foo) col0 sh gr
% Polyline
n 3900 3150 m 5400 3150 l 5400 3900 l 3900 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 3705 m
gs 1 -1 sc ( schedule) col0 sh gr
% Polyline
n 3900 2400 m 5400 2400 l 5400 3150 l 3900 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Polyline
n 8625 4650 m 10125 4650 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
n 9339 4725 m 9196 4725 l 9196 6675 l
 9339 6675 l gs col0 s gr 
% Polyline
n 9339 6900 m 9196 6900 l 9196 7725 l
 9339 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
9554 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
9554 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9025 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8839 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
8982 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 8625 2400 m 10125 2400 l 10125 3150 l 8625 3150 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
8775 2700 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 2955 m
gs 1 -1 sc ( context_switch) col0 sh gr
% Arc
gs  clippath
9829 3491 m 9795 3541 l 9922 3625 l 9839 3534 l 9955 3575 l cp
eoclip
n 8437.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 9955 3575 m 9839 3534 l 9922 3625 l  col0 s
% Arc
gs  clippath
5104 3491 m 5070 3541 l 5197 3625 l 5114 3534 l 5230 3575 l cp
eoclip
n 3712.5 5737.5 2611.6 -21.0 -57.9 arcn
gs col0 s gr
 gr

% arrowhead
n 5230 3575 m 5114 3534 l 5197 3625 l  col0 s
% Polyline
15.000 slw
n 1200 300 m 2700 300 l 2700 4200 l 1200 4200 l
 cp gs col0 s gr 
% Polyline
n 2250 4950 m 3150 4950 l 3150 6150 l 2250 6150 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 5250 m 3150 5250 l 3150 5700 l 2250 5700 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 1050 6300 m 3000 6300 l 3000 6900 l 1050 6900 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10851 923 m 10908 904 l 10860 760 l 10870 884 l 10803 779 l cp
eoclip
n 3000 6600 m 3450 6600 l 3450 450 l 10725 450 l
 10875 900 l gs col0 s gr gr

% arrowhead
n 10803 779 m 10870 884 l 10860 760 l  col0 s
% Polyline
gs  clippath
1440 3480 m 1440 3420 l 1288 3420 l 1408 3450 l 1288 3480 l cp
eoclip
n 1050 5700 m 750 5700 l 750 3450 l
 1425 3450 l gs col0 s gr gr

% arrowhead
n 1288 3480 m 1408 3450 l 1288 3420 l  col0 s
% Polyline
30.000 slw
n 1155 5100 m 1050 5100 1050 5895 105 arcto 4 {pop} repeat
  1050 6000 1695 6000 105 arcto 4 {pop} repeat
  1800 6000 1800 5205 105 arcto 4 {pop} repeat
  1800 5100 1155 5100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1050 5550 m
 1800 5550 l gs col0 s gr 
% Polyline
n 10875 1950 m 12225 1950 l 12225 3300 l 10875 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 10875 1050 m 12225 1050 l 12225 4350 l 10875 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10185 7770 m 10185 7830 l 10337 7830 l 10217 7800 l 10337 7770 l cp
eoclip
n 11025 2400 m 10575 2400 l 10575 7800 l
 10200 7800 l gs col0 s gr gr

% arrowhead
n 10337 7770 m 10217 7800 l 10337 7830 l  col0 s
% Polyline
gs  clippath
12210 1020 m 12210 1080 l 12362 1080 l 12242 1050 l 12362 1020 l cp
eoclip
n 11625 4950 m 12525 4950 l 12525 1050 l
 12225 1050 l gs col0 s gr gr

% arrowhead
n 12362 1020 m 12242 1050 l 12362 1080 l  col0 s
% Polyline
n 6150 1500 m 7500 1500 l 7500 1800 l 6150 1800 l
 cp gs col0 s gr 
% Polyline
n 6150 1950 m 7500 1950 l 7500 3300 l 6150 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 6150 1050 m 7500 1050 l 7500 4350 l 6150 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5385 7770 m 5385 7830 l 5537 7830 l 5417 7800 l 5537 7770 l cp
eoclip
n 6300 2400 m 5850 2400 l 5850 7800 l
 5400 7800 l gs col0 s gr gr

% arrowhead
n 5537 7770 m 5417 7800 l 5537 7830 l  col0 s
% Polyline
gs  clippath
7485 1020 m 7485 1080 l 7637 1080 l 7517 1050 l 7637 1020 l cp
eoclip
n 6900 4950 m 7800 4950 l 7800 1050 l
 7500 1050 l gs col0 s gr gr

% arrowhead
n 7637 1020 m 7517 1050 l 7637 1080 l  col0 s
% Polyline
15.000 slw
n 3900 1050 m 5400 1050 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 10875 1500 m 12225 1500 l 12225 1800 l 10875 1800 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6098 1149 m 6080 1091 l 5935 1136 l 6059 1130 l 5953 1193 l cp
eoclip
n 5100 1425 m
 6075 1125 l gs col0 s gr gr

% arrowhead
n 5953 1193 m 6059 1130 l 5935 1136 l  col0 s
% Polyline
gs  clippath
12495 6090 m 12555 6090 l 12555 5938 l 12525 6058 l 12495 5938 l cp
eoclip
n 11475 5250 m 12525 5250 l
 12525 6075 l gs col0 s gr gr

% arrowhead
n 12495 5938 m 12525 6058 l 12555 5938 l  col0 s
% Polyline
gs  clippath
10858 1004 m 10908 970 l 10824 844 l 10866 961 l 10774 877 l cp
eoclip
n 6750 5250 m 8025 5250 l 8025 525 l 10575 525 l
 10875 975 l gs col0 s gr gr

% arrowhead
n 10774 877 m 10866 961 l 10824 844 l  col0 s
% Polyline
15.000 slw
n 8625 1050 m 10125 1050 l 10125 7800 l 8625 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
1365 3255 m 1365 3195 l 1213 3195 l 1333 3225 l 1213 3255 l cp
eoclip
n 11700 3000 m 12825 3000 l 12825 150 l 900 150 l 900 3225 l
 1350 3225 l gs col0 s gr gr

% arrowhead
n 1213 3255 m 1333 3225 l 1213 3195 l  col0 s
% Polyline
gs  clippath
10110 2145 m 10110 2205 l 10262 2205 l 10142 2175 l 10262 2145 l cp
eoclip
n 11250 2625 m 10350 2625 l 10350 2175 l
 10125 2175 l gs col0 s gr gr

% arrowhead
n 10262 2145 m 10142 2175 l 10262 2205 l  col0 s
% Polyline
gs  clippath
10823 1149 m 10805 1091 l 10660 1136 l 10784 1130 l 10678 1193 l cp
eoclip
n 9825 1425 m
 10800 1125 l gs col0 s gr gr

% arrowhead
n 10678 1193 m 10784 1130 l 10660 1136 l  col0 s
% Polyline
gs  clippath
8640 2430 m 8640 2370 l 8488 2370 l 8608 2400 l 8488 2430 l cp
eoclip
n 1125 5325 m 525 5325 l 525 7950 l 8325 7950 l 8325 2400 l
 8625 2400 l gs col0 s gr gr

% arrowhead
n 8488 2430 m 8608 2400 l 8488 2370 l  col0 s
% Polyline
n 8625 1575 m 10125 1575 l 10125 1050 l 8625 1050 l
 cp gs col0 s gr 
% Polyline
n 3900 1575 m 5400 1575 l 5400 1050 l 3900 1050 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5250 116 m 5223 170 l 5358 237 l 5265 157 l 5385 183 l cp
eoclip
n 6375 2925 m 5550 2925 l 5550 300 l
 5250 150 l gs col0 s gr gr

% arrowhead
n 5385 183 m 5265 157 l 5358 237 l  col0 s
% Polyline
n 3900 2400 m 5400 2400 l 5400 2175 l 3900 2175 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5400 2141 m 5373 2195 l 5508 2262 l 5415 2182 l 5535 2208 l cp
eoclip
n 6450 2700 m
 5400 2175 l gs col0 s gr gr

% arrowhead
n 5535 2208 m 5415 2182 l 5508 2262 l  col0 s
% Polyline
gs  clippath
3915 3105 m 3915 3045 l 3763 3045 l 3883 3075 l 3763 3105 l cp
eoclip
n 3900 2250 m 3675 2250 l 3675 3075 l
 3900 3075 l gs col0 s gr gr

% arrowhead
n 3763 3105 m 3883 3075 l 3763 3045 l  col0 s
% Polyline
gs  clippath
8733 7802 m 8681 7771 l 8603 7901 l 8691 7814 l 8654 7932 l cp
eoclip
n 3075 5475 m 3675 5475 l 3675 8175 l 8475 8175 l
 8700 7800 l gs col0 s gr gr

% arrowhead
n 8654 7932 m 8691 7814 l 8603 7901 l  col0 s
% Polyline
2 slj
n 11025 4500 m 11061 4496 l 11100 4494 l 11138 4493 l 11176 4493 l 11213 4494 l
 11247 4496 l 11280 4498 l 11310 4501 l 11338 4504 l 11364 4507 l
 11389 4511 l 11412 4514 l 11433 4518 l 11454 4521 l 11475 4525 l
 11496 4529 l 11517 4533 l 11538 4538 l 11561 4543 l 11586 4548 l
 11612 4554 l 11640 4561 l 11670 4569 l 11703 4577 l 11737 4587 l
 11774 4597 l 11812 4609 l 11850 4622 l 11889 4635 l 11925 4650 l
 11963 4668 l 11996 4685 l 12024 4702 l 12046 4717 l 12063 4731 l
 12076 4742 l 12085 4752 l 12091 4761 l 12094 4768 l 12094 4774 l
 12093 4779 l 12091 4783 l 12087 4788 l 12084 4792 l 12080 4796 l
 12076 4802 l 12073 4808 l 12071 4816 l 12069 4826 l 12068 4837 l
 12068 4851 l 12069 4867 l 12071 4885 l 12073 4905 l 12074 4927 l
 12075 4950 l 12074 4980 l 12071 5007 l 12067 5031 l 12063 5051 l
 12060 5066 l 12057 5078 l 12055 5086 l 12053 5092 l 12052 5097 l
 12050 5100 l 12048 5103 l 12045 5108 l 12041 5114 l 12035 5122 l
 12026 5134 l 12014 5149 l 11998 5169 l 11978 5193 l 11953 5220 l
 11925 5250 l 11897 5277 l 11869 5303 l 11843 5327 l 11819 5348 l
 11799 5366 l 11783 5382 l 11770 5396 l 11759 5408 l 11751 5419 l
 11744 5429 l 11737 5438 l 11731 5446 l 11723 5455 l 11713 5464 l
 11700 5474 l 11683 5484 l 11662 5495 l 11635 5507 l 11603 5519 l
 11565 5531 l 11522 5542 l 11475 5550 l 11431 5555 l 11388 5557 l
 11348 5557 l 11311 5556 l 11279 5553 l 11250 5550 l 11225 5547 l
 11203 5543 l 11184 5539 l 11167 5534 l 11152 5530 l 11137 5525 l
 11123 5520 l 11109 5515 l 11093 5508 l 11076 5502 l 11057 5494 l
 11036 5485 l 11013 5475 l 10987 5463 l 10959 5450 l 10930 5435 l
 10902 5418 l 10875 5400 l 10848 5377 l 10828 5355 l 10813 5335 l
 10805 5317 l 10801 5302 l 10801 5291 l 10804 5281 l 10810 5274 l
 10817 5268 l 10825 5262 l 10833 5257 l 10842 5250 l 10850 5242 l
 10857 5232 l 10864 5219 l 10868 5202 l 10872 5182 l 10874 5157 l
 10875 5130 l 10875 5100 l 10875 5063 l 10875 5031 l 10874 5004 l
 10872 4984 l 10870 4970 l 10868 4961 l 10865 4954 l 10863 4950 l
 10860 4946 l 10858 4939 l 10857 4930 l 10857 4916 l 10858 4896 l
 10861 4869 l 10867 4837 l 10875 4800 l 10882 4775 l 10888 4751 l
 10894 4729 l 10898 4709 l 10900 4691 l 10900 4675 l 10899 4662 l
 10896 4649 l 10892 4639 l 10886 4629 l 10881 4621 l 10875 4612 l
 10870 4605 l 10866 4597 l 10863 4588 l 10863 4580 l 10865 4571 l
 10872 4561 l 10883 4550 l 10899 4539 l 10921 4528 l 10949 4517 l
 10984 4508 l
 cp gs col0 s gr 
% Polyline
n 6300 4500 m 6336 4496 l 6375 4494 l 6413 4493 l 6451 4493 l 6488 4494 l
 6522 4496 l 6555 4498 l 6585 4501 l 6613 4504 l 6639 4507 l
 6664 4511 l 6687 4514 l 6708 4518 l 6729 4521 l 6750 4525 l
 6771 4529 l 6792 4533 l 6813 4538 l 6836 4543 l 6861 4548 l
 6887 4554 l 6915 4561 l 6945 4569 l 6978 4577 l 7012 4587 l
 7049 4597 l 7087 4609 l 7125 4622 l 7164 4635 l 7200 4650 l
 7238 4668 l 7271 4685 l 7299 4702 l 7321 4717 l 7338 4731 l
 7351 4742 l 7360 4752 l 7366 4761 l 7369 4768 l 7369 4774 l
 7368 4779 l 7366 4783 l 7362 4788 l 7359 4792 l 7355 4796 l
 7351 4802 l 7348 4808 l 7346 4816 l 7344 4826 l 7343 4837 l
 7343 4851 l 7344 4867 l 7346 4885 l 7348 4905 l 7349 4927 l
 7350 4950 l 7349 4980 l 7346 5007 l 7342 5031 l 7338 5051 l
 7335 5066 l 7332 5078 l 7330 5086 l 7328 5092 l 7327 5097 l
 7325 5100 l 7323 5103 l 7320 5108 l 7316 5114 l 7310 5122 l
 7301 5134 l 7289 5149 l 7273 5169 l 7253 5193 l 7228 5220 l
 7200 5250 l 7172 5277 l 7144 5303 l 7118 5327 l 7094 5348 l
 7074 5366 l 7058 5382 l 7045 5396 l 7034 5408 l 7026 5419 l
 7019 5429 l 7012 5438 l 7006 5446 l 6998 5455 l 6988 5464 l
 6975 5474 l 6958 5484 l 6937 5495 l 6910 5507 l 6878 5519 l
 6840 5531 l 6797 5542 l 6750 5550 l 6706 5555 l 6663 5557 l
 6623 5557 l 6586 5556 l 6554 5553 l 6525 5550 l 6500 5547 l
 6478 5543 l 6459 5539 l 6442 5534 l 6427 5530 l 6412 5525 l
 6398 5520 l 6384 5515 l 6368 5508 l 6351 5502 l 6332 5494 l
 6311 5485 l 6288 5475 l 6262 5463 l 6234 5450 l 6205 5435 l
 6177 5418 l 6150 5400 l 6123 5377 l 6103 5355 l 6088 5335 l
 6080 5317 l 6076 5302 l 6076 5291 l 6079 5281 l 6085 5274 l
 6092 5268 l 6100 5262 l 6108 5257 l 6117 5250 l 6125 5242 l
 6132 5232 l 6139 5219 l 6143 5202 l 6147 5182 l 6149 5157 l
 6150 5130 l 6150 5100 l 6150 5063 l 6150 5031 l 6149 5004 l
 6147 4984 l 6145 4970 l 6143 4961 l 6140 4954 l 6138 4950 l
 6135 4946 l 6133 4939 l 6132 4930 l 6132 4916 l 6133 4896 l
 6136 4869 l 6142 4837 l 6150 4800 l 6157 4775 l 6163 4751 l
 6169 4729 l 6173 4709 l 6175 4691 l 6175 4675 l 6174 4662 l
 6171 4649 l 6167 4639 l 6161 4629 l 6156 4621 l 6150 4612 l
 6145 4605 l 6141 4597 l 6138 4588 l 6138 4580 l 6140 4571 l
 6147 4561 l 6158 4550 l 6174 4539 l 6196 4528 l 6224 4517 l
 6259 4508 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
1350 600 m
gs 1 -1 sc (system_call:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1800 m
gs 1 -1 sc (sys_bar) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1200 m
gs 1 -1 sc (sys_foo) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 2400 m
gs 1 -1 sc (schedule:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 3000 m
gs 1 -1 sc (context_switch) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 0 m
gs 1 -1 sc (Kernel text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2400 4800 m
gs 1 -1 sc (TSS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5400 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5850 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6600 m
gs 1 -1 sc (Per-CPU global var) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6855 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
900 4950 m
gs 1 -1 sc (CPU REGS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11175 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
11475 1650 m
gs 1 -1 sc (456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9375 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1005 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 900 m
gs 1 -1 sc (for task 123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
6750 1650 m
gs 1 -1 sc (123) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 4800 m
gs 1 -1 sc (local var:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5055 m
gs 1 -1 sc ( prev) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 5310 m
gs 1 -1 sc (next) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8775 1005 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 900 m
gs 1 -1 sc (for task 456) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11025 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2550 5550 m
gs 1 -1 sc (esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6150 m
gs 1 -1 sc (To task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11850 6405 m
gs 1 -1 sc (for task 789) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1500 3300 m
gs 1 -1 sc (LABEL1:) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4050 2325 m
gs 1 -1 sc (saved %ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1275 3825 m
gs 1 -1 sc (__switch_to) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Bold@0 SF(Pr)186.261 510.733 Q(ocess and Thr)-.234
E(ead Cr)-.234 E(eation)-.234 E/F2 13/Times-Roman@0 SF -.455(Tr)33.336
540.733 S .369(aditionally UNIX processes are self-contained virtual co\
mputers with their o).455 F .369(wn pri)-.325 F -.325(va)-.325 G(te).325
E .878(address space and operating system conte)33.336 555.733 R .878
(xt \(e.g.)-.195 F .878(open \214le descriptors, signal handling\).)
7.378 F 2.127(Under Linux, man)33.336 570.733 R 5.377(ya)-.195 G 2.127
(spects of the process ha)-5.377 F 2.517 -.195(ve b)-.26 H 2.127
(een brok).195 F 2.127(en out and it is possible to)-.13 F 1.426
(create a ne)33.336 585.733 R 4.676(wp)-.325 G 1.426
(rocess which selecti)-4.676 F -.195(ve)-.325 G 1.426
(ly shares these attrib).195 F 1.426(utes with the parent, by using)-.26
F(the)33.336 600.733 Q/F3 13/Courier@0 SF(clone)3.25 E F2(system call.)
3.25 E(From user)36.586 621.733 Q(-le)-.26 E -.195(ve)-.325 G(l, the)
.195 E F3(clone)3.25 E F2(function is:)3.25 E/F4 10/Courier@0 SF(int cl\
one\(int \(*fn\)\(void *\), void *child_stack, int flags, void *arg\);)
33.336 633.733 Q F2(Unlik)33.336 648.733 Q(e)-.13 E F3(fork)5.506 E F2
(,)A F3(clone)5.506 E F2(be)5.506 E 2.256(gins e)-.195 F -.195(xe)-.195
G 2.255(cution in the child task in the function).195 F F3(fn)5.505 E F2
2.255(which is)5.505 F .181(supplied with the ar)33.336 663.733 R
(gument)-.234 E F3(arg)3.431 E F2 6.681(.W)C .181
(hen this function returns, the child task e)-6.681 F 3.431
(xits. Before)-.195 F(calling)33.336 678.733 Q F3(clone)5.375 E F2 5.375
(,a)C 5.375(na)-5.375 G 2.124
(rea of memory must be allocated and passed as)-5.375 F F3(child_stack)
5.374 E F2(.)A F3(clone)33.336 693.733 Q F2 1.626(as described abo)4.876
F 2.016 -.195(ve i)-.195 H 4.876(sa).195 G 1.626(ctually a user)-4.876 F
(-le)-.26 E -.195(ve)-.325 G 4.876(lw).195 G 1.626(rapper for the real)
-4.876 F F3(clone)4.876 E F2(system)4.876 E(call:)33.336 708.733 Q F4(i\
nt real_clone_syscall\(int flags,void *child_stack,int *parent_tidptr,)
33.336 735.733 Q 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 26)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(int *child_tidptr\);)90.936 117 Q/F2 13
/Times-Roman@0 SF .176(Note that)33.336 132 R/F3 13/Courier@0 SF(fn)
3.425 E F2 .175(is not among these ar)3.425 F 3.425(guments. The)-.234 F
.175(real clone system call beha)3.425 F -.195(ve)-.26 G 3.425(sl).195 G
(ik)-3.425 E 3.425(ef)-.13 G(ork,)-3.425 E 2.247(and the user)33.336 147
R(-le)-.26 E -.195(ve)-.325 G 5.498(lw).195 G 2.248(rapper mak)-5.498 F
2.248(es sure that the child thread e)-.13 F -.195(xe)-.195 G(cutes).195
E F3(fn\(arg\))5.498 E F2 8.748(.T)C(he)-8.748 E F3(clone)33.336 162 Q
F2 .508(system call is rarely called directly by a program, and e)3.758
F .508(xists primarily to support)-.195 F(the threads library \(e.g.)
33.336 177 Q F3(pthread_create)3.25 E F2(\).)A 4.842
(Internal to the Linux k)33.336 198 R 4.842
(ernel, there is no distinction between threads, lightweight)-.13 F .88
(processes, processes and tasks, and in f)33.336 213 R .88
(act these terms are often used interchangeably in)-.13 F 2.205
(the source code with confusing consequences.)33.336 228 R 2.206
(Each process has a unique process id.)8.706 F(Ho)33.336 243 Q(we)-.325
E -.195(ve)-.325 G 2.953 -.52(r, t).195 H 1.912
(he POSIX Threads standard requires that all threads which e).52 F 1.912
(xist within the)-.195 F 2.649(same \(hea)33.336 258 R 2.649
(vy-weight\) process ha)-.26 F 3.039 -.195(ve t)-.26 H 2.65
(he same pid as returned by).195 F F3(getpid)5.9 E F2 9.15(.T)C
(herefore,)-9.15 E .76(Linux introduces the notion of)33.336 273 R F3
.76(thread groups)4.01 F F2 7.26(.E)C .76
(ach thread has a unique process id)-7.26 F(\()33.336 288 Q F3(pid)A F2
1.209(\), and all threads within a hea)B 1.209(vyweight process ha)-.26
F 1.599 -.195(ve a c)-.26 H(ommon).195 E F3 1.209(thread group)4.459 F
2.731(id \(tgid\))33.336 303 R F2 9.231(.I)C 5.981(ti)-9.231 G 5.981(st)
-5.981 G(he)-5.981 E F3(tgid)5.981 E F2 5.981(,n)C(ot)-5.981 E F3(pid)
5.981 E F2 5.981(,w)C 2.731(hich is actually returned by the)-5.981 F F3
(getpid)5.98 E F2 .995(system call.)33.336 318 R 3.075 -1.04(To g)7.495
H .996(et the v)1.04 F .996(alue of the k)-.325 F(ernel-le)-.13 E -.195
(ve)-.325 G(l).195 E F3(pid)4.246 E F2 4.246(,u)C .996(se the)-4.246 F
F3(gettid)4.246 E F2 .996(system call \(get)4.246 F .74(thread id\).)
33.336 333 R -.195(Fo)7.24 G 3.99(rc).195 G(on)-3.99 E -.195(ve)-.52 G
.74(ntional single-threaded programs, the).195 F F3(tgid)3.99 E F2(and)
3.99 E F3(pid)3.99 E F2 .74(are of course)3.99 F(identical.)33.336 348 Q
F3(flags)33.336 369 Q F2 1.964(contains the signal number to be sent to\
 the parent when the child terminates)5.213 F(\(usually)33.336 384 Q F3
(SIGCHLD)3.551 E F2 3.551(\). This)B .301(is contained in the lo)3.551 F
.301(w-order byte.)-.325 F .301(Other bitwise \215ags may be)6.801 F
(or')33.336 399 Q 3.25(di)-.65 G(n; an incomplete list follo)-3.25 E
(ws:)-.325 E 4.071<8343>33.336 414 S .821
(LONE_VM: If set, share the virtual address space with the parent.)
-4.071 F .822(If clear)7.322 F 4.072(,t)-.52 G .822(he child)-4.072 F
.815(has a cop)33.336 429 R .815(y-on-write pri)-.13 F -.325(va)-.325 G
.815(te cop).325 F 4.065(yo)-.13 G 4.065(ft)-4.065 G .815(he parent')
-4.065 F 4.065(sa)-.715 G .814(ddress space at the instant of clone.)
-4.065 F(If)7.314 E 3.493(CLONE_VM is set, a ne)33.336 444 R 6.743(ws)
-.325 G 3.493(tack area must ha)-6.743 F 3.883 -.195(ve b)-.26 H 3.494
(een allocated and passed as the).195 F F3(child_stack)33.336 459 Q F2
(parameter)3.289 E 3.289(,b)-.52 G .039
(ecause if not, the child and parent w)-3.289 F .039
(ould con\215ict in their use)-.13 F
(of the same stack at the same shared virtual address.)33.336 474 Q
4.877<8343>33.336 489 S 1.627(LONE_SIGHAND: If set, the parent and chil\
d will share the signal handling table.)-4.877 F(An)33.336 504 Q 3.453
(yc)-.195 G .203(hanges made by one will be re\215ected in the other')
-3.453 F 3.453(s. If)-.715 F .203(not set, the child gets a cop)3.453 F
(y)-.13 E(of the signal handler table in ef)33.336 519 Q
(fect in the parent at the time of the clone.)-.325 E 4.992<8343>33.336
534 S 1.743(LONE_FILES: If set, the parent and child will share the ope\
n \214le descriptor table.)-4.992 F .824(Therefore, an)33.336 549 R
4.074<798c>-.195 G .824(les open')-4.074 F 4.074(di)-.65 G 4.074(no)
-4.074 G .824(ne will be visible using the same fd number in the other)
-4.074 F(.)-.715 E(If not set, the child gets a cop)33.336 564 Q 3.25
(yo)-.13 G 3.25(ft)-3.25 G
(he \214le descriptor table at the time of the clone.)-3.25 E 5.181
<8343>33.336 579 S 1.931
(LONE_FS: If set, the parent and child will fore)-5.181 F -.195(ve)-.325
G 5.182(rs).195 G 1.932(hare the follo)-5.182 F 1.932
(wing \214le system)-.325 F 2.864
(information: current root of the \214lesystem \(see)33.336 594 R F3
(chroot)6.114 E F2 2.864(\), current w)B 2.863(orking directory)-.13 F
(,)-.845 E 3.25(umask. If)33.336 609 R(not set, the child gets a cop)
3.25 E 3.25(yo)-.13 G 3.25(ft)-3.25 G(he parent')-3.25 E 3.25(si)-.715 G
(nformation at the time of clone.)-3.25 E 4.89<8343>33.336 624 S(LONE_P)
-4.89 E(ARENT)-1.196 E 4.89(:A)-.65 G -.325(ff)-4.89 G 1.641
(ects the notion of who is the parent process after the clone is).325 F
1.195(complete, and thus af)33.336 639 R(fects)-.325 E F3(SIGCHLD)4.445
E F2(deli)4.444 E -.195(ve)-.325 G(ry).195 E 7.694(.I)-.845 G 4.444(fs)
-7.694 G 1.194(et, the parent of the ne)-4.444 F 4.444(wc)-.325 G 1.194
(hild is the)-4.444 F(SAME as the parent of the caller)33.336 654 Q 6.5
(.I)-.715 G 3.25(fn)-6.5 G(ot set, the parent of the ne)-3.25 E 3.25(wc)
-.325 G(hild is the caller)-3.25 E(.)-.715 E 3.814<8343>33.336 669 S
.565(LONE_THREAD: If set, the child is put into the same thread group a\
s the caller)-3.814 F 3.815(,a)-.52 G(nd)-3.815 E .808
(therefore will ha)33.336 684 R 1.198 -.195(ve t)-.26 H .808(he same)
.195 F F3(tgid)4.058 E F2 7.308(.I)C 4.058(fn)-7.308 G .807
(ot set, the child is placed in a ne)-4.058 F 4.057(wt)-.325 G .807
(hread group)-4.057 F(of which it is the sole member and whose)33.336
699 Q F3(tgid)3.25 E F2(is the same as the child')3.25 E(s)-.715 E F3
(pid)3.25 E F2(.)A -1.04(Ty)33.336 720 S(pically)1.04 E 4.386(,w)-.845 G
(hen)-4.386 E F3(clone)4.386 E F2 1.136(is used to create a ne)4.386 F
4.386(wt)-.325 G 1.136(hread with)-4.386 F F3(pthread_create)4.386 E F2
4.386(,a)C 1.136(ll of)-4.386 F 1.719
(these CLONE_XX \215ags are set, so that the ne)33.336 735 R 4.969(wt)
-.325 G 1.719(hread e)-4.969 F 1.718(xists within the same address)-.195
F 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 27)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.735(space, and an)33.336 120 R 4.986
(ys)-.195 G 1.736
(ystem calls made by a thread, such as opening a \214le, af)-4.986 F
1.736(fect all of the)-.325 F 1.507(other threads.)33.336 135 R(Con)
8.007 E -.195(ve)-.52 G(rsely).195 E 4.757(,t)-.845 G(he)-4.757 E/F2 13
/Courier@0 SF(fork)4.757 E F1 1.507
(system call sets none of the CLONE_XXX \215ags,)4.757 F(and the ne)
33.336 150 Q 3.25(wp)-.325 G(rocess is thus an independent cop)-3.25 E
-.845(y.)-.13 G(The)33.336 171 Q F2(fork)6.984 E F1(and)6.984 E F2
(clone)6.984 E F1 3.734(system calls both use the same underlying k)
6.984 F 3.735(ernel function)-.13 F F2(do_fork\(\))33.336 186 Q F1
(to create a ne)A 3.25(wt)-.325 G(ask/process/thread:)-3.25 E/F3 10
/Courier@0 SF
(/* struct pt_regs *regs is an extra parameter which is inserted by)
33.336 210 Q
(entry_32.S or entry_64.S prior to jumping to sys_XXX via the)90.936 222
Q(system call handler table.)90.936 234 Q
(It is a pointer to the block of user)12 E
(registers that was saved on the kernel stack.)90.936 246 Q(*/)33.336
258 Q(int sys_fork\(struct pt_regs *regs\))33.336 282 Q({)33.336 294 Q
(/* plain old fork is the same as clone with no CLONE_XXX flags */)
90.936 306 Q(/* the child stack pointer is the same as the parent */)
90.936 318 Q
(/* since CLONE_VM is not set, the child gets a copy-on-write */)90.936
330 Q
(/* private address space and thus it is OK that the SP are the same */)
90.936 342 Q(return do_fork\(SIGCHLD, regs.esp, regs, 0, NULL, NULL\);)
81.336 354 Q(})33.336 366 Q
(long sys_clone\(unsigned long clone_flags, unsigned long newsp,)33.336
390 Q(void *parent_tid, void *child_tid, struct pt_regs *regs\))90.936
402 Q({)33.336 414 Q(if \(!newsp\))81.336 426 Q(newsp = regs->esp;)
129.336 438 Q(return do_fork\(clone_flags, newsp, regs, 0, parent_tidpt\
r, child_tidptr)81.336 450 Q(\);)33.336 462 Q F1 1.288
(Continuing to trace the \215o)33.336 483 R 4.538(wo)-.325 G 4.538(fe)
-4.538 G -.195(xe)-4.733 G 1.288
(cution, both clone and fork call the same).195 F F2(do_fork)4.537 E F1
(routine, which in turn calls)33.336 498 Q F2(copy_process)3.25 E F1(:)A
F3(long do_fork\(unsigned long clone_flags,)33.336 510 Q
(unsigned long stack_start,)117.336 522 Q(// Initial esp value)48 E
(struct pt_regs *regs,)117.336 534 Q(// addr of saved user regs)78 E
(unsigned long stack_size,)117.336 546 Q(// vestigial)111.6 E
(int __user *parent_tidptr,)117.336 558 Q(// don't worry about it)48 E
(int __user *child_tidptr\))117.336 570 Q(// don't worry about it)111.6
E({)33.336 582 Q(struct task_struct *p;)81.336 594 Q(int trace = 0;)
81.336 606 Q(long pid = alloc_pidmap\(\);)81.336 618 Q
(// Allocate new pid)84 E(if \(pid < 0\))81.336 642 Q(return -EAGAIN;)
148.536 654 Q(// Oops, out of PIDS)140.4 E
(/* A lot of simplification below */)90.936 666 Q 6(p=c)81.336 678 S
(opy_process\(clone_flags, stack_start, regs, stack_size, parent_tidp)-6
E(tr, child_tidptr, pid\);)33.336 690 Q(if \(!IS_ERR\(p\)\))81.336 702 Q
32.4(wake_up_new_task\(p,clone_flags\); //place)148.536 714 R
(on run queue)6 E(else)90.936 726 Q({)90.936 738 Q 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 28)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(free_pidmap\(pid\);)148.536 117 Q
(pid=PTR_ERR\(p\);)148.536 129 Q(})90.936 141 Q(return pid;)90.936 153 Q
(})33.336 165 Q/F2 13/Courier@0 SF(do_fork)33.336 180 Q/F3 13
/Times-Roman@0 SF .617(\214nds an a)3.867 F -.325(va)-.26 G .617
(ilable pid number for the ne).325 F 3.868(wp)-.325 G .618
(rocess or returns)-3.868 F F2(EAGAIN)3.868 E F3 .618(if there)3.868 F
.619(are no free numbers.)33.336 195 R F2(copy_process)7.119 E F3 .619
(is in)3.869 F -.26(vo)-.52 G -.13(ke).26 G .618
(d, which allocates and returns a pointer).13 F .75(to the ne)33.336 210
R(w)-.325 E F2 .75(struct task_struct)4 F F3 .75(for the ne)4 F 4(wp)
-.325 G 4(rocess. Thanks)-4 F .751(to the range of v)4 F(alid)-.325 E
3.184(addresses in k)33.336 225 R 3.184(ernel memory)-.13 F 6.434(,ah)
-.845 G 3.184(orrendously bad programming practice can be used)-6.434 F
1.108(within the k)33.336 240 R 1.109(ernel: the returned pointer is o)
-.13 F -.195(ve)-.195 G 1.109(rloaded to contain either a v).195 F 1.109
(alid pointer)-.325 F 4.359(,o)-.52 G(r)-4.359 E 1.895(the \(ne)33.336
255 R -.065(ga)-.195 G(ti).065 E -.195(ve)-.325 G 5.145(\)e).195 G 1.895
(rror number)-5.145 F 5.145(,w)-.52 G 1.895(hich will thanks to tw)
-5.145 F 1.895(os-complement be equi)-.13 F -.325(va)-.325 G 1.894
(lent to a).325 F -.195(ve)33.336 270 S 1.081
(ry high \(and therefore in).195 F -.325(va)-.52 G 1.081
(lid\) pointer address.).325 F F2(copy_process)7.581 E F3 1.082
(will return an error)4.332 F 2.346(code if it did not succeed.)33.336
285 R 2.346(Assuming all is well,)8.846 F F2(wake_up_new_task)5.596 E F3
2.346(is called to)5.596 F(place the ne)33.336 300 Q 3.25(wt)-.325 G
(ask on a run queue so that it may be scheduled for e)-3.25 E -.195(xe)
-.195 G(cution.).195 E(The real meat is in the)33.336 321 Q F2
(copy_process)3.25 E F3(function:)3.25 E F1
(static task_t *copy_process\(unsigned long clone_flags,)33.336 333 Q
(unsigned long stack_start,)231.336 345 Q(struct pt_regs *regs,)231.336
357 Q(unsigned long stack_size,)231.336 369 Q
(int __user *parent_tidptr,)231.336 381 Q(int __user *child_tidptr,)
231.336 393 Q(int pid\))231.336 405 Q({)33.336 417 Q(int retval;)81.336
429 Q(struct task_struct *p = NULL;)81.336 441 Q
(/* Some basic sanity checks of the clone flags */)148.536 465 Q(if \(\
\(clone_flags & \(CLONE_NEWNS|CLONE_FS\)\) == \(CLONE_NEWNS|CLONE_FS\)\
\))81.336 477 Q(return ERR_PTR\(-EINVAL\);)129.336 489 Q(if \(\(clone_f\
lags & CLONE_THREAD\) && !\(clone_flags & CLONE_SIGHAND\)\))81.336 501 Q
(return ERR_PTR\(-EINVAL\);)129.336 513 Q
(if \(\(clone_flags & CLONE_SIGHAND\) && !\(clone_flags & CLONE_VM\)\))
81.336 525 Q(return ERR_PTR\(-EINVAL\);)129.336 537 Q(retval = -ENOMEM;)
81.336 549 Q 6(p=d)81.336 561 S(up_task_struct\(current\);)-6 E
(/* dup_task_struct allocates a new task_struct and copies */)148.536
573 Q(/* *current into it.)148.536 585 Q
(It also allocates a new kernel stack */)12 E
(/* and copies the thread_info area from the existing kstack */)148.536
597 Q(/* the thread_info.task and the p->thread_info pointers)148.536
609 Q(*/)24 E(/* are adjusted accordingly for the new addresses)148.536
621 Q(*/)60 E(if \(!p\) goto fork_out;)81.336 633 Q
(/* ... A bunch of stuff elided here to limit the number of processes)
90.936 657 Q(which a user can spawn, etc. */)93.336 669 Q(p->pid = pid;)
90.936 693 Q(p->tgid = p->pid;)81.336 705 Q
(if \(clone_flags & CLONE_THREAD\))81.336 717 Q
(p->tgid = current->tgid;)129.336 729 Q 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 29)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(INIT_LIST_HEAD\(&p->children\);)81.336 117 Q
(INIT_LIST_HEAD\(&p->sibling\);)81.336 129 Q
(clear_tsk_thread_flag\(p, TIF_SIGPENDING\);)81.336 141 Q
(init_sigpending\(&p->pending\);)81.336 153 Q(p->utime = cputime_zero;)
81.336 177 Q(p->stime = cputime_zero;)81.336 189 Q 22.8
(acct_clear_integrals\(p\); /*)90.936 213 R
(zero out per-process accounting)6 E
(fields such as the #system calls, # page faults, etc. */)206.136 225 Q
(/* Perform scheduler related setup. Assign this task to a CPU. */)
75.336 237 Q(sched_fork\(p, clone_flags\);)81.336 249 Q
(// See text next unit)20.4 E
(/* now copy all the process information */)81.336 261 Q
(/* each of these copy_xxx functions will look at CLONE_XXX flags to */)
90.936 273 Q(/* figure out if it is a share or a copy */)90.936 285 Q
(/* the code to clean up after partial failure has been elided */)90.936
297 Q(if \(\(retval = copy_semundo\(clone_flags, p\)\)\))81.336 309 Q
(goto bad_fork_cleanup_audit;)129.336 321 Q
(if \(\(retval = copy_files\(clone_flags, p\)\)\))81.336 333 Q
(goto bad_fork_cleanup_semundo;)129.336 345 Q
(if \(\(retval = copy_fs\(clone_flags, p\)\)\))81.336 357 Q
(goto bad_fork_cleanup_files;)129.336 369 Q
(if \(\(retval = copy_sighand\(clone_flags, p\)\)\))81.336 381 Q
(goto bad_fork_cleanup_fs;)129.336 393 Q
(if \(\(retval = copy_signal\(clone_flags, p\)\)\))81.336 405 Q
(goto bad_fork_cleanup_sighand;)129.336 417 Q
(if \(\(retval = copy_mm\(clone_flags, p\)\)\))81.336 429 Q
(goto bad_fork_cleanup_signal;)129.336 441 Q
(if \(\(retval = copy_namespace\(clone_flags, p\)\)\))81.336 453 Q
(goto bad_fork_cleanup_keys;)129.336 465 Q
(copy_thread\(clone_flags, stack_start, stack_size, p, regs\);)81.336
477 Q(/* Mark new task to send signal on exit, only if this is)90.936
501 Q 6(an)148.536 513 S(ew process, as opposed to a thread */)-6 E(p->\
exit_signal = \(clone_flags & CLONE_THREAD\) ? -1 : \(clone_flags & CSI\
G)81.336 525 Q(NAL\);)33.336 537 Q(p->pdeath_signal = 0;)81.336 549 Q
(p->exit_state = 0;)81.336 561 Q
(if \(clone_flags & \(CLONE_PARENT|CLONE_THREAD\)\))81.336 573 Q
(p->real_parent = current->real_parent;)129.336 585 Q(else)81.336 597 Q
(p->real_parent = current;)129.336 609 Q(p->parent = p->real_parent;)
81.336 621 Q(/* Check to see if any signals came in during fork */)
148.536 633 Q(recalc_signal_pending\(\);)90.936 645 Q
(/* ... Insert this process into the pid, pgid, tgid, etc. lists */)
90.936 657 Q(retval=0;)90.936 669 Q 82.8(total_forks++; /*)90.936 681 R
(How many forks in life of system */)6 E 88.8(nr_threads++; /*)90.936
693 R(How many current threads */)6 E(fork_out:)39.336 705 Q
(if \(retval\) return ERR_PTR\(retval\);)90.936 717 Q(return p;)90.936
729 Q(})33.336 741 Q 0 Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 30)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 468 730 -307.726 480 33.336 427.726 PBEGIN
%%BeginDocument: fork1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: fork1.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 10 23:15:38 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 730 480
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 480 moveto 0 0 lineto 730 0 lineto 730 480 lineto closepath clip newpath
-44.3 470.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 3900 4650 m 5400 4650 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
n 4614 4725 m 4471 4725 l 4471 6675 l
 4614 6675 l gs col0 s gr 
% Polyline
n 4614 6900 m 4471 6900 l 4471 7725 l
 4614 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
4829 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4300 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4257 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 3900 3900 m 5400 3900 l 5400 4650 l 3900 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 4455 m
gs 1 -1 sc ( sys_fork) col0 sh gr
% Polyline
n 3900 3150 m 5400 3150 l 5400 3900 l 3900 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 3705 m
gs 1 -1 sc (do_fork) col0 sh gr
% Polyline
n 9075 4650 m 10575 4650 l 10575 7800 l 9075 7800 l
 cp gs col0 s gr 
% Polyline
n 9789 4725 m 9646 4725 l 9646 6675 l
 9789 6675 l gs col0 s gr 
% Polyline
n 9789 6900 m 9646 6900 l 9646 7725 l
 9789 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
10004 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9289 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9475 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9289 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9432 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Arc
gs  clippath
8964 950 m 9055 871 l 8887 679 l 8990 889 l 8797 758 l cp
eoclip
 [60] 0 sd
n 7125.0 2400.0 2401.2 -141.3 -38.7 arc
gs col0 s gr
 gr
 [] 0 sd
% arrowhead
n 8797 758 m 8990 889 l 8887 679 l 8872 753 l 8797 758 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
11442 1027 m 11528 944 l 11352 759 l 11465 964 l 11266 842 l cp
eoclip
 [60] 0 sd
n 9453.1 2768.8 2702.9 -134.0 -41.6 arc
gs col0 s gr
 gr
 [] 0 sd
% arrowhead
n 11266 842 m 11465 964 l 11352 759 l 11340 833 l 11266 842 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 1200 300 m 2700 300 l 2700 4200 l 1200 4200 l
 cp gs col0 s gr 
% Polyline
n 2250 4950 m 3150 4950 l 3150 6150 l 2250 6150 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 5250 m 3150 5250 l 3150 5700 l 2250 5700 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 1050 6300 m 3000 6300 l 3000 6900 l 1050 6900 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5983 929 m 6033 895 l 5949 769 l 5991 886 l 5899 802 l cp
eoclip
n 3000 6600 m 3450 6600 l 3450 450 l 5700 450 l
 6000 900 l gs col0 s gr gr

% arrowhead
n 5899 802 m 5991 886 l 5949 769 l  col0 s
% Polyline
gs  clippath
3915 3180 m 3915 3120 l 3763 3120 l 3883 3150 l 3763 3180 l cp
eoclip
n 1800 5250 m 1950 5250 l 2100 4500 l 3150 4500 l 3150 3150 l
 3900 3150 l gs col0 s gr gr

% arrowhead
n 3763 3180 m 3883 3150 l 3763 3120 l  col0 s
% Polyline
gs  clippath
1665 1980 m 1665 1920 l 1513 1920 l 1633 1950 l 1513 1980 l cp
eoclip
n 1050 5700 m 750 5700 l 750 1950 l
 1650 1950 l gs col0 s gr gr

% arrowhead
n 1513 1980 m 1633 1950 l 1513 1920 l  col0 s
% Polyline
30.000 slw
n 1155 5100 m 1050 5100 1050 5895 105 arcto 4 {pop} repeat
  1050 6000 1695 6000 105 arcto 4 {pop} repeat
  1800 6000 1800 5205 105 arcto 4 {pop} repeat
  1800 5100 1155 5100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1050 5550 m
 1800 5550 l gs col0 s gr 
% Polyline
gs  clippath
3915 7830 m 3915 7770 l 3763 7770 l 3883 7800 l 3763 7830 l cp
eoclip
n 3000 5400 m 3300 5400 l 3300 7800 l
 3900 7800 l gs col0 s gr gr

% arrowhead
n 3763 7830 m 3883 7800 l 3763 7770 l  col0 s
% Polyline
n 6150 1500 m 7500 1500 l 7500 1800 l 6150 1800 l
 cp gs col0 s gr 
% Polyline
n 6150 1950 m 7500 1950 l 7500 3300 l 6150 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 6150 1050 m 7500 1050 l 7500 4350 l 6150 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5385 7770 m 5385 7830 l 5537 7830 l 5417 7800 l 5537 7770 l cp
eoclip
n 6300 2400 m 5850 2400 l 5850 7800 l
 5400 7800 l gs col0 s gr gr

% arrowhead
n 5537 7770 m 5417 7800 l 5537 7830 l  col0 s
% Polyline
n 3900 1650 m 5400 1650 l 5400 1050 l 3900 1050 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6098 1149 m 6080 1091 l 5935 1136 l 6059 1130 l 5953 1193 l cp
eoclip
n 5100 1425 m
 6075 1125 l gs col0 s gr gr

% arrowhead
n 5953 1193 m 6059 1130 l 5935 1136 l  col0 s
% Polyline
n 11325 1500 m 12675 1500 l 12675 1800 l 11325 1800 l
 cp gs col0 s gr 
% Polyline
n 11325 1950 m 12675 1950 l 12675 3300 l 11325 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 11325 1050 m 12675 1050 l 12675 4350 l 11325 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10560 7770 m 10560 7830 l 10712 7830 l 10592 7800 l 10712 7770 l cp
eoclip
n 11475 2400 m 11025 2400 l 11025 7800 l
 10575 7800 l gs col0 s gr gr

% arrowhead
n 10712 7770 m 10592 7800 l 10712 7830 l  col0 s
% Polyline
15.000 slw
n 9075 1050 m 10575 1050 l 10575 7800 l 9075 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
11273 1149 m 11255 1091 l 11110 1136 l 11234 1130 l 11128 1193 l cp
eoclip
n 10275 1425 m
 11250 1125 l gs col0 s gr gr

% arrowhead
n 11128 1193 m 11234 1130 l 11110 1136 l  col0 s
% Polyline
n 9075 1650 m 10575 1650 l 10575 1050 l 9075 1050 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 3900 1050 m 5400 1050 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
1350 600 m
gs 1 -1 sc (system_call:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1200 m
gs 1 -1 sc (sys_fork) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 0 m
gs 1 -1 sc (Kernel text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2400 4800 m
gs 1 -1 sc (TSS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5400 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5850 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6600 m
gs 1 -1 sc (Per-CPU global var) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6855 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
900 4950 m
gs 1 -1 sc (CPU REGS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2550 5550 m
gs 1 -1 sc (esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1800 m
gs 1 -1 sc (do_fork) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1005 m
gs 1 -1 sc (for task 444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 900 m
gs 1 -1 sc (for task 444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
6750 1650 m
gs 1 -1 sc (444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9225 1005 m
gs 1 -1 sc (for task 555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 600 m
gs 1 -1 sc (new task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 900 m
gs 1 -1 sc (for task 555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
11925 1650 m
gs 1 -1 sc (555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9225 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9825 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9075 750 m
gs 1 -1 sc (new Kernel Stack) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Courier@0 SF(copy_thread)33.336 454.726 Q/F2 13
/Times-Roman@0 SF .718(initializes the brand-ne)3.968 F 3.968(wk)-.325 G
.719(ernel mode stack and task struct, which were)-4.098 F 1.542
(created by)33.336 469.726 R F1(dup_task_struct)4.792 E F2 8.042(.T)C
1.542(he k)-8.042 F 1.542(ernel stack for the child is initialized)-.13
F/F3 13/Times-Italic@0 SF 1.542(as if)4.792 F F2(the)4.792 E .966
(child is in the process of making a system call.)33.336 484.726 R .967
(The re)7.466 F .967(gisters which were stack)-.195 F .967(ed when)-.13
F .252(the parent made the fork/clone system call are copied o)33.336
499.726 R -.195(ve)-.195 G 1.292 -.52(r, b).195 H .251(ut a 0 is pok).26
F .251(ed into the EAX)-.13 F(re)33.336 514.726 Q
(gister slot so that the child will see a 0 return v)-.195 E
(alue from the system call.)-.325 E/F4 10/Courier@0 SF
(int copy_thread\(unsigned long clone_flags, unsigned long esp,)33.336
526.726 Q(struct task_struct * p, struct pt_regs * regs\))81.336 538.726
Q({)33.336 550.726 Q(struct pt_regs * childregs;)81.336 562.726 Q
(struct task_struct *tsk;)81.336 574.726 Q(int err;)81.336 586.726 Q
(/* Copy parent registers into child, but make child see */)148.536
610.726 Q(/* a 0 in EAX \(return value from fork or clone syscall\) */)
148.536 622.726 Q(/* and the proper stack pointer */)148.536 634.726 Q(\
childregs = \(\(struct pt_regs *\) \(THREAD_SIZE + \(unsigned long\) p-\
>thread)81.336 646.726 Q(_info\)\) - 1;)33.336 658.726 Q
(childregs = \(struct pt_regs *\) \(\(unsigned long\) childregs - 8\);)
81.336 670.726 Q(*childregs = *regs;)81.336 682.726 Q
(/* Set the return value from fork/clone syscall in child to 0*/)148.536
694.726 Q(childregs->eax = 0;)81.336 706.726 Q
(/* Set the user mode stack pointer for when child first runs */)148.536
718.726 Q(childregs->esp = esp;)81.336 730.726 Q 0 Cg EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 31)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF
(/* Set the kernel mode stack pointer and stack base pointer */)148.536
117 Q(/* for when child is first scheduled */)148.536 129 Q
(p->thread.esp = \(unsigned long\) childregs;)81.336 141 Q
(p->thread.esp0 = \(unsigned long\) \(childregs+1\);)81.336 153 Q
(/* When child is scheduled, execution will begin */)148.536 165 Q
(/* in the return_from_fork function */)148.536 177 Q
(p->thread.eip = \(unsigned long\) ret_from_fork;)81.336 189 Q
(/* ...Some other stuff simplified and removed here */)90.936 201 Q
(return 0;)90.936 213 Q(})33.336 225 Q/F2 13/Times-Roman@0 SF(Once)
33.336 246 Q/F3 13/Courier@0 SF(copy_process)4.74 E F2(and)4.74 E F3
(do_fork)4.74 E F2(ha)4.74 E 1.88 -.195(ve c)-.26 H 1.49
(ompleted their w).195 F 1.491(ork, the child process is)-.13 F .417
(ready to run and is w)33.336 261 R .417
(aiting on a run queue for its turn to get scheduled.)-.13 F 2.496 -1.04
(We h)6.916 H -2.925 -.26(av e)1.04 H(already)3.926 E 2.164(seen ho)
33.336 276 R 5.414(wa)-.325 G 5.414(ne)-5.414 G 2.165
(xisting process gets scheduled in with)-5.609 F F3(context_switch)5.415
E F2(.)A F3(do_fork)8.665 E F2 1.213(and its helper functions ha)33.336
291 R 1.603 -.195(ve n)-.26 H 1.863 -.325(ow c).195 H 1.213(reated a ne)
.325 F 4.463(wp)-.325 G 1.213(rocess which is a cop)-4.463 F 4.463(yo)
-.13 G 4.463(ft)-4.463 G 1.213(he current)-4.463 F .689(\(parent\) proc\
ess \(plus or minus the options speci\214ed with the CLONE \215ags\) at\
 the e)33.336 306 R(xact)-.195 E .799(moment of returning from)33.336
321 R F3(fork)4.049 E F2(or)4.049 E F3(clone)4.049 E F2 7.299(.T)C .799
(he situation just before the parent returns)-7.299 F(from)33.336 336 Q
F3(do_fork\(\))3.25 E F2(is:)3.25 E 0 0 468 753 -305.785 492 33.336
662.785 PBEGIN
%%BeginDocument: fork2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: fork2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 10 23:15:34 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 753 492
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 492 moveto 0 0 lineto 753 0 lineto 753 492 lineto closepath clip newpath
-21.8 482.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 3900 4650 m 5400 4650 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
n 4614 4725 m 4471 4725 l 4471 6675 l
 4614 6675 l gs col0 s gr 
% Polyline
n 4614 6900 m 4471 6900 l 4471 7725 l
 4614 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
4829 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
4829 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4300 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4114 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
4257 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
n 3900 3900 m 5400 3900 l 5400 4650 l 3900 4650 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 4200 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 4455 m
gs 1 -1 sc ( sys_fork) col0 sh gr
% Polyline
n 3900 3150 m 5400 3150 l 5400 3900 l 3900 3900 l
 cp gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4050 3450 m
gs 1 -1 sc (stack frame) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 3705 m
gs 1 -1 sc (do_fork) col0 sh gr
% Polyline
n 9075 4650 m 10575 4650 l 10575 7800 l 9075 7800 l
 cp gs col0 s gr 
% Polyline
n 9789 4725 m 9646 4725 l 9646 6675 l
 9789 6675 l gs col0 s gr 
% Polyline
n 9789 6900 m 9646 6900 l 9646 7725 l
 9789 7725 l gs col0 s gr 
/Times-Roman-iso ff 150.00 scf sf
10004 4800 m
gs 1 -1 sc (ebx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 4995 m
gs 1 -1 sc (ecx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5190 m
gs 1 -1 sc (edx) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5385 m
gs 1 -1 sc (esi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5580 m
gs 1 -1 sc (edi) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5775 m
gs 1 -1 sc (ebp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 5970 m
gs 1 -1 sc (eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6165 m
gs 1 -1 sc (ds) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6360 m
gs 1 -1 sc (es) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6555 m
gs 1 -1 sc (fs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6750 m
gs 1 -1 sc (orig_eax) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 6945 m
gs 1 -1 sc (eip) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7140 m
gs 1 -1 sc (cs) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7335 m
gs 1 -1 sc (eflags) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7530 m
gs 1 -1 sc (esp) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
10004 7725 m
gs 1 -1 sc (ss) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9289 6150 m
gs 1 -1 sc  90.0 rot (SAVE_ALL) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9475 6000 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9289 7575 m
gs 1 -1 sc  90.0 rot (HW-saved) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
9432 7500 m
gs 1 -1 sc  90.0 rot (registers) col0 sh gr
% Polyline
15.000 slw
n 1200 300 m 2700 300 l 2700 4200 l 1200 4200 l
 cp gs col0 s gr 
% Polyline
n 2250 4950 m 3150 4950 l 3150 6150 l 2250 6150 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 2250 5250 m 3150 5250 l 3150 5700 l 2250 5700 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 1050 6300 m 3000 6300 l 3000 6900 l 1050 6900 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5983 929 m 6033 895 l 5949 769 l 5991 886 l 5899 802 l cp
eoclip
n 3000 6600 m 3450 6600 l 3450 450 l 5700 450 l
 6000 900 l gs col0 s gr gr

% arrowhead
n 5899 802 m 5991 886 l 5949 769 l  col0 s
% Polyline
gs  clippath
3915 3180 m 3915 3120 l 3763 3120 l 3883 3150 l 3763 3180 l cp
eoclip
n 1800 5250 m 1950 5250 l 2100 4500 l 3150 4500 l 3150 3150 l
 3900 3150 l gs col0 s gr gr

% arrowhead
n 3763 3180 m 3883 3150 l 3763 3120 l  col0 s
% Polyline
gs  clippath
1665 1980 m 1665 1920 l 1513 1920 l 1633 1950 l 1513 1980 l cp
eoclip
n 1050 5700 m 750 5700 l 750 1950 l
 1650 1950 l gs col0 s gr gr

% arrowhead
n 1513 1980 m 1633 1950 l 1513 1920 l  col0 s
% Polyline
30.000 slw
n 1155 5100 m 1050 5100 1050 5895 105 arcto 4 {pop} repeat
  1050 6000 1695 6000 105 arcto 4 {pop} repeat
  1800 6000 1800 5205 105 arcto 4 {pop} repeat
  1800 5100 1155 5100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1050 5550 m
 1800 5550 l gs col0 s gr 
% Polyline
gs  clippath
3915 7830 m 3915 7770 l 3763 7770 l 3883 7800 l 3763 7830 l cp
eoclip
n 3000 5400 m 3300 5400 l 3300 7800 l
 3900 7800 l gs col0 s gr gr

% arrowhead
n 3763 7830 m 3883 7800 l 3763 7770 l  col0 s
% Polyline
n 6150 1500 m 7500 1500 l 7500 1800 l 6150 1800 l
 cp gs col0 s gr 
% Polyline
n 6150 1950 m 7500 1950 l 7500 3300 l 6150 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 6150 1050 m 7500 1050 l 7500 4350 l 6150 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5385 7770 m 5385 7830 l 5537 7830 l 5417 7800 l 5537 7770 l cp
eoclip
n 6300 2400 m 5850 2400 l 5850 7800 l
 5400 7800 l gs col0 s gr gr

% arrowhead
n 5537 7770 m 5417 7800 l 5537 7830 l  col0 s
% Polyline
n 3900 1650 m 5400 1650 l 5400 1050 l 3900 1050 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6098 1149 m 6080 1091 l 5935 1136 l 6059 1130 l 5953 1193 l cp
eoclip
n 5100 1425 m
 6075 1125 l gs col0 s gr gr

% arrowhead
n 5953 1193 m 6059 1130 l 5935 1136 l  col0 s
% Polyline
n 11325 1500 m 12675 1500 l 12675 1800 l 11325 1800 l
 cp gs col0 s gr 
% Polyline
n 11325 1950 m 12675 1950 l 12675 3300 l 11325 3300 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 11325 1050 m 12675 1050 l 12675 4350 l 11325 4350 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10560 7770 m 10560 7830 l 10712 7830 l 10592 7800 l 10712 7770 l cp
eoclip
n 11475 2400 m 11025 2400 l 11025 7800 l
 10575 7800 l gs col0 s gr gr

% arrowhead
n 10712 7770 m 10592 7800 l 10712 7830 l  col0 s
% Polyline
15.000 slw
n 9075 1050 m 10575 1050 l 10575 7800 l 9075 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
11273 1149 m 11255 1091 l 11110 1136 l 11234 1130 l 11128 1193 l cp
eoclip
n 10275 1425 m
 11250 1125 l gs col0 s gr gr

% arrowhead
n 11128 1193 m 11234 1130 l 11110 1136 l  col0 s
% Polyline
n 9075 1650 m 10575 1650 l 10575 1050 l 9075 1050 l
 cp gs col0 s gr 
% Polyline
15.000 slw
n 3900 1050 m 5400 1050 l 5400 7800 l 3900 7800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
10391 4571 m 10442 4603 l 10523 4476 l 10434 4561 l 10473 4443 l cp
eoclip
n 11625 2700 m
 10425 4575 l gs col0 s gr gr

% arrowhead
n 10473 4443 m 10434 4561 l 10523 4476 l  col0 s
% Polyline
gs  clippath
1215 3105 m 1215 3045 l 1063 3045 l 1183 3075 l 1063 3105 l cp
eoclip
n 12000 3000 m 12900 3000 l 12900 8025 l 375 8025 l 375 3075 l
 1200 3075 l gs col0 s gr gr

% arrowhead
n 1063 3105 m 1183 3075 l 1063 3045 l  col0 s
% Polyline
gs  clippath
10176 5900 m 10194 5958 l 10339 5912 l 10216 5920 l 10321 5855 l cp
eoclip
n 11625 5475 m
 10200 5925 l gs col0 s gr gr

% arrowhead
n 10321 5855 m 10216 5920 l 10339 5912 l  col0 s
/Times-Roman-iso ff 200.00 scf sf
1350 600 m
gs 1 -1 sc (system_call:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1200 m
gs 1 -1 sc (sys_fork) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 0 m
gs 1 -1 sc (Kernel text) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2400 4800 m
gs 1 -1 sc (TSS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5400 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 5850 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6600 m
gs 1 -1 sc (Per-CPU global var) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1200 6855 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
900 4950 m
gs 1 -1 sc (CPU REGS) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
2550 5550 m
gs 1 -1 sc (esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1350 1800 m
gs 1 -1 sc (do_fork) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 750 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1005 m
gs 1 -1 sc (for task 444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 600 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 900 m
gs 1 -1 sc (for task 444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6450 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
6300 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
6750 1650 m
gs 1 -1 sc (444) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4050 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4650 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9225 1005 m
gs 1 -1 sc (for task 555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 600 m
gs 1 -1 sc (new task_struct) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 900 m
gs 1 -1 sc (for task 555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 1650 m
gs 1 -1 sc (pid:) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 3000 m
gs 1 -1 sc (.eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 2700 m
gs 1 -1 sc (.esp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11625 2400 m
gs 1 -1 sc (.esp0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
11475 2100 m
gs 1 -1 sc (thread) col0 sh gr
/Times-Roman-iso ff 166.67 scf sf
11925 1650 m
gs 1 -1 sc (555) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9225 1275 m
gs 1 -1 sc (thread_info) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9825 1500 m
gs 1 -1 sc (.task) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
9075 750 m
gs 1 -1 sc (new Kernel Stack) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
1275 3075 m
gs 1 -1 sc (ret_from_fork) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
11700 5475 m
gs 1 -1 sc (0) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND(No)33.336 689.785 Q 3.654 -.845(w, w)-.325 H 1.964
(hen the child process e).845 F -.195(ve)-.325 G 1.964
(ntually gets scheduled,).195 F F3(context_switch)5.215 E F2 1.965
(will \214nd)5.215 F F3(ret_from_fork)33.336 704.785 Q F2 .462
(as the ne)3.712 F 3.712(wp)-.325 G .461
(rogram counter location, rather than the usual address of)-3.712 F
4.282(al)33.336 719.785 S 1.032(ocal label "LABEL1" within)-4.282 F F3
(context_switch)4.282 E F2 7.532(.T)C 1.033
(his is required since the child is)-7.532 F .213
(not being re-scheduled after ha)33.336 734.785 R .213
(ving been switched-out, b)-.26 F .213
(ut is being scheduled for the \214rst)-.26 F 0 Cg EP
%%Page: 32 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 32)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 4.727(time. The)33.336 120 R 1.478
(necessary stack frame for being in)4.727 F/F2 13/Courier@0 SF
(context_switch\(\))4.728 E F1 1.478(does not e)4.728 F 1.478(xist in)
-.195 F 1.403(the child.)33.336 135 R 1.403
(Indeed, the only stack frame is the set of usual re)7.903 F 1.402
(gisters sa)-.195 F -.195(ve)-.26 G 4.652(do).195 G 4.652(ne)-4.652 G
1.402(ntry to a)-4.652 F(system call.)33.336 150 Q
(Therefore, the child comes to life at the follo)6.5 E
(wing assembly language code:)-.325 E/F3 10/Courier@0 SF(ret_from_fork:)
39.336 162 Q 21.6(pushl %eax)90.936 174 R
(#contains prev task_struct ptr)148.8 E 27.6(call schedule_tail)90.936
186 R 98.4(GET_THREAD_INFO\(%ebp\) #mask)90.936 198 R
(esp to get thread_info to ebp)6 E(popl %eax)90.936 210 Q
(jmp syscall_exit)90.936 222 Q(#resume exit from system call)76.8 E F2
(schedule_tail\(\))33.336 243 Q F1 .069
(performs some cleanup actions related to the scheduler)3.319 F 6.57(.E)
-.715 G -.195(xe)-6.57 G(cution).195 E .944(then continues at)33.336 258
R F2(syscall_exit)4.194 E F1 .944(\(see pre)4.194 F .943
(vious unit for listing\), with the re)-.325 F .943(gisters and)-.195 F
2.014(stack looking lik)33.336 273 R 5.264(ea)-.13 G 5.264(no)-5.264 G
2.014(rdinary return from system call.)-5.264 F 2.014
(Control returns to user mode,)8.514 F(with the return v)33.336 288 Q
(alue of the system call being 0.)-.325 E/F4 13/Times-Bold@0 SF(Multipr)
181.692 318 Q(ocessor Considerations)-.234 E F1 2.412
(On a multi-processor system, each processor is scheduled indi)33.336
354 R(vidually)-.325 E 8.912(.T)-.845 G 2.412(here can be)-8.912 F 4.594
(multiple k)33.336 369 R 4.595(ernel control paths acti)-.13 F 4.985
-.195(ve a)-.325 H 7.845(tt).195 G 4.595
(he same time, meaning increased locking)-7.845 F(comple)33.336 384 Q
(xity)-.195 E 6.933(.T)-.845 G(he)-6.933 E F2(current)3.683 E F1 .432
(global v)3.683 F .432(ariable is maintained as a per)-.325 F .432
(-CPU v)-.26 F 3.682(ariable. E.g.)-.325 F(on)3.682 E 3.25(a4p)33.336
399 S(rocessor system, there are 4 "current" tasks.)-3.25 E F4(Pr)
210.461 429 Q(ocess T)-.234 E(ermination)-1.196 E F1 4.876(Ap)33.336 465
S 1.626(rocess terminates either when it has recei)-4.876 F -.195(ve)
-.325 G 4.877(daf).195 G 1.627(atal signal or it e)-5.007 F 1.627
(xplicitly calls the)-.195 F F2(exit)33.336 480 Q F1 .5(system call.)
3.75 F .499(Let us look at the e)7 F .499
(xit system call, ignoring some of the comple)-.195 F(xities)-.195 E
.216(introduced by threads and thread groups.)33.336 495 R F2(sys_exit)
6.717 E F1 .217(is a simple wrapper for)3.467 F F2(do_exit)3.467 E F1(.)
A(The latter can also be called during signal deli)33.336 510 Q -.195
(ve)-.325 G(ry \(see ne).195 E(xt unit\).)-.195 E F3
(asmlinkage long sys_exit\(int error_code\))33.336 522 Q({)33.336 534 Q
(do_exit\(\(error_code&0xff\)<<8\);)81.336 546 Q(})33.336 558 Q
(void do_exit\(long code\))33.336 594 Q({)33.336 606 Q
(struct task_struct *tsk = current;)81.336 618 Q(int group_dead;)81.336
630 Q(/* These are "can't happens" */)148.536 654 Q
(if \(unlikely\(in_interrupt\(\)\)\))81.336 666 Q
(panic\("Aiee, killing interrupt handler!"\);)129.336 678 Q
(if \(unlikely\(!tsk->pid\)\))81.336 690 Q
(panic\("Attempted to kill the idle task!"\);)129.336 702 Q
(if \(unlikely\(tsk->pid == 1\)\))81.336 714 Q
(panic\("Attempted to kill init!"\);)129.336 726 Q 50.4
(tracehook_report_exit\(&code\); /*)90.936 738 R(Hook for strace */)6 E
0 Cg EP
%%Page: 33 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 9/pg 33)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(tsk->flags |= PF_EXITING;)81.336 117 Q 98.4
(exit_mm\(tsk\); /*)81.336 129 R(Release virtual address space */)6 E
1.2(exit_signals\(tsk\); /*)90.936 141 R
(Cleanup/reassign pending signals */)6 E 22.8(exit_files\(tsk\); /*)
81.336 153 R(Close open files */)6 E 98.4(exit_fs\(tsk\); /*)81.336 165
R(Leave cwd, etc. */)6 E 92.4(exit_thread\(\); /*)81.336 177 R
(Misc. cleanup */)6 E(tsk->exit_code = code;)90.936 189 Q 7.2
(exit_notify\(tsk\); /*)90.936 201 R(Send signal to/wake-up parent */)6
E(tsk->state= TASK_DEAD;)81.336 213 Q(schedule\(\);)81.336 225 Q 82.8
(BUG\(\); /*)81.336 237 R(If control reaches here we are in trouble! */)
6 E(})33.336 249 Q/F2 13/Times-Roman@0 SF .636
(Each of the helper routines can ha)33.336 270 R 1.026 -.195(ve f)-.26 H
.636(urther consequences.).195 F .635(E.g. when)7.136 F/F3 13/Courier@0
SF(__exit_files)3.885 E F2 1.06(closes each \214le descriptor)33.336 285
R 4.311(,i)-.52 G 4.311(ft)-4.311 G 1.061
(hat drops the references to the)-4.311 F F3 1.061(struct file)4.311 F
F2 1.061(to 0, then)4.311 F 1.229(that structure is de-allocated.)33.336
300 R 1.229(If in turn there are no other)7.729 F F3 1.228(struct file)
4.478 F F2 1.228(instances in)4.478 F .838
(the system pointing to the in-core inode, then the inode is closed.)
33.336 315 R .839(If the inode had been)7.339 F(unlink)33.336 330 Q .879
(ed while open, its resources are freed, etc.)-.13 F .879
(After sending SIGCHLD to the parent)7.379 F(process,)33.336 345 Q F3
(exit_notify)8.645 E F2 5.395(places the e)8.645 F 5.395
(xiting process in the)-.195 F F3(EXIT_ZOMBIE)8.645 E F2(state.)8.645 E
.635(Although most of the resources ha)33.336 360 R 1.025 -.195(ve b)
-.26 H .635(een released, the).195 F F3 .635(struct task)3.885 F F2 .635
(remains to hold)3.885 F .909(the e)33.336 375 R .909
(xit code and other statistics of the process')-.195 F 4.159(sl)-.715 G
.909(ife, such as cpu time accumulated, for)-4.159 F .615
(collection by a parent with one of the man)33.336 390 R 3.864(yv)-.195
G .614(ariants of the)-4.189 F F3(wait)3.864 E F2 .614(system call.)
3.864 F .614(After this)7.114 F 3.46(is done, the)33.336 405 R F3 3.461
(struct task)6.71 F F2 3.461
(is \214nally released and the process id is a)6.711 F -.325(va)-.26 G
3.461(ilable for).325 F(rec)33.336 420 Q 4.089(ycling. The)-.195 F .839
(zombie task is ne)4.089 F -.195(ve)-.325 G 4.089(rs).195 G .839
(cheduled, because nothing puts it onto a scheduler)-4.089 F(run queue.)
33.336 435 Q(If someho)6.5 E 3.25(wt)-.325 G
(he last line is reached, it is e)-3.25 E(vidence of a k)-.325 E
(ernel b)-.13 E(ug!)-.26 E 0 Cg EP
%%Trailer
end
%%EOF
