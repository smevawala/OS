%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Fri Oct  4 01:26:19 2013
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file ancestry.eps
%%+ file waitstat.eps
%%+ file filetables.eps
%%+ file maps.eps
%%+ procset grops 1.19 1
%%Pages: 16
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 60 Q
(Unit 3/pg 1)55.998 E(\2512013 Jef)126.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF(The UNIX Pr)215.823 120 Q(ocess)-.234 E/F2 13
/Times-Roman@0 SF 2.123(The UNIX process is a)33.336 150 R F1 2.123
(virtual computer)5.373 F F2 5.373(,t)C 2.122
(hat is to say the combination of a virtual)-5.373 F .083
(address space and a virtual processor \(or task\).)33.336 165 R .084
(The k)6.584 F .084(ernel pro)-.13 F .084(vides system calls to create)
-.195 F(ne)33.336 180 Q 4.041(wp)-.325 G .791(rocesses, to destro)-4.041
F 4.041(yp)-.13 G .791
(rocesses, and to change the program which is running within)-4.041 F
2.142(the process.)33.336 195 R 2.142
(The purpose of this unit is to mak)8.642 F 5.392(ea)-.13 G 5.392(ni)
-5.392 G 2.143(ntroductory e)-5.392 F 2.143(xploration of these)-.195 F
(mechanisms.)33.336 210 Q 2.381(Processes are identi\214ed by an inte)
33.336 240 R(ger)-.195 E F1(Pr)5.631 E 2.381(ocess ID \(pid\))-.234 F F2
8.881(.A)C 2.381(ll processes ha)-8.881 F 2.771 -.195(ve a p)-.26 H
(arent).195 E .923(which caused their creation, and thus the collection\
 of processes at an)33.336 255 R 4.173(yi)-.195 G .923(nstant forms an)
-4.173 F .83(ancestry tree.)33.336 270 R .829
(The pid of the current running process can be retrie)7.33 F -.195(ve)
-.325 G 4.079(dw).195 G .829(ith the)-4.079 F/F3 13/Courier@0 SF(getpid)
4.079 E F2(system call, and the)33.336 285 Q F3(getppid)3.25 E F2
(system call returns the parent')3.25 E 3.25(sp)-.715 G(rocess id.)-3.25
E 1.233(Process #1 is al)33.336 315 R -.13(wa)-.13 G 1.233
(ys at the root of the tree, and is al).13 F -.13(wa)-.13 G 1.234
(ys running a specialized system).13 F .475(utility program called)
33.336 330 R F3(init)3.724 E F2(.)A F3(init)6.974 E F2 .474
(is started by the k)3.724 F .474(ernel after bootstrap, and it in turn)
-.13 F(spa)33.336 345 Q 4.32(wns of)-.195 F 7.57(fa)-.325 G 4.321
(dditional processes which pro)-7.57 F 4.321
(vide services and user interf)-.195 F 4.321(aces to the)-.13 F
(computer)33.336 360 Q(.)-.715 E F1(Pr)230.812 390 Q(ocess State)-.234 E
F2 .894(The k)33.336 420 R .894
(ernel maintains information about each process in k)-.13 F .894
(ernel memory)-.13 F 7.393(.L)-.845 G .893(ater we')-7.393 F .893
(ll see)-.13 F 1.834(the data structures used.)33.336 435 R(Per)8.334 E
1.834(-process information includes the userid \(uid\) and gid for)-.26
F 2.34(access control purposes, the pid and ppid, the table of open \
\214le descriptors, resource)33.336 450 R(usage counters \(such as accu\
mulated user/sys mode cpu time\), and a host of other data.)33.336 465 Q
F1(The V)158.402 495 Q(irtual Addr)-.481 E(ess Space of a Pr)-.234 E
(ocess)-.234 E F2 .83(All UNIX processes ha)33.336 525 R 1.22 -.195
(ve a v)-.26 H .83(irtual address space which consists of a number of)
.195 F F1 -.234(re)4.081 G(gions).234 E F2(aka)33.336 540 Q F1(segments)
3.959 E F2(\(ho)3.959 E(we)-.325 E -.195(ve)-.325 G 3.959(rt).195 G .709
(he term se)-3.959 F .708(gment should not be confused with hardw)-.195
F .708(are address)-.13 F(se)33.336 555 Q .448
(gmentation as practiced on the x86 f)-.195 F .448
(amily of processors\).)-.13 F -.195(Fo)6.948 G 3.698(rag).195 G -2.795
-.325(iv e)-3.698 H 3.698(nU).325 G .448(NIX operating)-3.698 F .855
(system v)33.336 570 R .854(ariant and processor type, there is a typic\
al virtual memory layout of a process.)-.325 F .154
(Recall that virtual addresses are meaningful within a gi)33.336 585 R
-.195(ve)-.325 G 3.404(np).195 G .154(rocess only)-3.404 F 6.654(.T)
-.845 G .155(hus there is no)-6.654 F
(con\215ict when the same virtual addresses are used in dif)33.336 600 Q
(ferent processes.)-.325 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 2)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E 0 0 468 647 -390.603 540 33.336 510.603 PBEGIN
%%BeginDocument: maps.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: maps.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Oct  4 01:22:18 2013
%%For: hak@lex ()
%%BoundingBox: 0 0 647 540
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 540 moveto 0 0 lineto 647 0 lineto 647 540 lineto closepath clip newpath
-70.0 577.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5760 1200 m 9360 1200 l 9360 9600 l 5760 9600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 384.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5760 1920 m 9360 1920 l 9360 2880 l 5760 2880 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 3840 m 9360 3840 l 9360 4680 l 5760 4680 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 4680 m 9360 4680 l 9360 5400 l 5760 5400 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 5400 m 9360 5400 l 9360 6600 l 5760 6600 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5760 7800 m 9360 7800 l 9360 9120 l 5760 9120 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
7530 6945 m 7350 6945 l 7350 7277 l 7440 7007 l 7530 7277 l cp
eoclip
n 7440 7800 m
 7440 6960 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7530 7277 m 7440 7007 l 7350 7277 l 7440 7367 l 7530 7277 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7830 7215 m 8010 7215 l 8010 6883 l 7920 7153 l 7830 6883 l cp
eoclip
n 7920 6600 m
 7920 7200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7830 6883 m 7920 7153 l 8010 6883 l 7920 6793 l 7830 6883 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1200 1200 m 3600 1200 l 3600 5760 l 1200 5760 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 4440 m 3600 4440 l 3600 5520 l 1200 5520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 3000 m 3600 3000 l 3600 4200 l 1200 4200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1200 1200 m 3600 1200 l 3600 2520 l 1200 2520 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6166 2478 m 6101 2310 l 5691 2471 l 6060 2424 l 5757 2638 l cp
eoclip
n 3360 3480 m
 6120 2400 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5757 2638 m 6060 2424 l 5691 2471 l 5757 2638 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6156 4283 m 6112 4109 l 5685 4216 l 6057 4216 l 5729 4390 l cp
eoclip
n 3240 4920 m
 6120 4200 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5729 4390 m 6057 4216 l 5685 4216 l 5729 4390 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8415 2295 m 8366 2330 l 8457 2452 l 8410 2338 l 8505 2416 l cp
eoclip
n 10650 5325 m
 8400 2325 l gs col0 s gr gr

% arrowhead
n 8505 2416 m 8410 2338 l 8457 2452 l  col0 s
% Polyline
gs  clippath
8593 8089 m 8635 8131 l 8743 8024 l 8637 8088 l 8700 7981 l cp
eoclip
n 10575 6150 m
 8625 8100 l gs col0 s gr gr

% arrowhead
n 8700 7981 m 8637 8088 l 8743 8024 l  col0 s
% Polyline
15.000 slw
n 10500 3825 m 11925 3825 l 11925 6375 l 10500 6375 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 10500 4275 m
 11925 4275 l gs col0 s gr 
% Polyline
n 10500 4725 m
 11925 4725 l gs col0 s gr 
% Polyline
n 10500 5550 m
 11925 5550 l gs col0 s gr 
% Polyline
n 10500 5925 m
 11925 5925 l gs col0 s gr 
% Polyline
n 10500 5175 m
 11925 5175 l gs col0 s gr 
% Polyline
gs  clippath
8593 7789 m 8635 7831 l 8743 7724 l 8637 7788 l 8700 7681 l cp
eoclip
n 10650 5775 m
 8625 7800 l gs col0 s gr gr

% arrowhead
n 8700 7681 m 8637 7788 l 8743 7724 l  col0 s
/Times-Roman-iso ff 266.67 scf sf
7320 2520 m
gs 1 -1 sc (text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 4320 m
gs 1 -1 sc (data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 5160 m
gs 1 -1 sc (bss) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 6120 m
gs 1 -1 sc (heap) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
7320 8520 m
gs 1 -1 sc (stack) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5640 1200 m
gs 1 -1 sc (00000000) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5640 9600 m
gs 1 -1 sc (FFFFFFFF) dup sw pop neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7320 840 m
gs 1 -1 sc (Run-Time Memory Image) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 3600 m
gs 1 -1 sc (.text) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 5040 m
gs 1 -1 sc (.data) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1440 2370 m
gs 1 -1 sc (exec_start_addr) col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
2280 1560 m
gs 1 -1 sc (header:) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
2640 840 m
gs 1 -1 sc (a.out file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4125 m
gs 1 -1 sc (%eax) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4575 m
gs 1 -1 sc (%ebx) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 6225 m
gs 1 -1 sc (%ebp) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10950 4950 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 5400 m
gs 1 -1 sc (%eip) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
10875 5850 m
gs 1 -1 sc (%esp) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
11175 3600 m
gs 1 -1 sc (Processor) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
11175 3225 m
gs 1 -1 sc (Virtual) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1275 1800 m
gs 1 -1 sc (text_start,data_start) col0 sh gr
/Times-Roman-iso ff 266.67 scf sf
1350 2100 m
gs 1 -1 sc (bss_start,bss_size) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%EndDocument
end PEND/F1 13/Times-Roman@0 SF -.195(Fo)33.336 552.603 S 3.697(rt).195
G .447(he purposes of simplicity)-3.697 F 3.697(,w)-.845 G 3.697(ew)
-3.697 G .447(ill assume a 32-bit architecture, and therefore virtual)
-3.697 F .669(address space ranges from 0 to 0xFFFFFFFF)33.336 567.603 R
7.169(.N)-1.04 G .67(ot all of this address space is populated.)-7.169 F
-.455(Tr)33.336 582.603 S(aditionally).455 E 3.25(,a)-.845 G
(ll UNIX systems use 4 re)-3.25 E(gions: te)-.195 E
(xt, data, bss and stack.)-.195 E 5.751<8354>33.336 597.603 S(he)-5.751
E/F2 13/Courier@0 SF(text)5.751 E F1(re)5.751 E 2.501(gion is the e)
-.195 F -.195(xe)-.195 G 2.501(cutable code of the program.).195 F 2.5
(Other read-only data are)9 F 1.126(sometimes placed in this re)33.336
612.603 R 1.126(gion, such as string literals in the C language.)-.195 F
1.127(The program)7.627 F .19(counter re)33.336 627.603 R .19(gister \(\
%eip on X86-32 architecture\) will generally be pointing into this re)
-.195 F(gion.)-.195 E 3.25<8354>33.336 642.603 S(he)-3.25 E F2(data)3.25
E F1(re)3.25 E(gion contains initialized global v)-.195 E(ariables.)
-.325 E 5.588<8354>33.336 657.603 S(he)-5.588 E F2(bss)5.588 E F1(re)
5.589 E 2.339(gion contains uninitialized globals.)-.195 F 2.339
(Lacking an e)8.839 F 2.339(xplicit initializer)-.195 F 5.589(,t)-.52 G
(hese)-5.589 E -.325(va)33.336 672.603 S 2.946
(riables are implicitly set to 0 when the program starts.).325 F 2.946
(According to the original)9.446 F 1.856(authors of UNIX, "bss" w)33.336
687.603 R 1.857
(as the name of an assembly-language pseudo-opcode "block)-.13 F .149
(started by symbol", and w)33.336 702.603 R .148
(as used to de\214ne an assembly symbol representing a v)-.13 F .148
(ariable or)-.325 F 1.86(array of \214x)33.336 717.603 R 1.861
(ed size without an initializer)-.195 F 8.361(.T)-.715 G 1.861
(he bss re)-8.361 F 1.861(gion is gro)-.195 F 1.861
(wn by requesting more)-.325 F 2.557(memory from the k)33.336 732.603 R
2.556(ernel, and this dynamically-allocated memory is often called "the)
-.13 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 3)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF(heap".)33.336 120 Q 7.224<8354>33.336 135 S(he)
-7.224 E/F2 13/Courier@0 SF(stack)7.224 E F1(re)7.224 E 3.974
(gion is the function call stack of the running program.)-.195 F
(Function)10.474 E(ar)33.336 150 Q .357
(guments and return addresses are pushed and popped on this stack.)-.234
F 3.606(Ad)6.856 G(if)-3.606 E .356(ferent stack is)-.325 F 1.421
(used when the process is running in k)33.336 165 R 1.422
(ernel mode, ho)-.13 F(we)-.325 E -.195(ve)-.325 G 4.672(rt).195 G 1.422
(hat discussion will ha)-4.672 F 1.812 -.195(ve t)-.26 H(o).195 E -.13
(wa)33.336 180 S .027(it until a subsequent unit.).13 F .027
(The %esp and %ebp re)6.527 F .027
(gisters on X86-32 are pointing within)-.195 F(the stack re)33.336 195 Q
(gion.)-.195 E 3.191(There are additional memory re)33.336 225 R 3.191
(gions which can be created as well, such as shared)-.195 F .548
(libraries, and memory-mapped \214les.)33.336 240 R .548
(In Unit #5, we will e)7.048 F .548(xplore the properties of virtual)
-.195 F(memory in much greater detail.)33.336 255 Q/F3 13/Times-Bold@0
SF(Installing a new pr)169.777 285 Q(ogram with exec)-.234 E F1(The)
33.336 315 Q F2(exec)4.61 E F1 1.36
(system call replaces the currently running program with a ne)4.61 F
4.611(wo)-.325 G 4.611(ne. It)-4.611 F(does)4.611 E .362
(not change the process ID, b)33.336 330 R .361
(ut it does conceptually delete the entire virtual address space)-.26 F
.299(of the process and replace it with a brand ne)33.336 345 R 3.549
(wo)-.325 G .299(ne, into which the ne)-3.549 F 3.549(wp)-.325 G .299
(rogram is loaded)-3.549 F(and e)33.336 360 Q -.195(xe)-.195 G(cuted.)
.195 E -1.04(We)33.336 390 S -.13('l)1.04 G 4.992(lr).13 G -.325(ev)
-4.992 G(ie).325 E 4.992(wt)-.325 G 1.741(he e)-4.992 F -.195(xe)-.195 G
1.741(c\(2\) system call v).195 F 1.741(ery shortly)-.195 F 8.241(.I)
-.845 G 4.991(no)-8.241 G 1.741(rder to load and e)-4.991 F -.195(xe)
-.195 G 1.741(cute a ne).195 F(w)-.325 E(program into an e)33.336 405 Q
(xisting process, the UNIX k)-.195 E(ernel most be gi)-.13 E -.195(ve)
-.325 G 3.25(nt).195 G(he follo)-3.25 E(wing:)-.325 E 3.25<8354>33.336
420 S(he pathname of the e)-3.25 E -.195(xe)-.195 G(cutable \214le).195
E 3.25(\203Al)33.336 435 S(ist of ar)-3.25 E(guments \(the f)-.234 E
(amiliar C-style ar)-.13 E(gv[] array\))-.234 E 3.25(\203Al)33.336 450 S
(ist of strings kno)-3.25 E(wn as the)-.325 E F3(en)3.25 E(vir)-.52 E
(onment)-.234 E F1(which will be discussed belo)3.25 E -.845(w.)-.325 G
<83>33.336 480 Q/F4 13/Times-Italic@0 SF(Conceptually)4.274 E F1 4.274
(,t)C 1.024(he e)-4.274 F -.195(xe)-.195 G 4.274(cs).195 G 1.024
(ystem call \214rst discards the entire virtual address space of the)
-4.274 F .565(process as it currently e)33.336 495 R 3.815(xists. Ag)
-.195 F .564(ain, conceptually)-.065 F 3.814(,t)-.845 G .564(he k)-3.814
F .564(ernel loads the e)-.13 F -.195(xe)-.195 G .564(cutable image).195
F 5.802(into \(virtual\) memory be)33.336 510 R 5.802
(ginning at some speci\214c absolute virtual address.)-.195 F(The)12.302
E -.195(exe)33.336 525 S(cutable \214le, or).195 E F2(a.out)3.25 E F1
3.25(,c)C(ontains:)-3.25 E 3.25<8354>33.336 540 S
(he loading virtual address and size of the te)-3.25 E(xt and data re)
-.195 E(gions.)-.195 E 3.25<8354>33.336 555 S
(he virtual address and initial size of the bss re)-3.25 E(gion.)-.195 E
3.25<8354>33.336 570 S
(he entrypoint \(virtual address of \214rst opcode\) of the program)
-3.25 E 4.215(The k)33.336 600 R 4.215(ernel creates the four basic re)
-.13 F 4.215(gions \(te)-.195 F 4.215
(xt, data, bss, stack\) according to the)-.195 F .805
(information in the)33.336 615 R F2(a.out)4.055 E F1 4.055(\214le. The)
4.055 F(te)4.055 E .805(xt and data re)-.195 F .805
(gions are initialized by loading their)-.195 F 1.69(image from the)
33.336 630 R F2(a.out)4.94 E F1 8.19(.T)C 1.69(he bss re)-8.19 F 1.69
(gion is initialized as all 0 bytes \(meaning that an)-.195 F(y)-.195 E
1.55(global v)33.336 645 R 1.55(ariables lacking an e)-.325 F 1.55
(xplicit initializer are implicitly initialized to 0\).)-.195 F 1.551
(An initial)8.051 F .567(stack re)33.336 660 R .567
(gion is created \(we will see later that it gro)-.195 F .566
(ws on demand\) and a small portion of)-.325 F .749(the stack, at the v)
33.336 675 R .749(ery highest address, is typically used to pass the en)
-.195 F .75(vironment v)-.52 F(ariables)-.325 E .251(and ar)33.336 690 R
.251(gument strings.)-.234 F .251
(The stack pointer and frame pointer re)6.751 F .25
(gisters are set to point to the)-.195 F 1.203
(correct place within the stack.)33.336 705 R 1.203(The k)7.703 F 1.204
(ernel establishes a stack frame as if the entrypoint)-.13 F
(function had been called with)33.336 720 Q F2
(\(int argc, char *argv[], char *envp[]\))3.25 E F1(.)A 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 4)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF 1.85(After the memory re)33.336 120 R 1.849
(gions are created and initialized, e)-.195 F -.195(xe)-.195 G 1.849
(cution of the program be).195 F(gins)-.195 E .752(when the k)33.336 135
R .752(ernel sets the program counter re)-.13 F .752
(gister to the start address which is contained)-.195 F
(in the a.out \214le, and then releases the virtual processor to be)
33.336 150 Q(gin e)-.195 E -.195(xe)-.195 G(cuting instructions.).195 E
1.421(Although the traditional vie)33.336 180 R 4.671(wi)-.325 G 4.671
(st)-4.671 G 1.421(hat e)-4.671 F -.195(xe)-.195 G 1.42
(cution of a C or C++ program be).195 F 1.42(gins with the)-.195 F 1.495
(main\(\) function, in f)33.336 195 R 1.495
(act there are numerous hidden startup routines which e)-.13 F -.195(xe)
-.195 G 1.495(cute \214rst.).195 F 1.833(These are pro)33.336 210 R
1.833(vided by the standard library to initialize v)-.195 F 1.833
(arious modules of the library)-.325 F(,)-.845 E
(such as the stdio subsystem.)33.336 225 Q .636(During e)33.336 255 R
-.195(xe)-.195 G .636(c, some attrib).195 F .636
(utes of the process are retained for the ne)-.26 F .636
(xt program, and others)-.195 F 1.613(are reset.)33.336 270 R 1.613
(Of primary importance to this discussion is the f)8.113 F 1.613
(act that the virtual memory)-.13 F 2.533(space is reset to a fresh sta\
te for the incoming program, while the set of open \214les,)33.336 285 R
(process id, parent process id, uid, and gid are retained across the e)
33.336 300 Q -.195(xe)-.195 G 3.25(cb).195 G(oundary)-3.25 E(.)-.845 E
/F2 13/Times-Bold@0 SF(Exec system call)222.206 330 Q F1(The)33.336 360
Q/F3 13/Courier@0 SF(exec)5.674 E F1 2.424(system call replaces the cur\
rently running program with another program.)5.674 F 2.84
(There are actually se)33.336 375 R -.195(ve)-.325 G 2.84(ral v).195 F
2.84(ariants of the)-.325 F F3(exec)6.09 E F1 2.84
(call, and under the Linux operating)6.09 F 2.088(system, most are actu\
ally C library wrappers for the underlying system call, which is)33.336
390 R F3(execve)33.336 405 Q F1(.)A/F4 12/Courier@0 SF
(int execve \(char)40.536 420 Q(*path, char *argv [],char *envp[]\);)
14.4 E(int execv \(char *path, char *argv[]\);)40.536 435 Q
(int execvp \(char *file, char *argv[]\);)40.536 450 Q
(int execl \(char *path, char *arg, ...\);)40.536 465 Q
(int execlp \(char *file, char *arg, ...\);)40.536 480 Q
(int execle \(char *path, char *arg , ...,char * envp[]\);)40.536 495 Q
F1 .028(The ')33.336 516 R .028(l' v)-.13 F .028(ariants accept the ar)
-.325 F .028(gv v)-.234 F .028(ector of the ne)-.195 F 3.279(wp)-.325 G
.029(rogram in terms of a v)-3.279 F .029(ariable ar)-.325 F(gument)
-.234 E .38(list, terminated by NULL.)33.336 531 R .38(The ')6.88 F .38
(v' v)-.65 F .38(ariants, on the other hand, tak)-.325 F 3.629(eav)-.13
G(ector)-3.824 E 6.879(.A)-.715 G .379(lthough it)-6.879 F 2.176(is con)
33.336 546 R -.195(ve)-.52 G 2.176(ntion that).195 F F3(argv[0])5.426 E
F1 2.177(is the name of the program being in)5.426 F -.26(vo)-.52 G -.13
(ke).26 G 2.177(d, it is entirely).13 F
(possible for the caller to "lie" to the ne)33.336 561 Q
(xt program about)-.195 E F3(argv[0])3.25 E F1(!)A .96(The \214rst ar)
33.336 582 R .96(gument to an)-.234 F 4.21(ye)-.195 G -.195(xe)-4.405 G
4.21(cc).195 G .959(all is the name of the program to e)-4.21 F -.195
(xe)-.195 G 4.209(cute. The).195 F -.325(va)4.209 G(riants).325 E .799
(without 'p' require a speci\214c pathname \(e.g. "/bin/ls"\).)33.336
597 R .799(The 'p' v)7.299 F .799(ariants will also accept)-.325 F 1.48
(an unquali\214ed name \("ls"\) and will search the components of the e\
n)33.336 612 R 1.479(vironment v)-.52 F(ariable)-.325 E F3(PATH)33.336
627 Q F1 1.584(until an e)4.834 F -.195(xe)-.195 G 1.584(cutable \214le\
 with that name is found \(this action is performed by the).195 F
(standard C library)33.336 642 Q 3.25(,n)-.845 G(ot the k)-3.25 E
(ernel\).)-.13 E .799(The in)33.336 663 R -.26(vo)-.52 G .799
(king user must ha).26 F 1.189 -.195(ve exe)-.26 H .799
(cute permission for the e).195 F -.195(xe)-.195 G .799(cutable \214le.)
.195 F .799(This means not)7.299 F 2.922(only that the \214le has e)
33.336 678 R -.195(xe)-.195 G 2.922(cute permission set for the user)
.195 F 6.173(,b)-.52 G 2.923(ut also that all directory)-6.433 F .766
(components in the path to that \214le are tra)33.336 693 R -.195(ve)
-.26 G .766(rsable \(e).195 F -.195(xe)-.195 G .766
(cute permission is granted\).).195 F(Read)7.266 E(permission on the e)
33.336 708 Q -.195(xe)-.195 G
(cutable \214le \(or intermediate directories\) is not required for e)
.195 E -.195(xe)-.195 G(c.).195 E 2.496(If e)33.336 729 R -.195(xe)-.195
G 5.746(ci).195 G 5.746(ss)-5.746 G 2.496
(uccessful, from the standpoint of the calling program, it appears ne)
-5.746 F -.195(ve)-.325 G 5.746(rt).195 G(o)-5.746 E 3.25(return. On)
33.336 744 R(error)3.25 E 3.25(,e)-.52 G -.195(xe)-3.445 G 3.25(cr).195
G(eturns -1.)-3.25 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 5)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF(Executing via an inter)188.985 120 Q(pr)-.13 E
(eter)-.234 E/F2 13/Times-Roman@0 SF 5.508(The e)33.336 150 R -.195(xe)
-.195 G 5.507(cutable must either be a nati).195 F 5.897 -.195(ve b)
-.325 H 5.507(inary \(consisting of machine language).195 F 1.555
(instructions that can be e)33.336 165 R -.195(xe)-.195 G 1.555
(cuted by that system\), or an interpreted script.).195 F 1.556
(In the latter)8.056 F(case, the e)33.336 180 Q -.195(xe)-.195 G
(cutable \214le will be).195 E(gin with:)-.195 E/F3 10/Courier@0 SF
(#!/path/to/interpreter arg)33.336 192 Q/F4 13/Courier@0 SF
(/path/to/interpreter)33.336 207 Q F2 1.475
(must be a quali\214ed path \(the P)4.725 F -1.443(AT)-1.196 G 4.724(He)
1.443 G -.52(nv)-4.724 G 1.474(ironment v).52 F(ariable)-.325 E 2.87(wi\
ll not be searched\) and must be a binary \214le \(not another interpre\
ter\).)33.336 222 R 2.871(It will be)9.371 F -.195(exe)33.336 237 S .586
(cuted with ar).195 F .586(gv[0] set to the ")-.234 F F4(interpreter)A
F2 3.836(". If)B F4(arg)3.836 E F2 3.836(,w)C .586
(hich is optional, is present)-3.836 F 1.844
(in the #! line, it will be inserted as the ne)33.336 252 R 1.845(xt ar)
-.195 F 1.845(gument \(ar)-.234 F 5.095(gv[1]\). Then)-.234 F 1.845
(the entire ar)5.095 F(gv)-.234 E -.195(ve)33.336 267 S 2.101
(ctor of the in).195 F -.26(vo)-.52 G -.13(ke).26 G 5.351(dp).13 G 2.101
(rogram is appended to ar)-5.351 F(gv)-.234 E 8.601(.T)-.845 G 2.101
(his means that the name of the)-8.601 F .387(script \214le becomes ar)
33.336 282 R .387(gv[1] \(ar)-.234 F .387(gv[2] if the optional)-.234 F
F4(arg)3.637 E F2 -.13(wa)3.637 G 3.638(ss).13 G .388
(peci\214ed in the #! line\), and,)-3.638 F 1.267(in a break with tradi\
tion, it is the fully quali\214ed pathname of the script \214le, rather\
 than)33.336 297 R 2.132(just the base name.)33.336 312 R 2.132
(This allo)8.632 F 2.132(ws the interpreter to open this \214le and be)
-.325 F 2.132(gin to intepret)-.195 F(\(e)33.336 327 Q -.195(xe)-.195 G
(cute\) it.).195 E -.195(Fo)33.336 348 S 4.375(rh).195 G 1.125
(istorical reasons, if the e)-4.375 F -.195(xe)-.195 G 1.125
(cutable \214le has e).195 F -.195(xe)-.195 G 1.124(cute permissions, b)
.195 F 1.124(ut is not a binary)-.26 F 1.466
(\214le, and does not contain an e)33.336 363 R 1.466
(xplicit #! interpreter in)-.195 F -.26(vo)-.52 G 1.467
(cation, it is interpreted with the).26 F
(shell /bin/sh, as if it had started with)33.336 378 Q F4(#!/bin/sh)3.25
E F2(.)A F1(The En)218.417 408 Q(vir)-.52 E(onment)-.234 E F2 .1(The en)
33.336 444 R .1(vironment is a set of strings of the form)-.52 F F4
(variable=value)3.35 E F2 .099(which is used to pass)3.349 F 1.875
(along information from one program to the ne)33.336 459 R 5.126
(xt. The)-.195 F(en)5.126 E 1.876(vironment represents)-.52 F F1(opaque)
5.126 E(data)33.336 474 Q F2 1.901(to the k)5.151 F 1.901
(ernel, i.e. the k)-.13 F 1.9
(ernel does not inspect or interpret its contents.)-.13 F 1.9(There are)
8.4 F .971(UNIX con)33.336 489 R -.195(ve)-.52 G .971(ntions that en)
.195 F .971(vironment v)-.52 F .971(ariables ha)-.325 F 1.361 -.195
(ve u)-.26 H .971(ppercase names, and certain names).195 F(ha)33.336 504
Q .448 -.195(ve c)-.26 H .058(ertain functions.).195 F -1.196(PA)6.558 G
.057(TH contains the search patch for e)-.247 F -.195(xe)-.195 G 3.307
(cutables. PS1).195 F .057(contains the)3.307 F .104
(shell prompt string.)33.336 519 R .104
(TERM is the terminal type of the controlling terminal.)6.604 F .104
(HOME is the)6.604 F 3.954(home directory of the current user)33.336 534
R 10.454(.T)-.715 G 3.954(he shell command)-10.454 F F4(env)7.204 E F2
3.954(displays the current)7.204 F(en)33.336 549 Q 1.93(vironment v)-.52
F 1.93(ariables and v)-.325 F 5.18(alues. The)-.325 F 1.931
(shell command)5.181 F F4 1.931(export VARIABLE=value)5.181 F F2
(creates a ne)33.336 564 Q 3.25(we)-.325 G -.52(nv)-3.25 G(ironment v)
.52 E(ariable.)-.325 E 1.214(The standard C library routines)33.336 594
R F4(getenv)4.464 E F2(and)4.464 E F4(putenv)4.464 E F2 1.213
(can be used to query and create)4.464 F(en)33.336 609 Q(vironment v)
-.52 E(ariable settings.)-.325 E(The entire v)6.5 E(ector is also a)
-.195 E -.325(va)-.26 G(ilable as the global v).325 E(ariable:)-.325 E
F3(extern char **environ;)33.336 621 Q F2 5.195(The 'e' v)33.336 636 R
5.195(ariants of e)-.325 F -.195(xe)-.195 G 8.446(ca).195 G 5.196
(ccept a v)-8.446 F(ector)-.195 E 8.446(,a)-.52 G 5.196(nalogous to)
-8.446 F F4(argv[])8.446 E F2 8.446(,s)C 5.196(pecifying the)-8.446 F F1
(en)33.336 651 Q(vir)-.52 E(onment)-.234 E F2 5.488(of the ne)8.738 F
8.737(wp)-.325 G 8.737(rogram. The)-8.737 F 5.487(non-'e' v)8.737 F
5.487(ariants pass along the current)-.325 F(en)33.336 666 Q(vironment.)
-.52 E .332(The en)33.336 696 R .332(vironment is established by the k)
-.52 F .332(ernel prior to calling the program')-.13 F 3.582(ss)-.715 G
.332(tart function,)-3.582 F 2.73
(and has the same NULL-terminated array of strings format as ar)33.336
711 R(gv)-.234 E 9.23(.S)-.845 G 2.73(torage for the)-9.23 F(en)33.336
726 Q .775(vironment and ar)-.52 F .775(gument v)-.234 F .776
(ectors is allocated by the k)-.195 F .776
(ernel at the high end of the stack)-.13 F(re)33.336 741 Q(gion.)-.195 E
0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 6)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Bold@0 SF(Starting a new pr)177.525 120 Q(ocess with f)
-.234 E(ork)-.325 E/F2 13/Times-Roman@0 SF .354(While the)33.336 156 R
/F3 13/Courier@0 SF(exec)3.604 E F2 .354
(system call replaces the currently running program with a ne)3.604 F
3.604(wp)-.325 G(rogram,)-3.604 E 1.7
(it does so inside the same virtual computer container \(or process\).)
33.336 171 R 1.7(The method which)8.2 F 1.4(UNIX uses to create ne)
33.336 186 R 4.65(wp)-.325 G 1.4
(rocesses is often confusing at \214rst, because it creates a ne)-4.65 F
(w)-.325 E .581(process which is a cop)33.336 201 R 3.832(yo)-.13 G
3.832(ft)-3.832 G .582(he current process at that moment, b)-3.832 F
.582(ut does NO)-.26 F 3.832(Tc)-.52 G .582(hange the)-3.832 F 1.413
(running program.)33.336 216 R(The)7.913 E F3(fork)4.663 E F2 1.412
(system call is used to create a ne)4.663 F 4.662(wp)-.325 G 4.662
(rocess. The)-4.662 F(process)4.662 E 3.602(which called)33.336 231 R F3
(fork)6.852 E F2 3.603(is the)6.853 F F1(par)6.853 E(ent)-.234 E F2
3.603(process, and the ne)6.853 F -.845(w,)-.325 G F1(child)7.698 E F2
3.603(process is an)6.853 F F1(exact)6.853 E(duplicate)33.336 246 Q F2
(of the parent process, with three e)3.25 E(xceptions:)-.195 E 3.25
<8354>33.336 261 S(he child process will be assigned a ne)-3.25 E 3.25
(wp)-.325 G(rocess id.)-3.25 E 3.25<8354>33.336 276 S(he)-3.25 E F1(par)
3.25 E(ent pr)-.234 E(ocess id \(ppid\))-.234 E F2
(of the child will be set to the pid of the parent.)3.25 E 5.284<8354>
33.336 291 S(he)-5.284 E F3(fork)5.284 E F2 2.034(system call will retu\
rn 0 to the child process, and will return the child')5.284 F(s)-.715 E
(process id to the parent.)33.336 306 Q 2.238
(Note that fork does not pro)33.336 327 R 2.238
(vide for a change in the currently running program.)-.195 F(This)8.738
E 1.24(results in the strange programmatic sensation of calling a funct\
ion which returns)33.336 342 R F1(twice)4.49 E F2(.)A 1.603(Another w)
33.336 357 R 1.603(ay to vie)-.13 F 4.854(wt)-.325 G 1.604
(his is that the child process comes to life e)-4.854 F -.195(xe)-.195 G
1.604(cuting at the e).195 F(xact)-.195 E
(point of returning from the fork system call.)33.336 372 Q 1.111
(The fork system call is f)33.336 393 R 1.111(airly unique to UNIX.)-.13
F 1.11(Most other operating systems pro)7.61 F 1.11(vide a)-.195 F 1.052
(system call that combines fork with)33.336 408 R F3(exec)4.302 E F2
1.052(to both create a ne)4.302 F 4.302(wp)-.325 G 1.053
(rocess and associate it)-4.302 F 1.075(with a ne)33.336 423 R 4.324(wp)
-.325 G 1.074(rogram at the same time, i.e. a "spa)-4.324 F 1.074
(wn" system call.)-.195 F 1.074(This w)7.574 F 1.074(ould be useful)-.13
F 1.511(because, as we')33.336 438 R 1.511
(ll see, the most common system call to follo)-.13 F 4.762(wf)-.325 G
1.512(ork is e)-4.762 F -.195(xe)-.195 G 4.762(c. W).195 F(e')-1.04 E
1.512(ll also)-.13 F(see, in later units, ho)33.336 453 Q 3.25(wt)-.325
G(he UNIX k)-3.25 E(ernel optimizes this.)-.13 E/F4 10/Courier@0 SF
(static int i;)33.336 465 Q(f\(\))33.336 489 Q({)33.336 501 Q(int pid;)
39.336 513 Q(i=10;)81.336 525 Q(switch \(pid=fork\(\)\))81.336 537 Q({)
81.336 549 Q(case -1:)87.336 561 Q(perror\("fork failed"\);exit\(1\);)
129.336 573 Q 6(break; /*NOTREACHED*/)129.336 585 R(case 0:)87.336 597 Q
(printf\("In child\\n"\);)129.336 609 Q(i=1;)129.336 621 Q(break;)
129.336 633 Q(default:)87.336 645 Q
(printf\("In parent, new pid is %\\n",pid\);)129.336 657 Q(break;)
129.336 669 Q(})81.336 681 Q(printf\("i==%d\\n",i\);)81.336 693 Q F2
.103(If fork f)33.336 714 R .103
(ails, then no child process has been created, and a v)-.13 F .102
(alue of -1 \(which can ne)-.325 F -.195(ve)-.325 G 3.352(rb).195 G(e)
-3.352 E 3.25(al)33.336 729 S -2.925 -.195(eg a)-3.25 H 3.25(lp).195 G
(id as pids are positi)-3.25 E -.195(ve)-.325 G 3.25(\)i).195 G 3.25(sr)
-3.25 G(eturned.)-3.25 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 7)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF .699(Although the child is an e)33.336 120 R
.699(xact cop)-.195 F 3.949(yo)-.13 G 3.949(ft)-3.949 G .7
(he parent, it is nonetheless an independent entity)-3.949 F 1.663
(and has an independent virtual memory space which starts of)33.336 135
R 4.913(fa)-.325 G 4.913(sa)-4.913 G 4.913(ne)-4.913 G 1.663(xact cop)
-5.108 F 4.913(yo)-.13 G 4.913(ft)-4.913 G(he)-4.913 E(parent')33.336
150 Q 5.875(s\()-.715 G(ag)-5.875 E 2.625
(ain, we will see in a later unit ho)-.065 F 5.875(wt)-.325 G 2.625
(he k)-5.875 F 2.625(ernel optimizes this and a)-.13 F -.26(vo)-.26 G
(ids).26 E .012(actually cop)33.336 165 R .012(ying ph)-.13 F .012
(ysical memory until it is necessary\).)-.065 F .012
(Therefore, in the e)6.512 F .011(xample abo)-.195 F -.195(ve)-.195 G(,)
.195 E(the child')33.336 180 Q 3.25(sm)-.715 G(odi\214cation of v)-3.25
E(ariable)-.325 E/F2 13/Courier@0 SF(i)3.25 E F1(does not af)3.25 E
(fect the parent')-.325 E 3.25(sc)-.715 G(op)-3.25 E -.845(y.)-.13 G/F3
13/Times-Bold@0 SF(Clone)251.086 210 Q F1 2.217(Under the Linux k)33.336
240 R 2.218
(ernel, virtual processors and virtual address spaces can be separate)
-.13 F 5.046(issues. By)33.336 255 R 1.796(using the)5.046 F F2(clone)
5.046 E F1 1.796(system call rather than)5.046 F F2(fork)5.046 E F1
5.046(,an)C 2.446 -.325(ew v)-5.046 H 1.795(irtual processor is).325 F
1.189(created, b)33.336 270 R 1.189(ut the man)-.26 F 4.439(ya)-.195 G
1.189(spects of duplication which)-4.439 F F2(fork)4.44 E F1 1.19
(performs can be turned on or)4.44 F(of)33.336 285 Q 5.088(fp)-.325 G
1.838(iecemeal \(e.g. the virtual address space, the relationship to op\
en \214les, the current)-5.088 F -.13(wo)33.336 300 S
(rking directory\).).13 E(The ne)6.5 E 3.25(wv)-.325 G
(irtual processor is assigned a dif)-3.25 E(ferent pid.)-.325 E 2.038
(By using)33.336 330 R F2(clone)5.288 E F1 5.288(,n)C -.325(ew)-5.288 G
F3(thr)5.613 E(eads)-.234 E F1 2.038(of e)5.288 F -.195(xe)-.195 G 2.038
(cution can be created which co-e).195 F 2.038(xist within the)-.195 F
1.321(same address space.)33.336 345 R 1.321(This is some)7.821 F 1.321
(what of a simpli\214cation, as it ignores comple)-.325 F 4.571(xi)-.195
G(ssues)-4.571 E 4.444(such as managing the user)33.336 360 R(-le)-.26 E
-.195(ve)-.325 G 7.695(lc).195 G 4.445(all stacks of these dif)-7.695 F
4.445(ferent threads.)-.325 F(Therefore,)10.945 E 8.951(additional user)
33.336 375 R(-le)-.26 E -.195(ve)-.325 G 12.201(ll).195 G 8.95
(ibrary support is required to implement multi-threaded)-12.201 F 3.796
(programming. The)33.336 390 R F2(clone)3.796 E F1 .546
(system call is rarely used directly)3.796 F 3.796(,b)-.845 G .546
(ut instead, if the intent is)-4.056 F(multi-threaded programming, the \
threads library is used and it ultimately calls)33.336 405 Q F2(clone)
3.25 E F1(.)A 1.576
(Programs which are multi-threaded are much harder to deb)33.336 435 R
4.826(ug. Ho)-.26 F(we)-.325 E -.195(ve)-.325 G 2.616 -.52(r, a g).195 H
1.576(reat man).52 F(y)-.195 E 2.123
(applications are well-suited to the thread paradigm.)33.336 450 R 2.123
(These include serv)8.623 F 2.123(er applications)-.195 F(\(e.g. web an\
d email service\) and programs which present a graphical user interf)
33.336 465 Q(ace.)-.13 E F3(The \214le table and \214le descriptors)
176.511 495 Q F1 2.457(There are in f)33.336 531 R 2.456(act tw)-.13 F
5.706(ol)-.13 G 2.456
(ayers of tables between the \214le descriptor numbers used by a)-5.706
F 1.284(process for I/O calls \(such as open, read, write, etc.\) and t\
he actual \214les.)33.336 546 R 1.285(Each process)7.785 F .013(maintai\
ns a \214le descriptor table, the entries of which in turn point to k)
33.336 561 R .013(ernel data structures)-.13 F
(which are called \(in the Linux k)33.336 576 Q(ernel\))-.13 E F2
(struct file)3.25 E F1(.)A 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 8)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E 0 0 468 524 -528.733 592 33.336 648.733 PBEGIN
%%BeginDocument: filetables.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: filetables.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Feb  7 23:32:28 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 524 592
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 592 moveto 0 0 lineto 524 0 lineto 524 592 lineto closepath clip newpath
-41.0 612.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
7.500 slw
n 1200 900 m 1800 900 l 1800 3600 l 1200 3600 l
 cp gs col0 s gr 
% Polyline
n 1200 1200 m
 1800 1200 l gs col0 s gr 
% Polyline
n 1200 1500 m
 1800 1500 l gs col0 s gr 
% Polyline
n 1200 1800 m
 1800 1800 l gs col0 s gr 
% Polyline
n 1200 2100 m
 1800 2100 l gs col0 s gr 
% Polyline
n 1200 2400 m
 1800 2400 l gs col0 s gr 
% Polyline
n 1200 2700 m
 1800 2700 l gs col0 s gr 
% Polyline
n 1200 3000 m
 1800 3000 l gs col0 s gr 
% Polyline
n 1200 3300 m
 1800 3300 l gs col0 s gr 
% Polyline
n 1200 4200 m 1800 4200 l 1800 6900 l 1200 6900 l
 cp gs col0 s gr 
% Polyline
n 1200 4500 m
 1800 4500 l gs col0 s gr 
% Polyline
n 1200 4800 m
 1800 4800 l gs col0 s gr 
% Polyline
n 1200 5100 m
 1800 5100 l gs col0 s gr 
% Polyline
n 1200 5400 m
 1800 5400 l gs col0 s gr 
% Polyline
n 1200 5700 m
 1800 5700 l gs col0 s gr 
% Polyline
n 1200 6000 m
 1800 6000 l gs col0 s gr 
% Polyline
n 1200 6300 m
 1800 6300 l gs col0 s gr 
% Polyline
n 1200 6600 m
 1800 6600 l gs col0 s gr 
% Polyline
n 1200 7500 m 1800 7500 l 1800 10200 l 1200 10200 l
 cp gs col0 s gr 
% Polyline
n 1200 7800 m
 1800 7800 l gs col0 s gr 
% Polyline
n 1200 8100 m
 1800 8100 l gs col0 s gr 
% Polyline
n 1200 8400 m
 1800 8400 l gs col0 s gr 
% Polyline
n 1200 8700 m
 1800 8700 l gs col0 s gr 
% Polyline
n 1200 9000 m
 1800 9000 l gs col0 s gr 
% Polyline
n 1200 9300 m
 1800 9300 l gs col0 s gr 
% Polyline
n 1200 9600 m
 1800 9600 l gs col0 s gr 
% Polyline
n 1200 9900 m
 1800 9900 l gs col0 s gr 
/Times-Roman-iso ff 200.00 scf sf
4950 6075 m
gs 1 -1 sc (f_mode:R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 6315 m
gs 1 -1 sc (f_pos:111) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 6555 m
gs 1 -1 sc (f_count:1) col0 sh gr
% Polyline
n 8205 900 m 8100 900 8100 1695 105 arcto 4 {pop} repeat
  8100 1800 9195 1800 105 arcto 4 {pop} repeat
  9300 1800 9300 1005 105 arcto 4 {pop} repeat
  9300 900 8205 900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 8205 2100 m 8100 2100 8100 2895 105 arcto 4 {pop} repeat
  8100 3000 9195 3000 105 arcto 4 {pop} repeat
  9300 3000 9300 2205 105 arcto 4 {pop} repeat
  9300 2100 8205 2100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 8205 5400 m 8100 5400 8100 6195 105 arcto 4 {pop} repeat
  8100 6300 9195 6300 105 arcto 4 {pop} repeat
  9300 6300 9300 5505 105 arcto 4 {pop} repeat
  9300 5400 8205 5400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
4624 2103 m 4643 2046 l 4499 1998 l 4604 2065 l 4480 2055 l cp
eoclip
n 1575 1050 m
 4620 2070 l gs col0 s gr gr

% arrowhead
n 4480 2055 m 4604 2065 l 4499 1998 l  col0 s
% Polyline
gs  clippath
4628 2162 m 4641 2104 l 4493 2070 l 4604 2126 l 4480 2128 l cp
eoclip
n 1500 1425 m
 4620 2130 l gs col0 s gr gr

% arrowhead
n 4480 2128 m 4604 2126 l 4493 2070 l  col0 s
% Polyline
gs  clippath
4601 2011 m 4608 1951 l 4457 1935 l 4574 1978 l 4451 1995 l cp
eoclip
n 1500 1650 m
 4590 1980 l gs col0 s gr gr

% arrowhead
n 4451 1995 m 4574 1978 l 4457 1935 l  col0 s
% Polyline
gs  clippath
4746 1225 m 4732 1167 l 4585 1201 l 4709 1204 l 4598 1260 l cp
eoclip
n 1500 1950 m
 4725 1200 l gs col0 s gr gr

% arrowhead
n 4598 1260 m 4709 1204 l 4585 1201 l  col0 s
% Polyline
gs  clippath
4648 3993 m 4677 3940 l 4543 3868 l 4635 3952 l 4515 3921 l cp
eoclip
n 1500 2250 m
 4650 3960 l gs col0 s gr gr

% arrowhead
n 4515 3921 m 4635 3952 l 4543 3868 l  col0 s
% Polyline
gs  clippath
4709 2236 m 4675 2186 l 4550 2272 l 4666 2229 l 4584 2322 l cp
eoclip
n 1500 4425 m
 4680 2220 l gs col0 s gr gr

% arrowhead
n 4584 2322 m 4666 2229 l 4550 2272 l  col0 s
% Polyline
gs  clippath
4739 2265 m 4704 2216 l 4582 2307 l 4697 2260 l 4618 2355 l cp
eoclip
n 1500 4650 m
 4710 2250 l gs col0 s gr gr

% arrowhead
n 4618 2355 m 4697 2260 l 4582 2307 l  col0 s
% Polyline
gs  clippath
4770 2293 m 4732 2247 l 4616 2345 l 4727 2291 l 4654 2391 l cp
eoclip
n 1500 5025 m
 4740 2280 l gs col0 s gr gr

% arrowhead
n 4654 2391 m 4727 2291 l 4616 2345 l  col0 s
% Polyline
gs  clippath
4712 1326 m 4665 1289 l 4572 1408 l 4670 1333 l 4619 1445 l cp
eoclip
n 1575 5250 m
 4680 1320 l gs col0 s gr gr

% arrowhead
n 4619 1445 m 4670 1333 l 4572 1408 l  col0 s
% Polyline
gs  clippath
4676 4131 m 4651 4076 l 4513 4139 l 4635 4117 l 4538 4194 l cp
eoclip
n 1500 5550 m
 4650 4110 l gs col0 s gr gr

% arrowhead
n 4538 4194 m 4635 4117 l 4513 4139 l  col0 s
% Polyline
n 8205 6900 m 8100 6900 8100 7695 105 arcto 4 {pop} repeat
  8100 7800 9195 7800 105 arcto 4 {pop} repeat
  9300 7800 9300 7005 105 arcto 4 {pop} repeat
  9300 6900 8205 6900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
4752 5944 m 4724 5891 l 4590 5963 l 4710 5933 l 4618 6016 l cp
eoclip
n 1500 7650 m
 4725 5925 l gs col0 s gr gr

% arrowhead
n 4618 6016 m 4710 5933 l 4590 5963 l  col0 s
% Polyline
gs  clippath
4669 7452 m 4659 7392 l 4510 7418 l 4634 7428 l 4520 7477 l cp
eoclip
n 1500 7950 m
 4650 7425 l gs col0 s gr gr

% arrowhead
n 4520 7477 m 4634 7428 l 4510 7418 l  col0 s
% Polyline
gs  clippath
4597 7525 m 4581 7467 l 4435 7506 l 4559 7504 l 4450 7564 l cp
eoclip
n 1500 8325 m
 4575 7500 l gs col0 s gr gr

% arrowhead
n 4450 7564 m 4559 7504 l 4435 7506 l  col0 s
% Polyline
gs  clippath
4742 5078 m 4697 5038 l 4596 5150 l 4699 5082 l 4640 5191 l cp
eoclip
n 1500 8625 m
 4710 5070 l gs col0 s gr gr

% arrowhead
n 4640 5191 m 4699 5082 l 4596 5150 l  col0 s
% Polyline
n 4800 900 m 6600 900 l 6600 1800 l 4800 1800 l
 cp gs col0 s gr 
% Polyline
n 4800 1800 m 6600 1800 l 6600 2700 l 4800 2700 l
 cp gs col0 s gr 
% Polyline
n 4800 3600 m 6600 3600 l 6600 4500 l 4800 4500 l
 cp gs col0 s gr 
% Polyline
n 4800 4500 m 6600 4500 l 6600 5400 l 4800 5400 l
 cp gs col0 s gr 
% Polyline
n 4800 7200 m 6600 7200 l 6600 8100 l 4800 8100 l
 cp gs col0 s gr 
% Polyline
n 4800 5775 m 6600 5775 l 6600 6675 l 4800 6675 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8040 7530 m 8040 7470 l 7888 7470 l 8008 7500 l 7888 7530 l cp
eoclip
n 6225 7500 m
 8025 7500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7888 7530 m 8008 7500 l 7888 7470 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8190 5955 m 8190 5895 l 8038 5895 l 8158 5925 l 8038 5955 l cp
eoclip
n 6225 5925 m
 8175 5925 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 8038 5955 m 8158 5925 l 8038 5895 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8058 1800 m 8005 1772 l 7934 1907 l 8017 1815 l 7987 1935 l cp
eoclip
n 6375 4950 m
 8025 1800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7987 1935 m 8017 1815 l 7934 1907 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8058 1502 m 8007 1471 l 7927 1600 l 8016 1514 l 7979 1632 l cp
eoclip
n 6375 4200 m
 8025 1500 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7979 1632 m 8016 1514 l 7927 1600 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8040 2430 m 8040 2370 l 7888 2370 l 8008 2400 l 7888 2430 l cp
eoclip
n 6225 2400 m
 8025 2400 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7888 2430 m 8008 2400 l 7888 2370 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8115 1455 m 8115 1395 l 7963 1395 l 8083 1425 l 7963 1455 l cp
eoclip
n 6150 1425 m
 8100 1425 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7963 1455 m 8083 1425 l 7963 1395 l  col0 s
/Times-Roman-iso ff 200.00 scf sf
8250 1425 m
gs 1 -1 sc (/tmp/foo) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8175 2700 m
gs 1 -1 sc (/dev/pts/3) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8250 6075 m
gs 1 -1 sc (/tmp/bar) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
8325 7575 m
gs 1 -1 sc (/dev/pts/5) col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
1500 525 m
gs 1 -1 sc (Per-Process) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
1500 795 m
gs 1 -1 sc (File Descriptors) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
5700 750 m
gs 1 -1 sc (struct file) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 233.33 scf sf
8700 750 m
gs 1 -1 sc (In-core inodes) dup sw pop 2 div neg 0 rm  col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1125 m
gs 1 -1 sc (f_mode: R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1365 m
gs 1 -1 sc (f_pos:45) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 1605 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2025 m
gs 1 -1 sc (f_mode:RW f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2265 m
gs 1 -1 sc (f_pos: N/A) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 2505 m
gs 1 -1 sc (f_count:6) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4065 m
gs 1 -1 sc (f_pos:4000) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4305 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4725 m
gs 1 -1 sc (f_mode:R  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 4965 m
gs 1 -1 sc (f_pos:10) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 5205 m
gs 1 -1 sc (f_count:1) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7425 m
gs 1 -1 sc (f_mode:RW  f_flags:0) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7665 m
gs 1 -1 sc (f_pos: N/A) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4950 7905 m
gs 1 -1 sc (f_count:2) col0 sh gr
/Times-Roman-iso ff 200.00 scf sf
4875 3825 m
gs 1 -1 sc (mode:W flags:APPEND) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Courier@0 SF(struct file)33.336 675.733 Q/F2 13
/Times-Roman@0 SF(contains man)3.25 E 3.25<798c>-.195 G 3.25
(elds. Right)-3.25 F(no)3.25 E 1.69 -.845(w, w)-.325 H 3.25(ea).845 G
(re concerned with the follo)-3.25 E(wing:)-.325 E<83>33.336 690.733 Q
F1(f_mode)3.25 E F2 3.25(:T)C(he mode under which the \214le w)-3.25 E
(as opened \(RDONL)-.13 E 3.354 -1.677(Y, W)-1.3 H -.52(RO)1.677 G(NL)
.52 E 3.354 -1.677(Y, R)-1.3 H -.39(DW)1.677 G(R\).).39 E<83>33.336
705.733 Q F1(f_flags)4.413 E F2 4.413(:T)C 1.163
(he remainder of the second ar)-4.413 F 1.164
(gument to the open system call.)-.234 F 1.164(There are)7.664 F(man)
33.336 720.733 Q 5.67(ye)-.195 G 2.419(soteric \215ags, such as the abi\
lity to request non-blocking I/O \(O_NOBLOCK\).)-5.67 F .801
(The only important one at this point in the course is)33.336 735.733 R
F1(O_APPEND)4.052 E F2 4.052(,w)C .802(hich causes all write)-4.052 F 0
Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 9)73.998 E(\2512013 Jef)144.405 E 2.25(fH)-.225 G(akner)-2.25
E/F1 13/Times-Roman@0 SF
(requests to \214rst seek to the current end of \214le.)33.336 120 Q<83>
33.336 135 Q/F2 13/Courier@0 SF(f_count)3.404 E F1 3.404(:T)C .153
(he reference count of ho)-3.404 F 3.403(wm)-.325 G(an)-3.403 E 3.403
(ye)-.195 G .153(ntries in process \214le descriptor tables are)-3.403 F
(pointing to this particular)33.336 150 Q F2(struct file)3.25 E F1(.)A
<83>33.336 165 Q F2(f_pos)3.25 E F1 3.25(:T)C(he byte of)-3.25 E
(fset in the \214le where the last read or write left of)-.325 E(f.)
-.325 E 4.472<8354>33.336 180 S 1.222
(hrough an intermediate data structure, the k)-4.472 F 1.222
(ernel can \214nd an in-memory cop)-.13 F 4.472(yo)-.13 G 4.472(ft)
-4.472 G(he)-4.472 E(inode for the \214le, which is necessary for actua\
lly performing read or write operations.)33.336 195 Q(The)33.336 225 Q
F2(f_pos)3.291 E F1 .041(\214eld maintains a)3.291 F/F3 13/Times-Bold@0
SF(cursor)3.291 E F1 .041(into the \214le.)3.291 F .04
(It is initialized to 0 when the \214le is \214rst)6.54 F 3.765
(opened. Normally)33.336 240 R 3.765(,ar)-.845 G .515
(ead or write system be)-3.765 F .515(gins at byte of)-.195 F(fset)-.325
E F2(f_pos)3.766 E F1 3.766(,a)C .516(nd then)-3.766 F F2(f_pos)3.766 E
F1 2.842(is incremented by the number of bytes read or written.)33.336
255 R 2.842(Therefore, reads and writes)9.342 F .186
(appear to be sequential.)33.336 270 R F2(f_pos)6.686 E F1 .187
(can be queried or changed using the)3.436 F F2(lseek)3.437 E F1 .187
(system call.)3.437 F 1.886(When the \214le has been opened with)33.336
285 R F2(O_APPEND)5.136 E F1 5.136(,a)C 1.886
(ll writes automatically be)-5.136 F 1.886(gin at the)-.195 F .511(curr\
ent size of the \214le, i.e. all writes will append to the \214le and n\
e)33.336 300 R -.195(ve)-.325 G 3.761(ro).195 G -.195(ve)-3.956 G -.26
(r-).195 G .511(write an).26 F 3.761(yp)-.195 G(art)-3.761 E(of it.)
33.336 315 Q(After the append,)6.5 E F2(f_pos)3.25 E F1(contains the ne)
3.25 E 3.25(ws)-.325 G(ize of the \214le.)-3.25 E .001(The act of)33.336
336 R F2(open)3.251 E F1 .001(ing a \214le creates both a ne)B 3.251
<778c>-.325 G .001(le descriptor and and ne)-3.251 F(w)-.325 E F2
(struct file)3.25 E F1(.)A 3.622(Af)33.336 351 S .372(ork mak)-3.622 F
.372(es an e)-.13 F .372(xact cop)-.195 F 3.623(yo)-.13 G 3.623(ft)
-3.623 G .373(he parent')-3.623 F 3.623<738c>-.715 G .373
(le descriptor table, resulting in an additional)-3.623 F .92
(reference to each \214le table entry \(see dup belo)33.336 366 R 4.169
(w\). This)-.325 F .919(sharing of open \214les means that)4.169 F .814
(when e.g. the child process reads from a \214le, the parent process wi\
ll see a change in the)33.336 381 R(\214le position \(e.g. through)
33.336 396 Q F2(lseek)3.25 E F1(\).)A(A)33.336 417 Q F2(close)3.783 E F1
.532(on a \214le descriptor \(assuming the \214le descriptor actually r\
efers to a v)3.783 F .532(alid open)-.325 F .38
(\214le\) NULLS out that \214le descriptor table entry)33.336 432 R F3
-.325(fo)3.631 G 3.631(rt).325 G .381(he calling pr)-3.631 F .381
(ocess only)-.234 F F1 .381(and remo)3.631 F -.195(ve)-.195 G(s).195 E
4.338(one acti)33.336 447 R 4.728 -.195(ve r)-.325 H 4.337
(eference to the corresponding).195 F F2 4.337(struct file)7.587 F F1
10.837(.W)C 4.337(hen the number of)-10.837 F .899(references f)33.336
462 R .899(alls to 0, the)-.13 F F2 .899(struct file)4.149 F F1 .899
(itself is destro)4.149 F 4.149(yed. That)-.13 F .899
(deletes one particular)4.149 F .958(instance of ha)33.336 477 R .958
(ving the inode open, b)-.26 F .957(ut as illustrated abo)-.26 F -.195
(ve)-.195 G 4.207(,t).195 G .957(here may be other)-4.207 F F2(struct)
4.207 E(file)33.336 492 Q F1
(objects which reference the same inode and thus hold it open.)3.25 E
.216(In the diagram abo)33.336 513 R -.195(ve)-.195 G 3.466(,o).195 G
.217(ne process, running on terminal /de)-3.466 F .217
(v/pts/3, had apparently opened)-.325 F 1.129
(the \214le /tmp/foo twice, once O_RDONL)33.336 528 R 4.482 -1.677(Y, a)
-1.3 H 1.128(nd the second time O_RD)1.677 F(WR|O_APPEND.)-.39 E 2.648
(This process fork)33.336 543 R 2.648(ed, and so the top and middle per)
-.13 F 2.648(-process \214le descriptor tables are)-.26 F 1.444
(identical at this moment.)33.336 558 R 1.444
(Another process is running on /de)7.944 F 4.694(v/pts/5. It)-.325 F
1.444(has also opened)4.694 F .523(/tmp/foo, O_RDONL)33.336 573 R 7.127
-1.677(Y. W)-1.3 H 3.773(ea).637 G .524
(lso see that its standard input has been redirected to the \214le)
-3.773 F(/tmp/bar)33.336 588 Q 6.5(.T)-.715 G
(his mechanism to do this will no)-6.5 E 3.25(wb)-.325 G 3.25(ee)-3.25 G
(xplained.)-3.445 E F3(Dup and I/O r)200.217 618 Q(edir)-.234 E(ection)
-.234 E F1(The)33.336 654 Q F2(dup)3.716 E F1 .466
(system call allocates a ne)3.716 F 3.715<778c>-.325 G .465
(le descriptor table entry for the process and points)-3.715 F 1.298
(it to the same)33.336 669 R F2 1.298(struct file)4.548 F F1 1.298
(as an e)4.548 F 1.298(xisting \214le descriptor)-.195 F 7.798(.T)-.715
G 1.299(he ne)-7.798 F 4.549<778c>-.325 G 1.299(le descriptor is)-4.549
F F3 1.163(exactly equi)33.336 684 R -.13(va)-.13 G(lent).13 E F1 1.163
(to the original one, as can be inferred by the diagram abo)4.413 F
-.195(ve)-.195 G 7.662(.T).195 G(here)-7.662 E
(are strong analogies here to)33.336 699 Q F2(link)3.25 E F1(.)A 1.158
(dup comes in tw)33.336 720 R 4.408<6f8d>-.13 G -.26(avo)-4.408 G 1.159
(rs: original).26 F F2(dup)4.409 E F1 4.409(,w)C 1.159
(hich picks a \214le descriptor for you \(as usual,)-4.409 F .251
(the lo)33.336 735 R .251(west a)-.325 F -.325(va)-.26 G .25
(ilable fd number is chosen\), or).325 F F2(dup2)3.5 E F1 .25
(which allo)3.5 F .25(ws you to pick the ne)-.325 F 3.5<778c>-.325 G(le)
-3.5 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 10)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(descriptor number)33.336 120 Q 3.25(,w)
-.52 G(hich is \214rst)-3.25 E/F2 13/Courier@0 SF(close)3.25 E F1 3.25
(di)C 3.25(fa)-3.25 G(lready open.)-3.25 E 2.171(The most frequent appl\
ication of dup is to redirect standard input, standard output or)33.336
141 R(stderr:)33.336 156 Q/F3 10/Courier@0 SF
(if \(\(fd=open\(logfnm,O_CREAT|O_APPEND|O_WRONLY,0644\)\)<0\))33.336
183 Q({)33.336 195 Q(fprintf\(stderr,"Can't open log file %s",logfnm\);)
90.936 207 Q(perror\(""\);)90.936 219 Q(return -1;)90.936 231 Q(})33.336
243 Q(if \(dup2\(fd,2\)<0\) {)33.336 255 Q
(perror\("Can't dup2 logfile to stderr"\);)90.936 267 Q(return -1;)
90.936 279 Q(})33.336 291 Q(close\(fd\);)33.336 303 Q(if \(execlp\("/us\
r/local/bin/nextprog","nextprog","arg1","arg2",NULL\)<0\))33.336 315 Q
({)33.336 327 Q
(perror\("Whoops, can't exec /usr/local/bin/nextprog!"\);)90.936 339 Q
(return -1;)90.936 351 Q(})33.336 363 Q F1 1.535(In this e)33.336 384 R
1.535(xample, ne)-.195 F 1.535(xtprog is in)-.195 F -.26(vo)-.52 G -.13
(ke).26 G 4.785(dw).13 G 1.535
(ith stderr redirected to a log \214le whose name is)-4.785 F .22
(contained in the char * v)33.336 399 R .22(ariable logfnm.)-.325 F .22
(Note the close\(fd\).)6.72 F .22(After the dup2 call, both \214le)6.72
F 3.525(descriptor fd AND \214le descriptor 2 \(standard error\) point \
to the ne)33.336 414 R 3.525(wly-opened \214le)-.325 F F2(logfnm)33.336
429 Q F1 7.743(.I)C 4.494(tw)-7.743 G 1.244
(ould be a "bad idea" to start the ne)-4.624 F 4.494(wp)-.325 G 1.244
(rogram with an e)-4.494 F 1.244(xtra reference to)-.195 F(this \214le.)
33.336 444 Q/F4 13/Times-Bold@0 SF -.325(fo)177.766 474 S
(rk and the \214le descriptor table).325 E F1 1.228(The ef)33.336 504 R
1.228(fect of a fork is to create, in the child process, a \214le descr\
iptor table which is an)-.325 F -.195(ex)33.336 519 S .545(act cop).195
F 3.795(yo)-.13 G 3.795(ft)-3.795 G .545(he parent process.)-3.795 F
.545(The reference counts in the)7.045 F F2 .545(struct file)3.795 F F1
(structures)3.795 E 1.445(are incremented accordingly)33.336 534 R 7.944
(.I)-.845 G 4.694(nt)-7.944 G 1.444(he diagram abo)-4.694 F -.195(ve)
-.195 G 4.694(,t).195 G 1.444(he top and middle processes ha)-4.694 F
-.195(ve)-.26 G(fork)33.336 549 Q 1.233
(ed, and share all \214le descriptors.)-.13 F 1.233(It is as if the)
7.733 F F2 1.234(struct file)4.483 F F1 4.484(sh)C -2.925 -.26(av e)
-4.484 H(been)4.744 E F2(dup)4.484 E F1 -.65('d)C(,).65 E -.195(ex)
33.336 564 S
(cept the referencing \214le descriptor table entries are in a dif).195
E(ferent process.)-.325 E F4 -.962(Ty)189.505 594 S(pical shell I/O r)
.962 E(edir)-.234 E(ection)-.234 E F1 2.794
(The shell uses dup or dup2 to establish I/O redirection for spa)33.336
630 R 2.794(wned commands.)-.195 F -1.04(To)9.294 G .716
(isolate possible errors from the main shell process, generally the)
33.336 645 R F2(fork)3.966 E F1 .716(is done \214rst, and)3.966 F(the o\
pening of \214les and redirection of \214le descriptors is performed in\
 the child process.)33.336 660 Q 2.204(In the classic UNIX en)33.336 681
R 2.204(vironment, the only w)-.52 F 2.203(ay tw)-.13 F 5.453(op)-.13 G
2.203(rocesses can share an open \214le)-5.453 F .061(instance \()33.336
696 R F2 .061(struct file)B F1 3.311(\)i)C 3.311(si)-3.311 G 3.311(ft)
-3.311 G(he)-3.311 E 3.311(ys)-.195 G .061
(hare a common ancestor which performed the open,)-3.311 F .972(and the\
 referencing \214le descriptors were thus inherited through forks.)
33.336 711 R .971(In modern UNIX)7.471 F -.13(ke)33.336 726 S .922
(rnels, there are other mechanisms, be).13 F .922
(yond the scope of this lecture, which can violate)-.195 F
(this principle.)33.336 741 Q 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 11)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Expected \214le descriptor en)164.987 120
Q(vir)-.52 E(onment)-.234 E/F2 13/Times-Roman@0 SF .203
(It is a UNIX programming con)33.336 150 R -.195(ve)-.52 G .202
(ntion that, unless otherwise speci\214ed, a program e).195 F(xpects)
-.195 E .872
(to start life with just the 3 standard \214le descriptors open.)33.336
165 R .872(This means that an)7.372 F 4.122(yo)-.195 G .872(utput or)
-4.122 F 2.594(errors which the program produces will go some)33.336 180
R 2.593(where, and there is someplace from)-.325 F
(which to solicit input if needed.)33.336 195 Q 3.678 -1.04(To h)33.336
216 T -2.925 -.26(av e)1.04 H -.195(ex)5.108 G 1.598
(tra \214le descriptors open when the program be).195 F 1.598
(gins is generally an error)-.195 F 4.849(,a)-.52 G(nd)-4.849 E .578
(may cause problems.)33.336 231 R .578(These e)7.078 F .578
(xtra open \214le descriptors create, from the standpoint of the)-.195 F
3.391(program, an une)33.336 246 R 3.392
(xpected connection to something else on the system, and from the)-.195
F .036(standpoint of the system administrator)33.336 261 R 3.286(,d)-.52
G .035(angling and dead references which might pre)-3.286 F -.195(ve)
-.325 G(nt).195 E(resources from being freed.)33.336 276 Q .074
(It is lik)33.336 297 R -.325(ew)-.13 G .075(ise an error if the standa\
rd 3 \214le descriptors are not open when a program starts,).325 F .77
(or are not open correctly \(e.g. fd#1 is opened with O_RDONL)33.336 312
R 4.02(Ym)-1.3 G 4.019(ode\). This)-4.02 F .769(will cause)4.019 F(une)
33.336 327 Q(xpected errors when attempted to read/write to/from the st\
andard descriptors.)-.195 E F1(Pr)212.034 357 Q(ocess termination)-.234
E F2 1.539(Processes terminate either when the)33.336 393 R 4.789(yc)
-.195 G 1.539(all the)-4.789 F/F3 13/Courier@0 SF(exit)4.789 E F2 1.539
(system call or the)4.789 F 4.789(yr)-.195 G(ecei)-4.789 E 1.929 -.195
(ve c)-.325 H(ertain).195 E(types of)33.336 408 Q F1(signals)3.25 E F2
(\(which will be co)3.25 E -.195(ve)-.195 G(red in the ne).195 E
(xt unit\).)-.195 E(The)33.336 429 Q F3(exit)4.193 E F2 .943
(system call tak)4.193 F .943(es a single inte)-.13 F .942(ger ar)-.195
F .942(gument, which is called the)-.234 F F1 -.234(re)4.192 G(tur).234
E 4.192(nc)-.195 G(ode)-4.192 E F2(.)A .477(By con)33.336 444 R -.195
(ve)-.52 G .478(ntion, a return code of 0 is used to \215ag the normal \
and successful conclusion of).195 F 5.916(ap)33.336 459 S 2.666
(rogram, an)-5.916 F 2.666
(ything else indicates an error or abnormal end \("ABEND" for an)-.195 F
5.916(yo)-.195 G(ld)-5.916 E .18(mainframers out there\).)33.336 474 R
(Equi)6.681 E -.325(va)-.325 G(lently).325 E 3.431(,w)-.845 G .181
(hen the function)-3.431 F F3(main\(\))3.431 E F2 .181
(returns, it is equi)3.431 F -.325(va)-.325 G(lent).325 E 3.917
(to calling)33.336 489 R F3(exit)7.167 E F2 7.167(,a)C 3.917
(nd the return v)-7.167 F 3.916
(alue of main is used as the return code.)-.325 F(Good)10.416 E 2.149
(programming practice calls for main to ha)33.336 504 R 2.539 -.195
(ve a)-.26 H 5.399(ne).195 G(xplicit)-5.594 E F3(return)5.399 E F2 2.149
(so that a consistent)5.399 F 1.305(return code is generated, typically\
 0 since a normal return from main is usually a good)33.336 519 R(sign.)
33.336 534 Q .146(Although it is commonly stated that C program e)33.336
555 R -.195(xe)-.195 G .146(cution be).195 F .146
(gins with the function)-.195 F F3(main)3.396 E F2(,)A .702
(that is not entirely true.)33.336 570 R(The)7.202 E F3(entrypoint)3.952
E F2 .702(of a program is the virtual address at which)3.952 F -.195
(exe)33.336 585 S .153(cution be).195 F .153
(gins, and is found in the e)-.195 F -.195(xe)-.195 G .153
(cutable \214le.).195 F .154(When a program has been compiled)6.653 F
.175(with the standard C library)33.336 600 R 3.425(,t)-.845 G .175
(he entrypoint is a function called)-3.425 F F3(__start)3.425 E F2 3.425
(,w)C .175(hich performs)-3.425 F(an)33.336 615 Q 4.183(yr)-.195 G .933
(equired library initializations and then in)-4.183 F -.26(vo)-.52 G
-.13(ke).26 G(s).13 E F3(main)4.184 E F2 7.434(.W)C(hen)-7.434 E F3
(main)4.184 E F2 .934(returns, library)4.184 F .846
(cleanup is performed.)33.336 630 R .846(In particular)7.346 F 4.096(,n)
-.52 G .846(ote that stdio b)-4.096 F(uf)-.26 E .846
(fers are \215ushed here, so that e)-.325 F -.195(ve)-.325 G(n).195 E
2.057(when a programmer has been slopp)33.336 645 R 5.307(ya)-.13 G
2.057(nd has allo)-5.307 F(wed)-.325 E F3(main)5.307 E F2 2.057
(to return without calling)5.307 F F3(fclose)33.336 660 Q F2 3.25(,d)C
(ata are not lost.)-3.25 E/F4 10/Courier@0 SF
(_start\(int argc,char **argv,char **envp\))33.336 672 Q({)33.336 684 Q
(int rc;)33.336 696 Q(extern char **environ;)33.336 708 Q
(/* perform initialization of stdio and other libs */)90.936 720 Q
(environ=envp;)90.936 732 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 12)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(rc=main\(argc,argv,envp\);)90.936 117 Q
(/* execute atexit callbacks */)90.936 129 Q
(/* close and flush all stdio streams */)90.936 141 Q
(/* other library cleanup */)90.936 153 Q(_exit\(rc\);)90.936 165 Q(})
33.336 177 Q/F2 13/Times-Roman@0 SF .973(On man)33.336 198 R 4.223(yU)
-.195 G .973(NIX systems, a mechanism called)-4.223 F/F3 13/Courier@0 SF
(atexit)4.223 E F2 .972(is pro)4.222 F 4.222(vided. Additional)-.195 F
(cleanup)4.222 E(functions can be re)33.336 213 Q
(gistered by calling ate)-.195 E(xit:)-.195 E F1(f_cleanup\(void\))
33.336 225 Q({)33.336 237 Q(fprintf\(stderr,"I'm going away now\\n"\);)
90.936 249 Q(})33.336 261 Q(main\(\))33.336 285 Q({)33.336 297 Q(....)
90.936 309 Q(atexit\(f_cleanup\);)90.936 321 Q(...)90.936 333 Q(})33.336
345 Q F2(The re)33.336 360 Q(gistered cleanup routines are called in re)
-.195 E -.195(ve)-.325 G(rse order of their re).195 E(gistration.)-.195
E F3(exit\(3\))33.336 381 Q F2 3.971(,w)C .721
(hich is a standard library function, e)-3.971 F -.195(ve)-.325 G .721
(ntually calls the real e).195 F .721(xit system call)-.195 F F3
(_exit\(2\))33.336 396 Q F2 5.477(,w)C 2.227
(hich causes the termination of the process, b)-5.477 F 2.227
(ut \214rst e)-.26 F -.195(xe)-.195 G 2.227(cutes all of the).195 F
2.378(cleanup routines.)33.336 411 R 2.378
(The result is that both calling)8.878 F F3(exit)5.628 E F2 2.378
(or returning from)5.628 F F3(main)5.628 E F2(ha)5.628 E -.195(ve)-.26 G
(identical semantics.)33.336 426 Q 6.106(Ap)33.336 447 S 2.856
(rocess can also be terminated when it recei)-6.106 F -.195(ve)-.325 G
6.106(sa).195 G/F4 13/Times-Bold@0 SF(signal)A F2 9.355(.A)C 2.855
(signal is the virtual)-3.25 F .292(computer equi)33.336 462 R -.325(va)
-.325 G .292(lent of an interrupt.).325 F .292
(It can be sent from another process, or can be raised)6.792 F(ag)33.336
477 Q 2.382(ainst the process by the operating system because the proce\
ss performed an ille)-.065 F -.065(ga)-.195 G(l).065 E 3.014
(operation, attempted to access a bad memory location, or for v)33.336
492 R 3.014(arious other reasons.)-.325 F 1.218(Signals do not al)33.336
507 R -.13(wa)-.13 G 1.218(ys result in termination.).13 F 1.218
(Some signals may be ignored, deferred, or)7.718 F 3.25
(handled. Signals)33.336 522 R(will be co)3.25 E -.195(ve)-.195 G
(red in depth in subsequent units.).195 E 1.028
(Processes that die because of a signal will not ha)33.336 543 R 1.418
-.195(ve a c)-.26 H 1.028(hance to run the standard library).195 F -.195
(ex)33.336 558 S .803(it functions, therefore stdio b).195 F(uf)-.26 E
.803(fers will not be \215ushed, etc.)-.325 F .802
(This is one of the reasons)7.302 F(wh)33.336 573 Q(y)-.065 E F3(stderr)
5.687 E F2 2.437(is, by def)5.687 F 2.437(ault, unb)-.13 F 5.687
(uferred. In)-.26 F 2.437(the e)5.687 F -.195(ve)-.325 G 2.437
(nt that the process is killed, it is).195 F(bene\214cial to see all of\
 the error messages leading up to that point.)33.336 588 Q(Re)33.336 609
Q -.065(ga)-.195 G 1.294(rdless of the termination reason, when a proce\
ss terminates, all \214le descriptors are).065 F 1.593(closed by the k)
33.336 624 R 1.593(ernel as if)-.13 F F3(close)4.843 E F2 1.593
(had been called on them.)4.843 F 1.594(All resources used by the)8.094
F 1.739(process \(such as memory\) are freed \(unless the)33.336 639 R
4.989(ya)-.195 G 1.739(re also being shared by other e)-4.989 F(xtant)
-.195 E 3.25(processes\). Other)33.336 654 R(state information \(such a\
s locks held by the process\) is also adjusted.)3.25 E 1.667(The e)
33.336 675 R 1.667(xiting process becomes a)-.195 F F4(zombie)4.917 E F2
4.917(,c)C 1.667(onsuming no resources, b)-4.917 F 1.668
(ut still possessing a)-.26 F 2.531(process id.)33.336 690 R 2.53(The f\
unction of the zombie is to hold the statistics about the life of the)
9.031 F(process.)33.336 705 Q 2.34(If the e)33.336 726 R 2.34
(xiting process has an)-.195 F 5.59(ys)-.195 G(urvi)-5.59 E 2.34
(ving children, the)-.325 F 5.59(yb)-.195 G 2.34(ecome orphans.)-5.59 F
2.34(Their parent)8.84 F .666(process id \(ppid\) is reset to 1.)33.336
741 R .665(This, you may recall, is the process id of the init process,)
7.165 F 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 13)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF
(which inherits all orphaned processes on the system.)33.336 120 Q -1.04
(Ty)33.336 141 S(pically)1.04 E 3.89(,t)-.845 G .64
(he parent process claims its zombie child by e)-3.89 F -.195(xe)-.195 G
.64(cuting the).195 F/F2 13/Courier@0 SF(wait)3.89 E F1 .64
(system call.)3.89 F .894(The e)33.336 156 R .894
(xit status of the process will be pack)-.195 F .894
(ed into a 16-bit inte)-.13 F(ger)-.195 E 7.393(.I)-.715 G 4.143(tw)
-7.393 G .893(ill indicate either)-4.143 F .258
(that the process terminated by calling e)33.336 171 R .258
(xit, and will supply the return code \(truncated to 8)-.195 F .295
(bits\), or that the process terminated from a signal.)33.336 186 R .294
(There are macros to decode this status)6.795 F -.13(wo)33.336 201 S
(rd, for e).13 E(xample:)-.195 E 0 0 468 578 -119.024 147 33.336 341.024
PBEGIN
%%BeginDocument: waitstat.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: waitstat.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 20 02:01:21 2006
%%For: hak@lex ()
%%BoundingBox: 0 0 578 147
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 147 moveto 0 0 lineto 578 0 lineto 578 147 lineto closepath clip newpath
-71.3 253.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
7.500 slw
n 10800 1800 m
 10800 3000 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 7200 1800 m
 7200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7800 1800 m
 7800 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 8400 1800 m
 8400 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 9000 1800 m
 9000 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 9600 1800 m
 9600 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 10200 1800 m
 10200 3000 l gs col0 s gr  [] 0 sd
% Polyline
n 6600 1800 m
 6600 3000 l gs col0 s gr 
% Polyline
gs  clippath
6330 3060 m 6270 3060 l 6270 3212 l 6300 3092 l 6330 3212 l cp
eoclip
n 7200 3300 m 6300 3300 l
 6300 3075 l gs col0 s gr gr

% arrowhead
n 6330 3212 m 6300 3092 l 6270 3212 l  col0 s
% Polyline
gs  clippath
10680 3060 m 10620 3060 l 10620 3212 l 10650 3092 l 10680 3212 l cp
eoclip
n 10425 4050 m 10650 4050 l
 10650 3075 l gs col0 s gr gr

% arrowhead
n 10680 3212 m 10650 3092 l 10620 3212 l  col0 s
/Times-Roman ff 600.00 scf sf
6900 2700 m
gs 1 -1 sc (Signal Number) col0 sh gr
/Times-Roman ff 210.00 scf sf
6150 2025 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 210.00 scf sf
6225 2175 m
gs 1 -1 sc (O) col0 sh gr
/Times-Roman ff 210.00 scf sf
6300 2325 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 210.00 scf sf
6375 2475 m
gs 1 -1 sc (E) col0 sh gr
/Times-Roman ff 210.00 scf sf
6075 2475 m
gs 1 -1 sc (D) col0 sh gr
/Times-Roman ff 210.00 scf sf
6150 2625 m
gs 1 -1 sc (U) col0 sh gr
/Times-Roman ff 210.00 scf sf
6225 2775 m
gs 1 -1 sc (M) col0 sh gr
/Times-Roman ff 210.00 scf sf
6375 2925 m
gs 1 -1 sc (P) col0 sh gr
/Times-Roman ff 210.00 scf sf
7275 3375 m
gs 1 -1 sc (Set if a core dump file was produced) col0 sh gr
/Times-Roman ff 210.00 scf sf
7200 3900 m
gs 1 -1 sc (Signal # which killed the process, or 0) col0 sh gr
/Times-Roman ff 210.00 scf sf
7200 4170 m
gs 1 -1 sc (if the process exited normally) col0 sh gr
% Polyline
 [60] 0 sd
n 1800 1800 m
 1800 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2400 1800 m
 2400 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3000 1800 m
 3000 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3600 1800 m
 3600 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4200 1800 m
 4200 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4875 1800 m
 4875 3000 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5400 1800 m
 5400 3000 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
3630 3060 m 3570 3060 l 3570 3212 l 3600 3092 l 3630 3212 l cp
eoclip
n 3600 3450 m
 3600 3075 l gs col0 s gr gr

% arrowhead
n 3630 3212 m 3600 3092 l 3570 3212 l  col0 s
/Times-Roman ff 600.00 scf sf
1950 2700 m
gs 1 -1 sc (Return Code) col0 sh gr
/Times-Roman ff 210.00 scf sf
2025 3750 m
gs 1 -1 sc (Return code value, or 0 if process) col0 sh gr
/Times-Roman ff 210.00 scf sf
2025 4020 m
gs 1 -1 sc (was terminated with a signal) col0 sh gr
% Polyline
n 1200 1800 m 10800 1800 l 10800 3000 l 1200 3000 l
 cp gs col0 s gr 
% Polyline
n 6000 1800 m
 6000 3000 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 14)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(#include <sys/wait.h>)33.336 117 Q
(#include <wstat.h>)33.336 129 Q(pid_t cpid;)33.336 153 Q
(unsigned status;)33.336 165 Q(if \(\(cpid=wait\(&status\)\)== -1\))
33.336 189 Q({)33.336 201 Q(perror\("wait failed"\);)90.936 213 Q(})
33.336 225 Q(else)33.336 237 Q({)33.336 249 Q
(fprintf\(stderr,"Process %d ",cpid\);)90.936 261 Q(if \(status!=0\))
90.936 273 Q({)90.936 285 Q(if \(WIFSIGNALED\(status\)\))148.536 297 Q
({)148.536 309 Q(fprintf\(stderr,"Exited with signal %d\\n",)206.136 321
Q(WTERMSIG\(status\)\);)263.736 333 Q(else)177.336 345 Q
(fprintf\(stderr,"Exited with nz return val %d\\n",)225.336 357 Q
(WEXITSTATUS\(status\)\);)273.336 369 Q(return -1;)177.336 381 Q(})
129.336 393 Q(})90.936 405 Q(else)90.936 417 Q
(fprintf\(stderr,"Exited normally\\n"\);)148.536 429 Q(})33.336 441 Q/F2
13/Times-Roman@0 SF 3.987(Another form of w)33.336 456 R 3.987(ait is)
-.13 F/F3 13/Courier@0 SF(wait3)7.237 E F2 3.987
(which can be used to obtain the resource usage)7.237 F
(information for the child process:)33.336 471 Q F1
(#include <sys/wait.h>)33.336 483 Q(#include <sys/time.h>)33.336 495 Q
(#include <sys/resource.h>)33.336 507 Q(struct rusage ru;)33.336 531 Q
(int cpid;)33.336 543 Q(unsigned status;)33.336 555 Q
(if \(wait3\(&status,0,&ru\)== -1\))90.936 567 Q({)90.936 579 Q
(perror\("wait3"\);)148.536 591 Q(})90.936 603 Q(else)90.936 615 Q({)
90.936 627 Q(fprintf\(stderr,"Child process %d consumed)148.536 639 Q
(%ld.%.6d seconds of user time\\n",)206.136 651 Q(pid,)206.136 663 Q
(ru.ru_utime.tv_sec,)206.136 675 Q(ru.ru_utime.tv_usec\);)206.136 687 Q
(})90.936 699 Q(})33.336 711 Q F2 .687
(Among the resource usage information k)33.336 732 R .687
(ept for each process is the total)-.13 F/F4 13/Times-Bold@0 SF .687
(user CPU time)3.937 F 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 15)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(and)33.336 120 Q/F2 13/Times-Bold@0 SF
.182(system CPU time)3.432 F F1 6.682(.U)C .182
(ser time is time accumulated e)-6.682 F -.195(xe)-.195 G .182
(cuting user).195 F(-le)-.26 E -.195(ve)-.325 G 3.432(lc).195 G 3.432
(ode. I.e.)-3.432 F(the)3.432 E .166(total amount of time that the virt\
ual processor \(the process\) had use of a ph)33.336 135 R .165
(ysical CPU, in)-.065 F 2.403(user mode.)33.336 150 R(Lik)8.904 E -.325
(ew)-.13 G 2.404(ise, system time is the time accumulated e).325 F -.195
(xe)-.195 G 2.404(cuting k).195 F 2.404(ernel code on)-.13 F .312
(behalf of the process.)33.336 165 R .311
(The sum of user+system time is the total amount of CPU time that)6.811
F 1.896(the process consumed during its lifetime.)33.336 180 R 1.896
(This will al)8.396 F -.13(wa)-.13 G 1.896(ys be less than the).13 F F2
-.234(re)5.147 G 1.897(al time).234 F F1 1.526
(elapsed between process start and process termination, since the ph)
33.336 195 R 1.525(ysical processor \(or)-.065 F 2.21(processors\) is s\
hared among numerous virtual processors, as well as system o)33.336 210
R -.195(ve)-.195 G(rhead).195 E(functions.)33.336 225 Q 1.16
(There are additional calls such as)33.336 246 R/F3 13/Courier@0 SF
(waitpid)4.41 E F1 1.16(which will not return until a speci\214c child)
4.41 F .034(process has e)33.336 261 R .034(xited \(as opposed to)-.195
F F3(wait)3.285 E F1 .035(which will return when an)3.285 F 3.285(yc)
-.195 G .035(hild has e)-3.285 F .035(xited\), and)-.195 F F3(wait4)
33.336 276 Q F1 .343(which is lik)3.593 F(e)-.13 E F3(wait3)3.593 E F1
.343(with the semantics of)3.593 F F3(waitpid)3.593 E F1 6.842(.M)C .342
(ore detail can be found)-6.842 F(in the man pages.)33.336 291 Q 4.346
(Ap)33.336 312 S 1.096(arent process that does not perform a w)-4.346 F
1.096(ait to pick up its zombie children will cause)-.13 F .97(the syst\
em process table to become cluttered with a lot of <zombie> processes.)
33.336 327 R .97(In later)7.47 F .799(units we will see ho)33.336 342 R
4.05(wb)-.325 G .8(etter to manage this.)-4.05 F .8(If a parent e)7.3 F
.8(xits before the child, then who)-.195 F 2.3
(will collect the zombie status?)33.336 357 R 2.3(The answer is the)8.8
F F3(init)5.55 E F1 2.3(process, which becomes the)5.55 F(parent of an)
33.336 372 Q 3.25(yo)-.195 G(rphaned process.)-3.25 E F2 -.962(Ty)
191.318 402 S(pical f).962 E(ork/exec \215o)-.325 E 3.25(wc)-.13 G(ycle)
-3.25 E 0 0 468 793 -141.639 240 33.336 579.639 PBEGIN
%%BeginDocument: ancestry.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ancestry.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Feb  7 23:18:26 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 793 240
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 240 moveto 0 0 lineto 793 0 lineto 793 240 lineto closepath clip newpath
-48.8 297.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
gs  clippath
2865 2880 m 2865 2820 l 2713 2820 l 2833 2850 l 2713 2880 l cp
eoclip
n 2175 2850 m
 2850 2850 l gs col0 s gr gr

% arrowhead
n 2713 2880 m 2833 2850 l 2713 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
2250 2700 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
4890 2880 m 4890 2820 l 4738 2820 l 4858 2850 l 4738 2880 l cp
eoclip
n 4200 2850 m
 4875 2850 l gs col0 s gr gr

% arrowhead
n 4738 2880 m 4858 2850 l 4738 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
4275 2700 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
6915 4605 m 6915 4545 l 6763 4545 l 6883 4575 l 6763 4605 l cp
eoclip
n 6225 4575 m
 6900 4575 l gs col0 s gr gr

% arrowhead
n 6763 4605 m 6883 4575 l 6763 4545 l  col0 s
/Times-Roman ff 200.00 scf sf
6300 4425 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
gs  clippath
11640 4605 m 11640 4545 l 11488 4545 l 11608 4575 l 11488 4605 l cp
eoclip
n 10950 4575 m
 11625 4575 l gs col0 s gr gr

% arrowhead
n 11488 4605 m 11608 4575 l 11488 4545 l  col0 s
/Times-Roman ff 200.00 scf sf
11025 4425 m
gs 1 -1 sc (EXEC) col0 sh gr
% Polyline
n 825 975 m 2175 975 l 2175 1875 l 825 1875 l
 cp gs col0 s gr 
% Polyline
n 825 2400 m 2175 2400 l 2175 3300 l 825 3300 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1470 2415 m 1530 2415 l 1530 2263 l 1500 2383 l 1470 2263 l cp
eoclip
n 1500 1875 m
 1500 2400 l gs col0 s gr gr

% arrowhead
n 1470 2263 m 1500 2383 l 1530 2263 l  col0 s
% Polyline
n 2850 2400 m 4200 2400 l 4200 3300 l 2850 3300 l
 cp gs col0 s gr 
% Polyline
n 4875 2400 m 6225 2400 l 6225 3300 l 4875 3300 l
 cp gs col0 s gr 
% Polyline
n 4875 4050 m 6225 4050 l 6225 4950 l 4875 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
5445 4065 m 5505 4065 l 5505 3913 l 5475 4033 l 5445 3913 l cp
eoclip
n 5475 3300 m
 5475 4050 l gs col0 s gr gr

% arrowhead
n 5445 3913 m 5475 4033 l 5505 3913 l  col0 s
% Polyline
n 6900 4050 m 8250 4050 l 8250 4950 l 6900 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7140 2880 m 7140 2820 l 6988 2820 l 7108 2850 l 6988 2880 l cp
eoclip
n 6225 2850 m
 7125 2850 l gs col0 s gr gr

% arrowhead
n 6988 2880 m 7108 2850 l 6988 2820 l  col0 s
% Polyline
gs  clippath
8640 4530 m 8640 4470 l 8488 4470 l 8608 4500 l 8488 4530 l cp
eoclip
n 8250 4500 m
 8625 4500 l gs col0 s gr gr

% arrowhead
n 8488 4530 m 8608 4500 l 8488 4470 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
7812 3119 m 7767 3158 l 7866 3273 l 7811 3163 l 7912 3234 l cp
eoclip
n 8775 4275 m
 7800 3150 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7912 3234 m 7811 3163 l 7866 3273 l  col0 s
% Polyline
gs  clippath
10065 2880 m 10065 2820 l 9913 2820 l 10033 2850 l 9913 2880 l cp
eoclip
n 8100 2850 m
 10050 2850 l gs col0 s gr gr

% arrowhead
n 9913 2880 m 10033 2850 l 9913 2820 l  col0 s
% Polyline
gs  clippath
9945 4065 m 10005 4065 l 10005 3913 l 9975 4033 l 9945 3913 l cp
eoclip
n 9975 2925 m
 9975 4050 l gs col0 s gr gr

% arrowhead
n 9945 3913 m 9975 4033 l 10005 3913 l  col0 s
% Polyline
n 9600 4050 m 10950 4050 l 10950 4950 l 9600 4950 l
 cp gs col0 s gr 
% Polyline
n 11625 4050 m 12975 4050 l 12975 4950 l 11625 4950 l
 cp gs col0 s gr 
% Polyline
gs  clippath
13365 4530 m 13365 4470 l 13213 4470 l 13333 4500 l 13213 4530 l cp
eoclip
n 12975 4500 m
 13350 4500 l gs col0 s gr gr

% arrowhead
n 13213 4530 m 13333 4500 l 13213 4470 l  col0 s
% Polyline
gs  clippath
11340 2880 m 11340 2820 l 11188 2820 l 11308 2850 l 11188 2880 l cp
eoclip
n 10200 2850 m
 11325 2850 l gs col0 s gr gr

% arrowhead
n 11188 2880 m 11308 2850 l 11188 2820 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
12004 3041 m 11970 3091 l 12097 3175 l 12014 3084 l 12130 3125 l cp
eoclip
n 13575 4125 m
 12000 3075 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 12130 3125 m 12014 3084 l 12097 3175 l  col0 s
% Polyline
gs  clippath
13740 2880 m 13740 2820 l 13588 2820 l 13708 2850 l 13588 2880 l cp
eoclip
n 12150 2850 m
 13725 2850 l gs col0 s gr gr

% arrowhead
n 13588 2880 m 13708 2850 l 13588 2820 l  col0 s
/Times-Roman ff 200.00 scf sf
975 1200 m
gs 1 -1 sc (pid=1) col0 sh gr
/Times-Roman ff 200.00 scf sf
1125 1500 m
gs 1 -1 sc (init) col0 sh gr
/Times-Roman ff 200.00 scf sf
1575 2250 m
gs 1 -1 sc (FORK) col0 sh gr
/Times-Roman ff 200.00 scf sf
900 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
2925 3135 m
gs 1 -1 sc ( login) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 2625 m
gs 1 -1 sc (pid=100) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 3135 m
gs 1 -1 sc (sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
5550 3675 m
gs 1 -1 sc (FORK) col0 sh gr
/Times-Roman ff 200.00 scf sf
5025 4275 m
gs 1 -1 sc (pid=120) col0 sh gr
/Times-Roman ff 200.00 scf sf
5400 4800 m
gs 1 -1 sc (sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
1275 3075 m
gs 1 -1 sc (init) col0 sh gr
/Times-Roman ff 200.00 scf sf
7050 4275 m
gs 1 -1 sc (pid=120) col0 sh gr
/Times-Roman ff 200.00 scf sf
7050 4785 m
gs 1 -1 sc (ls) col0 sh gr
/Times-Roman ff 200.00 scf sf
7200 2850 m
gs 1 -1 sc (WAIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
7200 3105 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
8625 4500 m
gs 1 -1 sc (EXIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
8625 4755 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
9675 4275 m
gs 1 -1 sc (pid=121) col0 sh gr
/Times-Roman ff 200.00 scf sf
9675 4785 m
gs 1 -1 sc (   sh) col0 sh gr
/Times-Roman ff 200.00 scf sf
11700 4350 m
gs 1 -1 sc (pid=121) col0 sh gr
/Times-Roman ff 200.00 scf sf
11700 4860 m
gs 1 -1 sc (   cat) col0 sh gr
/Times-Roman ff 200.00 scf sf
13425 4425 m
gs 1 -1 sc (EXIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
13425 4680 m
gs 1 -1 sc (syscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
11475 2775 m
gs 1 -1 sc (WAIT) col0 sh gr
/Times-Roman ff 200.00 scf sf
11475 3030 m
gs 1 -1 sc (syscall) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND F1 .872
(When the system is \214rst booted, there is only one user)33.336
615.639 R(-le)-.26 E -.195(ve)-.325 G 4.122(lp).195 G .872
(rocess, which is kno)-4.122 F .872(wn as)-.325 F F3(init)33.336 630.639
Q F1 .181(and has pid of 1.)3.431 F F3(init)6.68 E F1 .18
(is responsible for the user)3.43 F(-le)-.26 E -.195(ve)-.325 G 3.43(li)
.195 G .18(ntialization of the system,)-3.43 F .066
(starting the user interf)33.336 645.639 R .066
(ace, starting system services, etc.)-.13 F .066(In the abo)6.566 F .456
-.195(ve ex)-.195 H .067(tremely simpli\214ed).195 F(vie)33.336 660.639
Q -.845(w,)-.325 G F3(init)5.027 E F1 .932(has spa)4.182 F .932
(wned \(by fork and e)-.195 F -.195(xe)-.195 G .931
(c\) a process which listens on a login terminal).195 F .263
(\(e.g. one of the virtual consoles on Linux\).)33.336 675.639 R .264
(This program,)6.764 F F3(login)3.514 E F1 3.514(,a)C .264
(ccepts the user name)-3.514 F 1.661(and passw)33.336 690.639 R 1.661
(ord, v)-.13 F 1.661(eri\214es the credentials, and then e)-.195 F -.195
(xe)-.195 G 1.66(cs itself into a command-line shell.).195 F(The def)
33.336 705.639 Q(ault shell is)-.13 E F3(/bin/sh)3.25 E F1(.)A -1.04(Ty)
33.336 726.639 S(pically)1.04 E 3.304(,t)-.845 G .054(he shell recei)
-3.304 F -.195(ve)-.325 G 3.304(sac).195 G .054(ommand as a line of te)
-3.304 F .055(xt, parses it, and forks and e)-.195 F -.195(xe)-.195 G
.055(cs the).195 F .346(command so it runs in a ne)33.336 741.639 R
3.595(wp)-.325 G 3.595(rocess. Unless)-3.595 F .345
(the command is follo)3.595 F .345(wed by the)-.325 F F3(&)3.595 E F1
(symbol,)3.595 E 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 3/pg 16)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.07(it runs in the)33.336 120 R/F2 13
/Times-Italic@0 SF(for)4.32 E -.52(eg)-.481 G -.585(ro).52 G(und).585 E
F1 1.07(and the shell w)4.32 F 1.071(aits for the child process to e)
-.13 F 4.321(xit. It)-.195 F 1.071(collects the)4.321 F -.195(ex)33.336
135 S 2.279(it status \(via one of the w).195 F 2.278(ait system call v)
-.13 F 2.278(ariants abo)-.325 F -.195(ve)-.195 G 5.528(\)a).195 G 2.278
(nd then accepts the ne)-5.528 F(xt)-.195 E 4.449(command. One)33.336
150 R 1.199(can vie)4.449 F 4.449(wt)-.325 G 1.2(he e)-4.449 F 1.2
(xit status of the last command through the shell v)-.195 F(ariable)
-.325 E/F3 13/Courier@0 SF($?)33.336 165 Q F1 3.25(,e)C(.g.)-3.25 E/F4
10/Courier@0 SF 6($l)33.336 177 S 6(s-)-6 G(foobarargument)-6 E
(ls: invalid option -- e)33.336 189 Q
(Try `ls --help' for more information.)33.336 201 Q 6($e)33.336 225 S
(cho $?)-6 E(1)33.336 237 Q 0 Cg EP
%%Trailer
end
%%EOF
